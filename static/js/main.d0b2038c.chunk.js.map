{"version":3,"sources":["services/timeout/index.js","services/localStorage/index.js","assistive functions/index.js","components/AutoLogoutReminder/AutoLogoutReminder.js","services/predicates/index.js","services/errors handling/redirectError.js","services/errors handling/handleErrors.js","services/API/v1/baseFetch.js","components/conditional components/Loading/Loading.js","components/low-level components/MoviePoster/MoviePoster.js","components/HomePage/parts/MovieLinkWithTitle/MovieLinkWithTitle.js","components/HomePage/parts/MoviesGroup/MoviesGroup.js","components/HomePage/HomePage.js","components/ContactUs/parts/ContactWay/ContactWay.js","components/ContactUs/ContactUs.js","components/low-level components/LoadingSpinner/LoadingSpinner.js","components/low-level components/FormInput/FormInput.js","components/low-level components/SubmitBtn/SubmitBtn.js","components/Register/Register.js","components/conditional components/LogInNeeded/LogInNeeded.js","components/Login/Login.js","components/low-level components/MovieInfo/MovieInfo.js","components/tickets components/Reservation/parts/BuyTicket/parts/assistiveFunctions.js","components/low-level components/ScreeningInfo/ScreeningInfo.js","components/tickets components/MyTickets/parts/Movies.js","components/tickets components/MyTickets/MyTickets.js","components/Prices/parts/PriceList/PriceList.js","components/Prices/parts/pricesData.js","components/Prices/Prices.js","components/tickets components/Reservation/parts/Movie/Movie.js","components/low-level components/Select/Select.js","components/tickets components/Reservation/parts/BuyTicket/BuyTicket.js","components/tickets components/Reservation/Reservation.js","components/ServerError/ServerError.js","components/AutoLogout/AutoLogout.js","components/App/routing/routingList.js","components/NavBar/parts/linksList.js","components/NavBar/NavBar.js","components/Footer/parts/Attribution/Attribution.js","components/Footer/parts/CinemasList/CinemasList.js","components/Footer/parts/CinemasList/data.js","components/Footer/parts/OurCinemas/OurCinemas.js","components/Footer/parts/ContactLink/ContactLink.js","components/Footer/parts/Applications/Applications.js","components/Footer/parts/Applications/data.js","components/Footer/Footer.js","components/App/App.js","index.js"],"names":["timeout","func","time","setTimeout","getItem","item","window","localStorage","setItem","value","clearLocalStorage","clear","classes","scrollTop","scrollTo","top","bahavior","addClasses","element","Array","forEach","newClass","classList","add","removeClasses","remove","modifyClasses","classesToDel","classesToAdd","startLoading","show","hide","visible","invisible","finishLoading","disableElement","setAttribute","enableElement","removeAttribute","AutoLogoutReminder","props","formatCountdown","Math","round","state","minute","floor","seconds","formatedSeconds","countdownAutologout","intervalId","setInterval","setState","prevState","cancelInterval","clearInterval","closeWindow","grid","wrapperRef","current","renewSession","redirectWrapperRef","renewWrapperRef","agreeToRenew","clearTimeout","getAutoLogoutTimerId","getAutoLogoutReminderTimerId","history","push","getTokenExpiration","Date","now","React","createRef","this","submitBtn","cursorPointer","className","ref","renewSessionText","onClick","renewSessionBtn","icon","faTimes","redirectToLoginText","agreeToRenewBtn","cancelRenewBtn","Component","defaultProps","withRouter","isLower","x","y","isLowerEqual","z","isEqual","redirectError","err","pathname","errorCodes","errorTexts","handleErrors","status","optionsObj","concurrentReserv","handler","message","error","Error","statusCode","ok","created","badRequest","unauthorized","forbidden","notFound","conflict","unprocessableEntity","internalServerError","badReqErrMsg","authErrMsg","forbiddenErrMsg","concurrentReservErrMsg","notFoundErrMsg","conflictErrMsg","validationErrMsg","serverErrMsg","baseUrl","baseFetch","a","path","body","contentType","method","authToken","fetch","headers","Authorization","Loading","loadingText","MoviePoster","src","alt","available","image","undefined","MovieLinkWithTitle","imageUrl","_id","title","to","appName","setMovieId","data-movie-id","MoviesGroup","movies","map","index","key","renderMovies","HomePage","ageOfNewFMovie","classifyMovies","newMovies","recommendedMovies","movie","movieProductionDate","getFullYear","isHigherEqual","year","screenings","availableScreenings","unavailableScreenings","respMovies","json","getScreenings","checkAvailability","unavailable","moviesWithAvailability","addAvailability","respScreenings","screening","movie_id","includes","id","availableMovies","unavailableMovies","moviesCopy","availableId","unavailableId","wereNotMoviesFetched","length","console","log","ContactWay","iconSemanticUI","header","content","main","secondary","communication","way","resource","wrapperClass","iconClass","titleClass","textsClass","ContactUs","getVariables","finalWidthOfWindow","childrenNum","children","wrapper","changeToOneColumn","style","changeToMultiColumn","handleResize","windowWidth","innerWidth","count","width","addEventListener","nextProps","nextState","predicateOne","predicateTwo","didStateNotChange","removeEventListener","LoadingSpinner","outerWrapper","spinnerWrapper","spinner","reference","FormInput","moduleName","formValue","validationVal","type","name","placeholder","inputRef","minlength","maxlength","required","onChange","onBlur","htmlFor","minLength","maxLength","SubmitBtn","btnText","Register","renderInputs","firstName","firstNameRef","validationMsg","validationMsgFirstName","validationMsgName","lastName","lastNameRef","validationMsgLastName","email","emailRef","validationMsgEmail","pass","passRef","validationMsgPass","confirmPass","confirmPassRef","validationMsgConfirmPass","handleInputChange","validateInput","negativeValidation","inputClassList","warningText","neutralInput","invalidInput","replace","positiveValidation","inputName","inputValue","test","polishNounForm","validateCommonTextInput","validatePass","msg","afterSubmitInfo","validateRegisterInfo","errMsg","valid","invalid","validateRegisterInfoParagraph","validateRegisterInfoRef","isRegistrationSuccessful","dispatchToLogin","checksDataEntirety","every","getUserId","endRegister","cursorAuto","registerSpinnerRef","enableRegisterBtn","registerBtnRef","stateKey","handleSubmit","e","preventDefault","disableRegisterBtn","userData","surname","password","confirmPassword","JSON","stringify","areInputsValidatedCorrectyle","focus","onSubmit","registerFormRef","LogInNeeded","logInText","Login","renderLoginInputs","target","endLogin","cusorPointer","loginSpinnerRef","enableLoginBtn","loginBtnRef","handleAutoLogout","expiresIn","autoLogoutTimerId","setAutoLogoutTimerId","disableLoginBtn","loginData","resp","token","userId","setUserId","setAuthToken","setExpiresIn","getExpiresIn","isLoggedIn","validateLoginInfoRef","goBack","cutMovieDescription","fullDescr","compareLenghts","slice","MovieInfo","description","descriptionClass","descrSpanClass","tooltipTextClass","refDescr","refTooltip","descr","innerText","dots","shortDescrWithDotsLength","fullDescrAndTooltipText","dateFormat","toLocaleString","month","day","hour","getAllSeats","room_id","getToken","seats","filtered","rowNum","occuredRows","row","seatNumber","elem","sort","b","setTakenSeats","data","seat_id","ScreeningInfo","seat","timeClass","seatClass","isSeatDefined","Movies","reservations","noTicketsText","doesUserHasTickets","screening_id","renderTickets","MyTickets","user_id","isUserLoggedIn","areReservationsFetched","PriceList","prices","tableClass","rowClass","rows","renderTable","table","el","renderRows","twoD","openDays","normalTicket","kidPupilTicket","senior","threeD","Prices","pricesData","Movie","renderMovie","renderOptionTags","optionTitleProp","dataArr","optionContentFunc","optionValueFunc","fallbackValueProp","doesDataExist","Select","selectNameProp","labelTextProp","spinnerComp","handlerFunc","display","BuyTicket","setAnyState","receivedState","cb","newState","Object","assign","setRowsList","rowsWithSeats","filter","checkAvailableSeats","existingReservations","takenSeats","calculateFreeSeats","getScreeningData","loadingSpinnerRef","setNewState","choosenRow","choosenSeat","freeSeats","rowsList","room","afterReservationUserInfo","classToDel","classToAdd","enableReservation","checkReservationAttempt","takenRow","takenSeat","indexOf","checkConcurrentReservation","wasConcurrentReservationMade","some","rowObj","reservationServerError","validSubmit","invalidSubmit","afterSubmitInfoRef","makeNewReservation","reservationParams","reservStatus","setStateAfterNewReserv","handleRowOptionChange","reservationSpinnerRef","enableBtn","reservationBtnRef","handleDateOptionChange","persist","selectDateRef","Number","selectRowRef","toString","handleSeatOptionChange","selectSeatRef","disableBtn","immutableRows","reservationDone","reservation","free","Reservation","renderReservation","isMovieFetched","getId","ServerError","errCode","location","PureComponent","AutoLogout","infoText","routingList","component","exact","linksList","Link","NavBar","setLoginBtnText","handleWindowResize","dropdownNav","horizontalNav","dropdown","expanded","setActiveNavTab","navBarActiveItem","navChildren","from","activeChild","find","aTag","hash","currentPathName","handleIconClick","navBarWrapperAnimation","navBarMenuIconAnimation","iconWrapperRef","hideNavLinks","isDropdown","hideNavLinksWrapperFunc","renderLinks","loginBtn","renderDropdownIcon","isExpanded","faBars","renderDropdownNav","renderHorizontalNav","renderAdditionalChildren","outerWrapperRef","tabIndex","Attribution","href","CinemasList","cinemasList","OurCinemas","ContactsLink","Applications","dataList","picsData","Footer","ContactLink","App","handleAutoLogoutReminder","autoLogoutReminderTimerId","reminder","setAutoLogoutReminderTimerId","renderRouting","renderAutoLogoutReminder","appWrapperRef","mainContainerRef","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.d0b2038c.chunk.js","sourcesContent":["const timeout = (func, time) => {\r\n  const id = setTimeout(func, time);\r\n  return id;\r\n};\r\n\r\nexport default timeout;\r\n","export const getItem = (item) => {\r\n  return window.localStorage.getItem(item);\r\n};\r\n\r\nexport const setItem = (item, value) => {\r\n  window.localStorage.setItem(item, value);\r\n};\r\n\r\nexport const clearLocalStorage = () => {\r\n  window.localStorage.clear();\r\n};\r\n","/*** Variables ***/\r\nconst classes = {\r\n  invisible: 'invisible',\r\n  visible: 'visible',\r\n  show: 'show',\r\n  hide: 'hide',\r\n};\r\n\r\n/*** Assistive Functions ***/\r\n/* Generic */\r\nexport const scrollTop = () => {\r\n  window.scrollTo({\r\n    top: 0,\r\n    bahavior: 'smooth',\r\n  });\r\n};\r\n\r\nexport const addClasses = (element, classes) => {\r\n  if (!(classes instanceof Array)) classes = [classes];\r\n  classes.forEach((newClass) => {\r\n    element.classList.add(newClass);\r\n  });\r\n};\r\n\r\nexport const removeClasses = (element, classes) => {\r\n  if (!(classes instanceof Array)) classes = [classes];\r\n  classes.forEach((newClass) => {\r\n    element.classList.remove(newClass);\r\n  });\r\n};\r\n\r\nexport const modifyClasses = (\r\n  element,\r\n  classesToDel = [],\r\n  classesToAdd = []\r\n) => {\r\n  removeClasses(element, classesToDel);\r\n  addClasses(element, classesToAdd);\r\n};\r\n\r\nexport const startLoading = (element, classesToDel = [], classesToAdd = []) => {\r\n  const { show, hide, visible, invisible } = classes;\r\n  modifyClasses(\r\n    element,\r\n    [hide, invisible, ...classesToDel],\r\n    [show, visible, ...classesToAdd]\r\n  );\r\n};\r\n\r\nexport const finishLoading = (element) => {\r\n  const { show, hide, visible, invisible } = classes;\r\n  modifyClasses(element, [show, visible], [hide, invisible]);\r\n};\r\n\r\nexport const disableElement = (\r\n  element,\r\n  classesToAdd = [],\r\n  classesToDel = []\r\n) => {\r\n  element.setAttribute('disabled', true);\r\n  modifyClasses(element, classesToDel, classesToAdd);\r\n};\r\n\r\nexport const enableElement = (element, classesToAdd, classesToDel) => {\r\n  element.removeAttribute('disabled', true);\r\n  modifyClasses(element, classesToDel, classesToAdd);\r\n};\r\n\r\n/* Form related */\r\nexport const validateEmail = (emailValue) => {\r\n  if (/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(emailValue))\r\n    return false;\r\n  return true;\r\n};\r\n\r\nexport const validateCommonTextInput = (value) => {\r\n  if (/^[A-Ż]?[a-ż]*$/.test(value)) return false;\r\n  return true;\r\n};\r\n\r\nexport const validateSurname = (value) =>\r\n  !/(^[A-Za-ż][']?[A-Z]?[a-ż]+[-|\\s]?[A-Za-ż]+$)/.test(value);\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport {\r\n  clearLocalStorage,\r\n  getItem as getTokenExpiration,\r\n  setItem,\r\n} from '../../services/localStorage';\r\nimport { getItem } from '../../services/localStorage';\r\nimport { getItem as getAutoLogoutTimerId } from '../../services/localStorage';\r\nimport { getItem as getAutoLogoutReminderTimerId } from '../../services/localStorage';\r\nimport { addClasses, modifyClasses } from '../../assistive functions';\r\nimport './AutoLogoutReminder.css';\r\n\r\n/*** Variables ***/\r\nconst classes = {\r\n  hide: 'hide',\r\n  show: 'show',\r\n  grid: 'grid',\r\n  cursorPointer: 'cursor-pointer',\r\n  submitBtn: 'submitBtn',\r\n};\r\n\r\n/*** Component ***/\r\nclass AutoLogoutReminder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      time: getTokenExpiration('expiresIn') - Date.now(),\r\n    };\r\n    this.wrapperRef = React.createRef();\r\n    this.redirectWrapperRef = React.createRef();\r\n    this.renewWrapperRef = React.createRef();\r\n  }\r\n\r\n  /* Lifecycle Methods */\r\n  componentDidMount() {\r\n    this.countdownAutologout();\r\n  }\r\n\r\n  /* Assistive Methods */\r\n  formatCountdown = () => {\r\n    const time = Math.round(this.state.time / 1000);\r\n    const minute = Math.floor(time / 60);\r\n    const seconds = time - minute * 60;\r\n    const formatedSeconds = seconds > 9 ? seconds : `0${seconds}`;\r\n    return `${minute}:${formatedSeconds}`;\r\n  };\r\n\r\n  countdownAutologout = () => {\r\n    const intervalId = setInterval(() => {\r\n      this.setState((prevState) => {\r\n        return { time: prevState.time - 1000 };\r\n      });\r\n    }, 1000);\r\n    setItem('intervalId', intervalId);\r\n  };\r\n\r\n  cancelInterval = () => {\r\n    clearInterval(getItem('intervalId'));\r\n  };\r\n\r\n  closeWindow = () => {\r\n    const { hide, grid } = classes;\r\n    this.cancelInterval();\r\n    modifyClasses(this.wrapperRef.current, grid, hide);\r\n  };\r\n\r\n  renewSession = () => {\r\n    const { hide, show } = classes;\r\n    this.cancelInterval();\r\n    modifyClasses(this.redirectWrapperRef.current, hide, show);\r\n    addClasses(this.renewWrapperRef.current, hide);\r\n  };\r\n\r\n  agreeToRenew = () => {\r\n    this.closeWindow();\r\n    clearTimeout(getAutoLogoutTimerId('autoLogoutTimerId'));\r\n    clearTimeout(getAutoLogoutReminderTimerId('autoLogoutReminderTimerId'));\r\n    clearLocalStorage();\r\n    this.props.history.push('/Login');\r\n  };\r\n\r\n  render() {\r\n    const { grid, hide, submitBtn, cursorPointer } = classes;\r\n    return (\r\n      <div\r\n        className={`autoLogoutReminder-wrapper ${grid}`}\r\n        ref={this.wrapperRef}\r\n      >\r\n        <div\r\n          className='autoLogoutReminder-reminder-wrapper'\r\n          ref={this.renewWrapperRef}\r\n        >\r\n          <div className='autoLogoutReminder-reminder-innerWrapper'>\r\n            <div className='autoLogoutReminder-reminder-content'>\r\n              <p className='autoLogoutReminder-reminder-text'>{`Za ${this.formatCountdown()} min. ${\r\n                this.props.renewSessionText\r\n              }`}</p>\r\n              <button\r\n                className={`${submitBtn} ${cursorPointer}`}\r\n                onClick={this.renewSession}\r\n              >\r\n                {this.props.renewSessionBtn}\r\n              </button>\r\n            </div>\r\n            <FontAwesomeIcon icon={faTimes} onClick={this.closeWindow} />\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className={`autoLogoutReminder-redirect-wrapper ${hide}`}\r\n          ref={this.redirectWrapperRef}\r\n        >\r\n          <div className='autoLogoutReminder-redirect-innerWrapper'>\r\n            <p>{this.props.redirectToLoginText}</p>\r\n            <div className='autoLogoutReminder-btns-wrapper'>\r\n              <button\r\n                className={`${submitBtn} ${cursorPointer}`}\r\n                onClick={this.agreeToRenew}\r\n              >\r\n                {this.props.agreeToRenewBtn}\r\n              </button>\r\n              <button\r\n                className={`${submitBtn} ${cursorPointer}`}\r\n                onClick={this.closeWindow}\r\n              >\r\n                {this.props.cancelRenewBtn}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAutoLogoutReminder.defaultProps = {\r\n  renewSessionText: 'zostaniesz wylogowany.',\r\n  redirectToLoginText:\r\n    'Teraz zostaniesz wylogowany i przeniesiony do strony logowania.',\r\n  renewSessionBtn: 'Odnów sesję',\r\n  agreeToRenewBtn: 'Kontynuuj',\r\n  cancelRenewBtn: 'Przerwij',\r\n};\r\n\r\nexport default withRouter(AutoLogoutReminder);\r\n","export const combinePredicates = (predicateOne, predicateTwo) => (x, y, z) =>\r\n  (predicateOne(x, y) && predicateTwo(x, z)) ||\r\n  (predicateOne(y, x) && predicateTwo(z, x));\r\n\r\nexport const isLower = (x, y) => y > x;\r\n\r\nexport const isLowerEqual = (x, z) => z <= x;\r\n\r\nexport const isEqual = (x, y) => {\r\n  return x === y;\r\n};\r\n","const redirectError = (history, err) => {\r\n  history.push({\r\n    pathname: '/servererror',\r\n    state: {\r\n      err,\r\n    },\r\n  });\r\n};\r\n\r\nexport default redirectError;\r\n","/*** Variables ***/\r\nexport const errorCodes = {\r\n  ok: 200,\r\n  created: 201,\r\n  badRequest: 400,\r\n  unauthorized: 401,\r\n  forbidden: 403,\r\n  notFound: 404,\r\n  conflict: 409,\r\n  unprocessableEntity: 422,\r\n  internalServerError: 500,\r\n};\r\n\r\nexport const errorTexts = {\r\n  serverErrMsg: 'Błąd serwera. Spróbuj ponownie później.',\r\n  concurrentReservErrMsg:\r\n    'Przepraszamy, miejsce zostało już zarezerwowane. Odśwież stronę i spróbuj ponownie.',\r\n  validationErrMsg: 'Wprowadzono dane w niedozwolonym formacie.',\r\n  authErrMsg: 'Nieprawidłowy email lub hasło.',\r\n  conflictErrMsg: 'Taki użytkownik już istnieje.',\r\n  badReqErrMsg: 'Niepoprawne żądanie. Spróbuj ponownie później.',\r\n  forbiddenErrMsg: 'Nie masz dostępu do żądanego zasobu.',\r\n  notFoundErrMsg: 'Nie znaleziono żądanego zasobu.',\r\n};\r\n\r\n/*** Functions ***/\r\nexport const handleErrors = (\r\n  status,\r\n  optionsObj = { concurrentReserv: false }\r\n) => {\r\n  const handler = (message, status) => {\r\n    const error = new Error(message);\r\n    error.statusCode = status;\r\n    throw error;\r\n  };\r\n\r\n  const {\r\n    ok,\r\n    created,\r\n    badRequest,\r\n    unauthorized,\r\n    forbidden,\r\n    notFound,\r\n    conflict,\r\n    unprocessableEntity,\r\n    internalServerError,\r\n  } = errorCodes;\r\n  const {\r\n    badReqErrMsg,\r\n    authErrMsg,\r\n    forbiddenErrMsg,\r\n    concurrentReservErrMsg,\r\n    notFoundErrMsg,\r\n    conflictErrMsg,\r\n    validationErrMsg,\r\n    serverErrMsg,\r\n  } = errorTexts;\r\n\r\n  switch (status) {\r\n    case ok:\r\n    case created:\r\n      break;\r\n    case badRequest:\r\n      handler(badReqErrMsg, badRequest);\r\n      break;\r\n    case unauthorized:\r\n      handler(authErrMsg, unauthorized);\r\n      break;\r\n    case forbidden:\r\n      handler(forbiddenErrMsg, forbidden);\r\n      break;\r\n    case notFound:\r\n      if (optionsObj.concurrentReserv)\r\n        handler(concurrentReservErrMsg, notFound);\r\n      else handler(notFoundErrMsg, notFound);\r\n      break;\r\n    case conflict:\r\n      handler(conflictErrMsg, conflict);\r\n      break;\r\n    case unprocessableEntity:\r\n      handler(validationErrMsg, unprocessableEntity);\r\n      break;\r\n    case internalServerError:\r\n      handler(serverErrMsg, internalServerError);\r\n      break;\r\n    default:\r\n      handler(serverErrMsg, internalServerError);\r\n  }\r\n\r\n  return;\r\n};\r\n","export const baseUrl = 'https://mini-kino.herokuapp.com/';\r\n\r\nconst baseFetch = async ({\r\n  path,\r\n  body = null,\r\n  contentType = 'application/json',\r\n  method = 'GET',\r\n  authToken = '',\r\n}) => {\r\n  return await fetch(`${baseUrl}${path}`, {\r\n    method,\r\n    headers: {\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Content-Type': contentType,\r\n      Authorization: `Bearer ${authToken}`,\r\n    },\r\n    body,\r\n  });\r\n};\r\n\r\nexport default baseFetch;\r\n","import React from 'react';\r\n\r\nimport './Loading.css';\r\n\r\n/*** Component ***/\r\nconst Loading = ({ loadingText }) => {\r\n  return (\r\n    <div className=\"loading-wrapper\">\r\n      <div>{loadingText}</div>\r\n      <div className=\"loadingDots-outerWrapper\">\r\n        <div className=\"loadingDots-wrapper\">\r\n          <div> </div> <div> </div> <div> </div> <div> </div> <div> </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nLoading.defaultProps = {\r\n  loadingText: 'Wczytywanie',\r\n};\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\n\r\nimport { isEqual } from '../../../services/predicates';\r\nimport './MoviePoster.css';\r\n\r\nconst MoviePoster = ({ src, alt, available, classes }) => {\r\n  const image = (\r\n    <img className={`${classes} moviePoster-poster`} src={src} alt={alt} />\r\n  );\r\n\r\n  const renderMoviePoster = () => {\r\n    if (isEqual(available, true) || isEqual(available, false)) {\r\n      return (\r\n        <div className='moviePoster-wrapper'>\r\n          {image}\r\n          <span\r\n            className={`${\r\n              isEqual(available, true)\r\n                ? 'moviePoster-available'\r\n                : 'moviePoster-unavailable'\r\n            } moviePoster-availability`}\r\n          >{`${isEqual(available, true) ? 'Dostępny' : 'Niedostępny'}`}</span>\r\n        </div>\r\n      );\r\n    } else if (isEqual(available, undefined)) {\r\n      return <div className='moviePoster-wrapper'>{image}</div>;\r\n    }\r\n  };\r\n\r\n  return renderMoviePoster();\r\n};\r\n\r\nMoviePoster.defaultProps = {\r\n  classes: '',\r\n};\r\n\r\nexport default MoviePoster;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { baseUrl } from '../../../../services/API/v1/baseFetch';\r\nimport { setItem as setMovieId } from '../../../../services/localStorage';\r\nimport { appName } from '../../../App/routing/routingList';\r\nimport MoviePoster from '../../../low-level components/MoviePoster/MoviePoster';\r\nimport './MovieLinkWithTitle.css';\r\n\r\n/*** Component ***/\r\nconst MovieLinkWithTitle = ({ imageUrl, _id, title, available }) => {\r\n  return (\r\n    <>\r\n      <Link\r\n        to={`${appName}/reservation`}\r\n        className='movieLinkWithTitle-wrapper'\r\n        onClick={() => setMovieId('movieId', _id)}\r\n      >\r\n        <MoviePoster\r\n          src={`${baseUrl}${imageUrl}`}\r\n          alt={title}\r\n          available={available}\r\n        />\r\n        <p className='movieLinkWithTitle-title' data-movie-id={_id}>\r\n          {title}\r\n        </p>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieLinkWithTitle;\r\n","import React from 'react';\r\n\r\nimport MovieLinkWithTitle from '../MovieLinkWithTitle/MovieLinkWithTitle';\r\nimport './MoviesGroup.css';\r\n\r\n/*** Assistive Functions ***/\r\nconst renderMovies = (movies) => {\r\n  return movies.map(({ imageUrl, title, _id, available }, index) => {\r\n    return (\r\n      <MovieLinkWithTitle\r\n        key={index}\r\n        imageUrl={imageUrl}\r\n        title={title}\r\n        available={available}\r\n        _id={_id}\r\n      />\r\n    );\r\n  });\r\n};\r\n\r\n/*** Component ***/\r\nconst MoviesGroup = ({ title, movies }) => {\r\n  return (\r\n    <div className=\"moviesGroup-wrapper\">\r\n      <h1 className=\"moviesGroup-title\">{title}</h1>\r\n      <div className=\"moviesGroup-list\">{renderMovies(movies)}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviesGroup;\r\n","import React, { Component } from 'react';\r\n\r\nimport { scrollTop } from '../../assistive functions';\r\nimport redirectError from '../../services/errors handling/redirectError';\r\nimport { handleErrors } from '../../services/errors handling/handleErrors';\r\nimport {\r\n  isEqual,\r\n  isLowerEqual as isHigherEqual,\r\n} from '../../services/predicates';\r\nimport { isEqual as wereNotMoviesFetched } from '../../services/predicates';\r\nimport baseFetch from '../../services/API/v1/baseFetch';\r\nimport Loading from '../conditional components/Loading/Loading';\r\nimport MoviesGroup from './parts/MoviesGroup/MoviesGroup';\r\nimport './HomePage.css';\r\n\r\n/*** Component ***/\r\nclass HomePage extends Component {\r\n  ageOfNewFMovie = 2;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      movies: [],\r\n      recommendedMovies: [],\r\n      newMovies: [],\r\n      screenings: [],\r\n      availableScreenings: [],\r\n      unavailableScreenings: [],\r\n    };\r\n  }\r\n\r\n  /* Lifecycle Methods */\r\n  async componentDidMount() {\r\n    scrollTop();\r\n    try {\r\n      const respMovies = await baseFetch({ path: 'api/movie' });\r\n      handleErrors(respMovies.status);\r\n      const movies = await respMovies.json();\r\n      const screenings = await this.getScreenings();\r\n      const { newMovies, recommendedMovies } = this.classifyMovies(movies);\r\n      const { available, unavailable } = this.checkAvailability(\r\n        movies,\r\n        screenings\r\n      );\r\n      const moviesWithAvailability = this.addAvailability(\r\n        available,\r\n        unavailable,\r\n        movies\r\n      );\r\n\r\n      this.setState({\r\n        movies: moviesWithAvailability,\r\n        recommendedMovies,\r\n        newMovies,\r\n      });\r\n    } catch (err) {\r\n      redirectError(this.props.history, err);\r\n    }\r\n  }\r\n\r\n  /* Assistive Methods */\r\n  classifyMovies = (movies) => {\r\n    const newMovies = [];\r\n    const recommendedMovies = [];\r\n\r\n    movies.forEach((movie) => {\r\n      const movieProductionDate = new Date().getFullYear() - this.ageOfNewFMovie;\r\n      isHigherEqual(movie.year, movieProductionDate)\r\n        ? newMovies.push(movie)\r\n        : recommendedMovies.push(movie);\r\n    });\r\n\r\n    return { newMovies, recommendedMovies };\r\n  };\r\n\r\n  async getScreenings() {\r\n    const respScreenings = await baseFetch({ path: 'api/screening' });\r\n    handleErrors(respScreenings.status);\r\n    const screenings = await respScreenings.json();\r\n    return screenings;\r\n  }\r\n\r\n  checkAvailability(movies, screenings) {\r\n    const available = [];\r\n    const unavailable = [];\r\n\r\n    movies.forEach((movie) => {\r\n      screenings.forEach((screening) => {\r\n        if (isEqual(movie._id, screening.movie_id)) {\r\n          if (!available.includes(movie._id)) available.push(movie._id);\r\n        } else {\r\n          if (!unavailable.includes(movie._id)) unavailable.push(movie._id);\r\n        }\r\n      });\r\n    });\r\n\r\n    available.forEach((id) => {\r\n      unavailable.forEach((_id, index) => {\r\n        if (isEqual(id, _id)) delete unavailable[index];\r\n      });\r\n    });\r\n\r\n    return { available, unavailable };\r\n  }\r\n\r\n  addAvailability(available, unavailable, movies) {\r\n    const availableMovies = [];\r\n    const unavailableMovies = [];\r\n    const moviesCopy = [...movies];\r\n\r\n    moviesCopy.forEach((movie) => {\r\n      available.forEach((availableId) => {\r\n        if (isEqual(movie._id, availableId)) {\r\n          movie.available = true;\r\n          availableMovies.push(movie);\r\n        }\r\n      });\r\n    });\r\n\r\n    unavailable.forEach((unavailableId) => {\r\n      moviesCopy.forEach((movie) => {\r\n        if (!unavailableMovies.includes(movie)) {\r\n          if (isEqual(movie._id, unavailableId)) {\r\n            movie.available = false;\r\n            unavailableMovies.push(movie);\r\n          }\r\n        }\r\n      });\r\n    });\r\n\r\n    const moviesWithAvailability = [...unavailableMovies, ...availableMovies];\r\n    return moviesWithAvailability;\r\n  }\r\n\r\n  render() {\r\n    if (wereNotMoviesFetched(this.state.recommendedMovies.length, 0)) {\r\n      return <Loading />;\r\n    }\r\n\r\n    return (\r\n      <div className='homepage-wrapper'>\r\n        <img className='homepage-img' src='img/jumanji.png' alt='Home' />\r\n\r\n        <MoviesGroup\r\n          title='POLECANE FILMY'\r\n          movies={this.state.recommendedMovies}\r\n        />\r\n\r\n        <MoviesGroup title='NOWE FILMY' movies={this.state.newMovies} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconsole.log();\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\n\r\nimport './ContactWay.css';\r\n\r\n/*** Component ***/\r\nconst ContactWay = ({\r\n  iconSemanticUI,\r\n  header,\r\n  content: { main, secondary },\r\n  communication: { way, resource },\r\n  wrapperClass,\r\n  iconClass,\r\n  titleClass,\r\n  textsClass \r\n}) => {\r\n  return (\r\n    <div className={`contactWay-wrapper ${wrapperClass}`}>\r\n      <i className={`${iconSemanticUI} contactWay-icon ${iconClass}`}></i>\r\n      <h1 className={`contactWay-title ${titleClass}`}>{header}</h1>\r\n      <div className={`contactWay-texts ${textsClass}`}>\r\n        <p>{main}</p>\r\n        <p>{secondary}</p>\r\n        <p>\r\n          {way} <span>{resource}</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactWay.defaultProps = {\r\n  iconSemanticUI: 'envelope outline icon',\r\n  header: 'Napisz do nas e-mail',\r\n  content: {\r\n    main: 'Masz pytanie?',\r\n    secondary: 'Napisz do nas, a na pewno się z Tobą skontaktujemy',\r\n  },\r\n  communication: {\r\n    way: 'e-mail:',\r\n    resource: 'minikino@gmail.com',\r\n  },\r\n  wrapperClass: '',\r\n  iconClass: '',\r\n  titleClass: '',\r\n  textsClass: '',\r\n};\r\n\r\nexport default ContactWay;\r\n","import React from 'react';\r\n\r\nimport { scrollTop } from '../../assistive functions';\r\nimport {\r\n  combinePredicates as hasWindowWithCrossedThreshold,\r\n  isLower,\r\n  isLowerEqual,\r\n  isEqual as didStateNotChange,\r\n} from '../../services/predicates';\r\nimport ContactWay from './parts/ContactWay/ContactWay';\r\nimport './ContactUs.css';\r\n\r\n/*** Component ***/\r\nclass ContactUs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      count: 0,\r\n      windowWidth: window.innerWidth,\r\n    };\r\n    this.wrapperRef = React.createRef();\r\n  }\r\n\r\n  /* Lifecycle Methods */\r\n  componentDidMount() {\r\n    const { finalWidthOfWindow, childrenNum, wrapper } = this.getVariables();\r\n    const width = window.innerWidth;\r\n\r\n    isLowerEqual(finalWidthOfWindow, width)\r\n      ? this.changeToOneColumn(wrapper)\r\n      : this.changeToMultiColumn(childrenNum, wrapper);\r\n\r\n    window.addEventListener('resize', this.handleResize);\r\n    scrollTop();\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    const { finalWidthOfWindow } = this.getVariables();\r\n\r\n    if (!didStateNotChange(this.state.windowWidth, nextState.windowWidth)) {\r\n      if (\r\n        hasWindowWithCrossedThreshold(isLower, isLowerEqual)(\r\n          finalWidthOfWindow,\r\n          this.state.windowWidth,\r\n          nextState.windowWidth\r\n        )\r\n      )\r\n        return true;\r\n      else return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.handleResize);\r\n  }\r\n\r\n  /* Assistive Methods and Handlers */\r\n  getVariables = () => {\r\n    const wrapperRef = this.wrapperRef.current;\r\n    const values = {\r\n      finalWidthOfWindow: 800,\r\n      childrenNum: wrapperRef.children.length,\r\n      wrapper: wrapperRef,\r\n    };\r\n    return values;\r\n  };\r\n\r\n  changeToOneColumn = (wrapper) => {\r\n    wrapper.style = 'grid-template-columns: auto';\r\n  };\r\n\r\n  changeToMultiColumn = (childrenNum, wrapper) => {\r\n    wrapper.style = `grid-template-columns: repeat(${childrenNum},${\r\n      100 / childrenNum\r\n    }%)`;\r\n  };\r\n\r\n  handleResize = () => {\r\n    const { finalWidthOfWindow, childrenNum, wrapper } = this.getVariables();\r\n\r\n    this.setState({ windowWidth: window.innerWidth }, () => {\r\n      if (isLowerEqual(finalWidthOfWindow, this.state.windowWidth)) {\r\n        this.changeToOneColumn(wrapper);\r\n      } else {\r\n        this.changeToMultiColumn(childrenNum, wrapper);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='contactUs-wrapper' ref={this.wrapperRef}>\r\n        <ContactWay />\r\n        <ContactWay\r\n          iconSemanticUI='phone volume icon'\r\n          header='Zadzwoń do nas na infolinię'\r\n          content={{\r\n            main: 'Masz pytanie?',\r\n            secondary:\r\n              'Nasi fachowcy czekają na Twoje pytania codziennie od 10:00 do 21:00',\r\n          }}\r\n          communication={{ way: 'tel', resource: '+48 666 66 66 66 66' }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactUs;\r\n","import React from 'react';\r\n\r\nimport './LoadingSpinner.css';\r\n\r\nconst LoadingSpinner = ({\r\n  outerWrapper,\r\n  spinnerWrapper,\r\n  spinner, \r\n  reference,\r\n}) => {\r\n  return (\r\n    <div\r\n      className={`loadingSpinner-outerWrapper ${outerWrapper}`}\r\n    >\r\n      <div \r\n        ref={reference}\r\n        className={`loadingSpinner-wrapper hide ${spinnerWrapper}`}\r\n      >\r\n        <div className={`loadingSpinner-spinner ${spinner}`}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nLoadingSpinner.defaultProps = {\r\n  reference: '',\r\n  outerWrapper: '',\r\n  spinnerWrapper: '',\r\n  spinner: '',\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React from 'react';\r\n\r\nimport './FormInput.css';\r\n\r\n/*** Component ***/\r\nconst FormInput = ({\r\n  moduleName,\r\n  title,\r\n  formValue,\r\n  validationVal,\r\n  type,\r\n  name,\r\n  placeholder,\r\n  inputRef,\r\n  minlength = 3,\r\n  maxlength = 20,\r\n  required = true,\r\n  onClick,\r\n  onChange,\r\n  onBlur,\r\n}) => {\r\n  return (\r\n    <div className={`field ${moduleName}-${name}-wrapper`}>\r\n      <label className='formInput-label' htmlFor={name}>\r\n        {title}\r\n      </label>\r\n      <input\r\n        id={name}\r\n        className='formInput-input neutral-input'\r\n        placeholder={placeholder}\r\n        name={name}\r\n        type={type}\r\n        ref={inputRef}\r\n        value={formValue}\r\n        minLength={minlength}\r\n        maxLength={maxlength}\r\n        required={required}\r\n        onChange={onChange}\r\n        onClick={onClick}\r\n        onBlur={onBlur}\r\n      />\r\n      <p className='validation-p'>{validationVal}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import React from 'react';\r\nimport './SubmitBtn.css';\r\n\r\nexport const SubmitBtn = ({ classes, btnText, reference, children }) => {\r\n  return (\r\n    <button \r\n      className={`submitBtn ${classes}`} \r\n      type=\"submit\" \r\n      ref={reference}\r\n    >\r\n      {btnText}\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nSubmitBtn.defaultProps = {\r\n  classes: '',\r\n  btnText: 'Wyślij',\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nimport { isEqual, isLower } from '../../services/predicates';\r\nimport {\r\n  validateEmail,\r\n  validateCommonTextInput,\r\n  validateSurname,\r\n} from '../../assistive functions';\r\nimport timeout from '../../services/timeout';\r\nimport { handleErrors } from '../../services/errors handling/handleErrors';\r\nimport baseFetch from '../../services/API/v1/baseFetch';\r\nimport { getItem as getUserId } from '../../services/localStorage';\r\nimport LoadingSpinner from '../low-level components/LoadingSpinner/LoadingSpinner';\r\nimport FormInput from '../low-level components/FormInput/FormInput';\r\nimport { SubmitBtn as RegisterBtn } from '../low-level components/SubmitBtn/SubmitBtn';\r\nimport {\r\n  startLoading,\r\n  finishLoading,\r\n  enableElement as enableRegisterBtn,\r\n  disableElement as disableRegisterBtn,\r\n} from '../../assistive functions';\r\n\r\nimport './Register.css';\r\n\r\n/*** Variables ***/\r\nconst classes = {\r\n  invalid: 'invalid',\r\n  valid: 'valid',\r\n  neutralInput: 'neutral-input',\r\n  invalidInput: 'invalid-input',\r\n  cursorAuto: 'cursor-auto',\r\n  cursorPointer: 'cursor-pointer',\r\n};\r\n\r\n/*** Component ***/\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      pass: '',\r\n      confirmPass: '',\r\n      afterSubmitInfo: '',\r\n      validationMsgFirstName: '',\r\n      validationMsgLastName: '',\r\n      validationMsgEmail: '',\r\n      validationMsgPass: '',\r\n      validationMsgConfirmPass: '',\r\n      areInputsValidatedCorrectyle: false,\r\n    };\r\n    this.firstNameRef = React.createRef();\r\n    this.lastNameRef = React.createRef();\r\n    this.emailRef = React.createRef();\r\n    this.passRef = React.createRef();\r\n    this.confirmPassRef = React.createRef();\r\n    this.validateRegisterInfoRef = React.createRef();\r\n    this.registerSpinnerRef = React.createRef();\r\n    this.registerBtnRef = React.createRef();\r\n  }\r\n\r\n  /* Lifecycle Methods */\r\n  componentDidMount() {\r\n    this.firstNameRef.current.focus();\r\n  }\r\n\r\n  /* Assistive Methods */\r\n  renderInputs = () => {\r\n    const inputsData = [\r\n      {\r\n        title: 'Imię',\r\n        name: 'firstName',\r\n        placeholder: 'min. 3 znaki',\r\n        formValue: this.state.firstName,\r\n        type: 'text',\r\n        inputRef: this.firstNameRef,\r\n        validationMsg: this.state.validationMsgFirstName,\r\n        validationMsgName: 'validationMsgFirstName',\r\n      },\r\n      {\r\n        title: 'Nazwisko',\r\n        name: 'lastName',\r\n        placeholder: 'min. 3 znaki',\r\n        formValue: this.state.lastName,\r\n        type: 'text',\r\n        inputRef: this.lastNameRef,\r\n        validationMsg: this.state.validationMsgLastName,\r\n        validationMsgName: 'validationMsgLastName',\r\n      },\r\n      {\r\n        title: 'Email',\r\n        name: 'email',\r\n        placeholder: 'email',\r\n        formValue: this.state.email,\r\n        type: 'email',\r\n        minlength: 6,\r\n        maxlength: 40,\r\n        inputRef: this.emailRef,\r\n        validationMsg: this.state.validationMsgEmail,\r\n        validationMsgName: 'validationMsgEmail',\r\n      },\r\n\r\n      {\r\n        title: 'Hasło',\r\n        name: 'pass',\r\n        placeholder: 'min. 8 znaków',\r\n        formValue: this.state.pass,\r\n        type: 'password',\r\n        minlength: 8,\r\n        inputRef: this.passRef,\r\n        validationMsg: this.state.validationMsgPass,\r\n        validationMsgName: 'validationMsgPass',\r\n      },\r\n      {\r\n        title: 'Potwierdź hasło',\r\n        name: 'confirmPass',\r\n        placeholder: 'min. 8 znaków',\r\n        formValue: this.state.confirmPass,\r\n        type: 'password',\r\n        minlength: 8,\r\n        inputRef: this.confirmPassRef,\r\n        validationMsg: this.state.validationMsgConfirmPass,\r\n        validationMsgName: 'validationMsgConfirmPass',\r\n      },\r\n    ];\r\n\r\n    return inputsData.map(\r\n      ({\r\n        title,\r\n        name,\r\n        formValue,\r\n        type,\r\n        placeholder,\r\n        minlength = 3,\r\n        maxlength,\r\n        inputRef,\r\n        validationMsg,\r\n        validationMsgName,\r\n      }) => {\r\n        return (\r\n          <FormInput\r\n            moduleName='register'\r\n            key={title}\r\n            title={title}\r\n            name={name}\r\n            placeholder={placeholder}\r\n            formValue={formValue}\r\n            validationVal={validationMsg}\r\n            type={type}\r\n            minlength={minlength}\r\n            maxlength={maxlength}\r\n            inputRef={inputRef}\r\n            onChange={() =>\r\n              this.handleInputChange(name, inputRef.current.value)\r\n            }\r\n            onBlur={() =>\r\n              this.validateInput(\r\n                title,\r\n                inputRef.current,\r\n                minlength,\r\n                validationMsgName\r\n              )\r\n            }\r\n          />\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  negativeValidation = (inputClassList, warningText, validationMsgName) => {\r\n    this.setState({ [validationMsgName]: warningText });\r\n    const { neutralInput, invalidInput } = classes;\r\n    inputClassList.replace(neutralInput, invalidInput);\r\n  };\r\n\r\n  positiveValidation = (inputClassList, validationMsgName) => {\r\n    this.setState({ [validationMsgName]: '' });\r\n    const { neutralInput, invalidInput } = classes;\r\n    inputClassList.replace(invalidInput, neutralInput);\r\n  };\r\n\r\n  validateInput = (\r\n    title,\r\n    { name: inputName, value: inputValue, classList: inputClassList },\r\n    minlength,\r\n    validationMsgName\r\n  ) => {\r\n    let warningText;\r\n\r\n    if (isEqual(inputName, 'email')) {\r\n      if (validateEmail(inputValue)) {\r\n        warningText = `Niepoprawny email.`;\r\n        this.negativeValidation(inputClassList, warningText, validationMsgName);\r\n      } else {\r\n        this.positiveValidation(inputClassList, validationMsgName);\r\n      }\r\n    } else if (isEqual(inputName, 'lastName')) {\r\n      if (validateSurname(inputValue)) {\r\n        warningText = `\"${title}\" nie może zawierać liczb oraz znaków specjalnych.`;\r\n        this.negativeValidation(inputClassList, warningText, validationMsgName);\r\n      } else this.positiveValidation(inputClassList, validationMsgName);\r\n    } else {\r\n      if (isLower(inputValue.length, minlength)) {\r\n        const polishNounForm = isEqual(minlength, 3) ? 'znaki' : 'znaków';\r\n        warningText = `\"${title}\" musi mieć co najmniej ${minlength} ${polishNounForm}.`;\r\n        this.negativeValidation(inputClassList, warningText, validationMsgName);\r\n      } else if (validateCommonTextInput(inputValue)) {\r\n        warningText = `\"${title}\" nie może zawierać liczb oraz znaków specjalnych.`;\r\n        this.negativeValidation(inputClassList, warningText, validationMsgName);\r\n      } else this.positiveValidation(inputClassList, validationMsgName);\r\n    }\r\n  };\r\n\r\n  validatePass = () => {\r\n    if (!isEqual(this.state.pass, this.state.confirmPass)) {\r\n      const msg = 'Hasła muszą być jednakowe!';\r\n      this.setState({ afterSubmitInfo: msg }, () => {\r\n        timeout(() => {\r\n          this.setState({ afterSubmitInfo: '' });\r\n        }, 1000);\r\n      });\r\n\r\n      throw new Error(msg);\r\n    }\r\n  };\r\n\r\n  validateRegisterInfo = (status, errMsg) => {\r\n    const { valid, invalid } = classes;\r\n    const validateRegisterInfoParagraph = this.validateRegisterInfoRef.current;\r\n    let isRegistrationSuccessful = true;\r\n    if (isEqual(status, 201) || isEqual(status, 200)) {\r\n      this.setState({ afterSubmitInfo: 'Zarejestrowano' });\r\n      validateRegisterInfoParagraph.classList.replace(invalid, valid);\r\n    } else {\r\n      this.setState({ afterSubmitInfo: errMsg });\r\n      isRegistrationSuccessful = false;\r\n    }\r\n\r\n    timeout(() => {\r\n      this.setState({ afterSubmitInfo: '' });\r\n      validateRegisterInfoParagraph.classList.replace(valid, invalid);\r\n      this.dispatchToLogin(isRegistrationSuccessful);\r\n    }, 1000);\r\n  };\r\n\r\n  checksDataEntirety = () => {\r\n    let validationMsgs = [\r\n      this.state.validationMsgConfirmPass,\r\n      this.state.validationMsgEmail,\r\n      this.state.validationMsgFirstName,\r\n      this.state.validationMsgLastName,\r\n      this.state.validationMsgPass,\r\n    ];\r\n    let areDataCorrect = validationMsgs.every((msg) => isEqual(msg, ''));\r\n    if (!areDataCorrect) {\r\n      const msg = 'Uzupełnij dane!';\r\n      this.setState({ afterSubmitInfo: msg }, () => {\r\n        timeout(() => {\r\n          this.setState({ afterSubmitInfo: '' });\r\n        }, 1000);\r\n      });\r\n      throw new Error(msg);\r\n    }\r\n  };\r\n\r\n  dispatchToLogin = (isRegistrationSuccessful) => {\r\n    if (isRegistrationSuccessful && !getUserId('userId'))\r\n      this.props.history.push('/login');\r\n  };\r\n\r\n  endRegister = () => {\r\n    const { cursorAuto, cursorPointer } = classes;\r\n    finishLoading(this.registerSpinnerRef.current);\r\n    enableRegisterBtn(\r\n      this.registerBtnRef.current,\r\n      [cursorPointer],\r\n      [cursorAuto]\r\n    );\r\n  };\r\n\r\n  /* Handlers */\r\n  handleInputChange = (stateKey, value) => {\r\n    this.setState({ [stateKey]: value });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { cursorAuto, cursorPointer } = classes;\r\n    disableRegisterBtn(\r\n      this.registerBtnRef.current,\r\n      [cursorAuto],\r\n      [cursorPointer]\r\n    );\r\n    startLoading(this.registerSpinnerRef.current);\r\n\r\n    try {\r\n      // Checks if all inputs are filled correectly\r\n      this.checksDataEntirety();\r\n      // Check password and confirmPassword equality\r\n      this.validatePass();\r\n    } catch (err) {\r\n      this.endRegister();\r\n      return;\r\n    }\r\n\r\n    // Creates new user\r\n    try {\r\n      const userData = {\r\n        name: this.state.firstName,\r\n        surname: this.state.lastName,\r\n        email: this.state.email,\r\n        password: this.state.pass,\r\n        confirmPassword: this.state.confirmPass,\r\n      };\r\n\r\n      const { status } = await baseFetch({\r\n        path: 'api/user',\r\n        body: JSON.stringify(userData),\r\n        method: 'POST',\r\n      });\r\n\r\n      handleErrors(status);\r\n\r\n      this.endRegister();\r\n      this.validateRegisterInfo(status);\r\n    } catch ({ statusCode, message }) {\r\n      this.endRegister();\r\n      this.validateRegisterInfo(statusCode, message);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='register-outerWrapper'>\r\n        <div className='register-wrapper'>\r\n          <h1 className='register-title'>Rejestracja</h1>\r\n          <form\r\n            className='register-form'\r\n            onSubmit={this.handleSubmit}\r\n            ref={this.registerFormRef}\r\n          >\r\n            {this.renderInputs()}\r\n            <RegisterBtn\r\n              classes='registerBtn cursor-pointer'\r\n              btnText='Zarejestruj'\r\n              reference={this.registerBtnRef}\r\n            >\r\n              <LoadingSpinner\r\n                reference={this.registerSpinnerRef}\r\n                outerWrapper='registerSpinner-outerWrapper'\r\n                spinner='registerSpinner'\r\n              />\r\n            </RegisterBtn>\r\n            <p\r\n              ref={this.validateRegisterInfoRef}\r\n              className={`validate-register-info ${classes.invalid}`}\r\n            >\r\n              {this.state.afterSubmitInfo}\r\n            </p>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React from 'react';\r\n\r\nimport { scrollTop } from '../../../assistive functions';\r\nimport './LogInNeeded.css';\r\n\r\nexport const LogInNeeded = ({ logInText }) => {\r\n  scrollTop();\r\n  return <div className=\"logInNeeded\">{logInText}</div>;\r\n};\r\n\r\nLogInNeeded.defaultProps = {\r\n  logInText: 'Musisz się zalogować!',\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nimport timeout from '../../services/timeout';\r\nimport { handleErrors } from '../../services/errors handling/handleErrors';\r\nimport baseFetch from '../../services/API/v1/baseFetch';\r\nimport {\r\n  clearLocalStorage,\r\n  setItem as setUserId,\r\n  getItem as getUserId,\r\n} from '../../services/localStorage';\r\nimport { setItem as setAuthToken } from '../../services/localStorage';\r\nimport {\r\n  setItem as setExpiresIn,\r\n  getItem as getExpiresIn,\r\n} from '../../services/localStorage';\r\nimport {\r\n  setItem as setAutoLogoutTimerId,\r\n  getItem as getAutoLogoutTimerId,\r\n} from '../../services/localStorage';\r\nimport { getItem as getAutoLogoutReminderTimerId } from '../../services/localStorage';\r\nimport LoadingSpinner from '../low-level components/LoadingSpinner/LoadingSpinner';\r\nimport { LogInNeeded as LogOutSuccessful } from '../conditional components/LogInNeeded/LogInNeeded';\r\nimport { SubmitBtn as LoginBtn } from '../low-level components/SubmitBtn/SubmitBtn';\r\nimport FormInput from '../low-level components/FormInput/FormInput';\r\nimport {\r\n  startLoading,\r\n  finishLoading,\r\n  disableElement as disableLoginBtn,\r\n  enableElement as enableLoginBtn,\r\n} from '../../assistive functions';\r\nimport './Login.css';\r\n\r\n/*** Variables ***/\r\nconst classes = {\r\n  cursorPointer: 'cursor-pointer',\r\n  cursorAuto: 'cursor-auto',\r\n};\r\n\r\n/*** Component ***/\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      pass: '',\r\n      afterSubmitInfo: '',\r\n      autoLogoutTimerId: '',\r\n      isLoggedIn: false,\r\n    };\r\n    this.emailRef = React.createRef();\r\n    this.passRef = React.createRef();\r\n    this.validateLoginInfoRef = React.createRef();\r\n    this.loginSpinnerRef = React.createRef();\r\n    this.loginBtnRef = React.createRef();\r\n  }\r\n\r\n  /* Lifecycle Methods */\r\n  componentDidMount() {\r\n    if (getUserId('userId')) {\r\n      this.setState({ isLoggedIn: true });\r\n      timeout(() => {\r\n        this.props.history.goBack();\r\n      }, 1000);\r\n      clearTimeout(getAutoLogoutTimerId('autoLogoutTimerId'));\r\n      clearTimeout(getAutoLogoutReminderTimerId('autoLogoutReminderTimerId'));\r\n      clearLocalStorage();\r\n    } else {\r\n      this.emailRef.current.focus();\r\n    }\r\n  }\r\n\r\n  /* Assistive Methods */\r\n  renderLoginInputs = () => {\r\n    const loginData = [\r\n      {\r\n        title: 'E-mail',\r\n        name: 'email',\r\n        formValue: this.state.email,\r\n        type: 'email',\r\n        reference: this.emailRef,\r\n      },\r\n      {\r\n        title: 'Hasło',\r\n        name: 'pass',\r\n        formValue: this.state.pass,\r\n        type: 'password',\r\n        reference: this.passRef,\r\n      },\r\n    ];\r\n\r\n    return loginData.map(\r\n      ({ title, name, formValue, type, reference }, index) => {\r\n        return (\r\n          <FormInput\r\n            moduleName='login'\r\n            key={index}\r\n            title={title}\r\n            type={type}\r\n            name={name}\r\n            formValue={formValue}\r\n            inputRef={reference}\r\n            onChange={(e) => this.handleInputChange(name, e.target.value)}\r\n          />\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  endLogin = () => {\r\n    const { cursorAuto, cusorPointer } = classes;\r\n    finishLoading(this.loginSpinnerRef.current);\r\n    enableLoginBtn(this.loginBtnRef.current, [cusorPointer], [cursorAuto]);\r\n  };\r\n\r\n  /* Handlers */\r\n  handleAutoLogout = (expiresIn) => {\r\n    const autoLogoutRedirect = () => {\r\n      if (expiresIn) this.props.history.push('/autologout');\r\n    };\r\n    const autoLogoutTimerId = timeout(\r\n      autoLogoutRedirect,\r\n      expiresIn - Date.now()\r\n    );\r\n    setAutoLogoutTimerId('autoLogoutTimerId', autoLogoutTimerId);\r\n  };\r\n\r\n  handleInputChange = (stateKey, value) => {\r\n    this.setState({ [stateKey]: value });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { cursorAuto, cusorPointer } = classes;\r\n    disableLoginBtn(this.loginBtnRef.current, [cursorAuto], [cusorPointer]);\r\n    startLoading(this.loginSpinnerRef.current);\r\n\r\n    const loginData = {\r\n      email: this.state.email,\r\n      password: this.state.pass,\r\n    };\r\n\r\n    try {\r\n      const resp = await baseFetch({\r\n        path: 'api/login',\r\n        body: JSON.stringify(loginData),\r\n        method: 'POST',\r\n      });\r\n\r\n      handleErrors(resp.status);\r\n      const { token, userId, expiresIn } = await resp.json();\r\n      this.endLogin();\r\n\r\n      setUserId('userId', userId);\r\n      setAuthToken('token', token);\r\n      setExpiresIn('expiresIn', Date.now() + expiresIn);\r\n      this.handleAutoLogout(getExpiresIn('expiresIn'));\r\n\r\n      this.props.history.push('/');\r\n    } catch ({ message }) {\r\n      this.endLogin();\r\n      this.setState({ afterSubmitInfo: message }, () => {\r\n        timeout(() => {\r\n          this.setState({ afterSubmitInfo: '' });\r\n        }, 1000);\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.state.isLoggedIn) {\r\n      return <LogOutSuccessful logInText='Wylogowano prawidłowo.' />;\r\n    }\r\n    const { cursorPointer } = classes;\r\n\r\n    return (\r\n      <div className='login-outerWrapper'>\r\n        <div className='login-wrapper'>\r\n          <h1 className='login-title'>{this.props.title}</h1>\r\n          <form className='login-form' onSubmit={this.handleSubmit}>\r\n            {this.renderLoginInputs()}\r\n            <LoginBtn\r\n              classes={`loginBtn ${cursorPointer}`}\r\n              btnText='Zaloguj'\r\n              reference={this.loginBtnRef}\r\n            >\r\n              <LoadingSpinner\r\n                reference={this.loginSpinnerRef}\r\n                outerWrapper='login-spinner-outerWrapper'\r\n                spinner='login-spinner'\r\n              />\r\n            </LoginBtn>\r\n            <p\r\n              ref={this.validateLoginInfoRef}\r\n              className='validate-login-info invalid'\r\n            >\r\n              {this.state.afterSubmitInfo}\r\n            </p>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.defaultProps = {\r\n  title: 'Zaloguj',\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\n\r\nimport {\r\n  isEqual,\r\n  isLower as compareLenghts,\r\n} from '../../../services/predicates';\r\nimport './MovieInfo.css';\r\n\r\n/*** Variables ***/\r\nconst shortDescrLength = 30;\r\nconst dots = '...';\r\nconst shortDescrWithDotsLength = (dots) => shortDescrLength + dots.length;\r\n\r\n/*** Assistive Functions ***/\r\nconst fullDescrAndTooltipText = (refDescr, refTooltip, descr, fullDescr) => {\r\n  if (isEqual(refDescr.innerText.length, shortDescrWithDotsLength(dots))) {\r\n    refDescr.innerText = fullDescr;\r\n    refTooltip.innerText = 'Zwiń opis';\r\n  } else {\r\n    refDescr.innerText = descr;\r\n    refTooltip.innerText = 'Rozwiń opis';\r\n  }\r\n};\r\n\r\nconst cutMovieDescription = (fullDescr) => {\r\n  if (compareLenghts(shortDescrLength, fullDescr.length)) {\r\n    return `${fullDescr.slice(0, shortDescrLength)}${dots}`;\r\n  } else return fullDescr;\r\n};\r\n\r\n/*** Component ***/\r\nconst MovieInfo = ({\r\n  movie: { description, title },\r\n  titleClass,\r\n  descriptionClass,\r\n  descrSpanClass,\r\n  tooltipTextClass \r\n}) => {\r\n  let refDescr = React.createRef();\r\n  let refTooltip = React.createRef();\r\n\r\n  return (\r\n    <>\r\n      <h3 className={`${titleClass} movieInfo-title`}>{title}</h3>\r\n      <p\r\n        className={`${descriptionClass} movieInfo-description movieInfo-tooltip`}\r\n        onClick={() =>\r\n          fullDescrAndTooltipText(\r\n            refDescr.current,\r\n            refTooltip.current,\r\n            cutMovieDescription(description),\r\n            description\r\n          )\r\n        }\r\n      >\r\n        <span>{'Opis: '}</span>\r\n        <span\r\n          className={`${descrSpanClass} movieInfo-descrSpan`}\r\n          ref={refDescr}\r\n        >\r\n          {cutMovieDescription(description)}\r\n        </span>\r\n        <span\r\n          className={`${tooltipTextClass} movieInfo-tooltipText`}\r\n          ref={refTooltip}\r\n        >\r\n          {'Rozwiń opis'}\r\n        </span>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nMovieInfo.defaultProps = {\r\n  titleClass: '',\r\n  descriptionClass: '',\r\n  descrSpanClass: '',\r\n  tooltipTextClass: '',\r\n};\r\n\r\nexport default MovieInfo;\r\n","import { isEqual } from '../../../../../../services/predicates';\r\nimport { handleErrors } from '../../../../../../services/errors handling/handleErrors';\r\nimport redirectError from '../../../../../../services/errors handling/redirectError';\r\nimport baseFetch from '../../../../../../services/API/v1/baseFetch';\r\nimport { getItem as getToken } from '../../../../../../services/localStorage';\r\n\r\n/*** Assistive Functions ***/\r\nexport const dateTitleProp = () => {\r\n  const title = 'Data i godzina';\r\n  return title;\r\n};\r\n\r\nexport const dateFormat = (time) => {\r\n  return new Date(time).toLocaleString(undefined, {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n    hour: 'numeric',\r\n    minute: 'numeric',\r\n  });\r\n};\r\n\r\nexport const getAllSeats = async (room_id, history) => {\r\n  try {\r\n    const resp = await baseFetch({\r\n      path: `api/seat/${room_id}`,\r\n      authToken: getToken('token'),\r\n    });\r\n\r\n    handleErrors(resp.status);\r\n    const seats = await resp.json();\r\n\r\n    let filtered = [];\r\n    let rowNum = 0;\r\n    let occuredRows = [];\r\n\r\n    // Segregates seats in an organized structure\r\n    seats.forEach(({ row, seatNumber }) => {\r\n      if (!isEqual(rowNum, row) && !occuredRows.includes(row)) {\r\n        rowNum = row;\r\n        occuredRows.push(row);\r\n        filtered.push({ row, seats: [seatNumber] });\r\n      } else {\r\n        filtered.forEach((elem) => {\r\n          if (isEqual(elem.row, row)) elem.seats.push(seatNumber);\r\n        });\r\n      }\r\n    });\r\n\r\n    // Sorts seats structure in an ascending order\r\n    filtered\r\n      .sort((a, b) => a.row - b.row)\r\n      .map(({ row, seats }) => {\r\n        return { row, seats: seats.sort((a, b) => a - b) };\r\n      });\r\n\r\n    return filtered;\r\n  } catch (err) {\r\n    redirectError(history, err);\r\n  }\r\n};\r\n\r\nexport const setTakenSeats = (data = []) => {\r\n  return data.map(({ seat_id: { row, seatNumber } }) => {\r\n    return { row: row, seats: seatNumber };\r\n  });\r\n};\r\n\r\nexport const restartRowAndSeatUI = () => {\r\n  return {\r\n    choosenRow: null,\r\n    choosenSeat: null,\r\n    freeSeats: [],\r\n    rowsList: [],\r\n  };\r\n};\r\n","import React from 'react';\r\n\r\nimport { isEqual as isSeatDefined } from '../../../services/predicates';\r\nimport { dateFormat } from '../../tickets components/Reservation/parts/BuyTicket/parts/assistiveFunctions';\r\nimport './ScreeningInfo.css';\r\n\r\n/*** Component ***/\r\nconst ScreeningInfo = ({\r\n  seat,\r\n  screening,\r\n  timeClass,\r\n  seatClass,\r\n  wrapperClass,\r\n}) => {\r\n  if (!isSeatDefined(seat, null)) {\r\n    return (\r\n      <div className={`${wrapperClass} screeningInfo-wrapper`}>\r\n        <p className={`${timeClass} screeningInfo-time`}>\r\n          <span>{'Godzina: '}</span> {dateFormat(screening.time)}\r\n        </p>\r\n        <p className={`${seatClass} screeningInfo-seat`}>\r\n          <span>{'Sala: '}</span>\r\n          {seat.room_id.name}\r\n          <span>{', Rząd: '}</span>\r\n          {seat.row}\r\n          <span>{', Miejsce: '}</span>\r\n          {seat.seatNumber}\r\n        </p>\r\n      </div>\r\n    );\r\n  } \r\n  else return null;\r\n};\r\n\r\nScreeningInfo.defaultProps = {\r\n  timeClass: '',\r\n  seatClass: '',\r\n  wrapperClass: '',\r\n};\r\n\r\nexport default ScreeningInfo;\r\n","import React from 'react';\r\n\r\nimport { baseUrl } from '../../../../services/API/v1/baseFetch';\r\nimport { isLower as doesUserHasTickets } from '../../../../services/predicates';\r\nimport MoviePoster from '../../../low-level components/MoviePoster/MoviePoster';\r\nimport MovieInfo from '../../../low-level components/MovieInfo/MovieInfo';\r\nimport ScreeningInfo from '../../../low-level components/ScreeningInfo/ScreeningInfo';\r\n\r\n/*** Assistive Functions ***/\r\nconst renderTickets = (reservations, noTicketsText) => {\r\n  if (doesUserHasTickets(0, reservations.length)) {\r\n    return reservations.map(({ screening_id, seat_id, _id }) => {\r\n      let { imageUrl, title, description } = screening_id.movie_id;\r\n\r\n      return (\r\n        <div className='myTickets-innerWrapper' key={_id}>\r\n          <MoviePoster src={`${baseUrl}${imageUrl}`} alt={title} />\r\n\r\n          <div className='myTickets-utils'>\r\n            <MovieInfo movie={{ description, title }} />\r\n            <ScreeningInfo seat={seat_id} screening={screening_id} />\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n  return <div className='myTickets-noTickets'>{noTicketsText}</div>;\r\n};\r\n\r\n/*** Component ***/\r\nexport const Movies = ({ reservations, noTicketsText }) => {\r\n  return (\r\n    <div className='myTickets-wrapper'>\r\n      {renderTickets(reservations, noTicketsText)}\r\n    </div>\r\n  );\r\n};\r\n\r\nMovies.defaultProps = {\r\n  noTicketsText: 'Brak biletów do wyświetlenia',\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nimport { handleErrors } from '../../../services/errors handling/handleErrors';\r\nimport redirectError from '../../../services/errors handling/redirectError';\r\nimport baseFetch from '../../../services/API/v1/baseFetch';\r\nimport { getItem as getUserId } from '../../../services/localStorage';\r\nimport { getItem as getToken } from '../../../services/localStorage';\r\nimport { isEqual as areReservationsFetched } from '../../../services/predicates';\r\nimport { isEqual as isUserLoggedIn } from '../../../services/predicates';\r\nimport Loading from '../../conditional components/Loading/Loading';\r\nimport { LogInNeeded } from '../../conditional components/LogInNeeded/LogInNeeded';\r\nimport { Movies } from './parts/Movies';\r\nimport './MyTickets.css';\r\n\r\n/*** Component ***/\r\nexport class MyTickets extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user_id: getUserId('userId'),\r\n      reservations: null,\r\n    };\r\n  }\r\n\r\n  /* Lifecycle Methods */\r\n  async componentDidMount() {\r\n    if (\r\n      !(\r\n        isUserLoggedIn(this.state.user_id, '') ||\r\n        isUserLoggedIn(this.state.user_id, null)\r\n      )\r\n    ) {\r\n      try {\r\n        const resp = await baseFetch({\r\n          path: `api/reservation/${this.state.user_id}/none`,\r\n          authToken: getToken('token'),\r\n        });\r\n\r\n        handleErrors(resp.status);\r\n\r\n        const reservations = await resp.json();\r\n\r\n        this.setState({ reservations });\r\n      } catch (err) {\r\n        redirectError(this.props.history, err);\r\n      }\r\n    }\r\n  }\r\n\r\n  /* Assistive Methods */\r\n  renderTickets = ({ user_id, reservations }) => {\r\n    if (isUserLoggedIn(user_id, '') || isUserLoggedIn(user_id, null)) {\r\n      setTimeout(() => {\r\n        this.props.history.push('/login');\r\n      }, 1000);\r\n      return <LogInNeeded />;\r\n    } else if (areReservationsFetched(reservations, null)) {\r\n      return <Loading />;\r\n    } else {\r\n      return (\r\n        <div className='myTickets-outerWrapper'>\r\n          <Movies reservations={reservations} />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return this.renderTickets(this.state, this.props);\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport './PriceList.css';\r\n\r\n/*** Assistive Functions ***/\r\nconst renderRows = (table) => {\r\n  const rows = [];\r\n\r\n  for (let el in table) {\r\n    rows.push(\r\n      table[el].map((item, index) => {\r\n        return <td key={index}>{item}</td>;\r\n      })\r\n    );\r\n  }\r\n\r\n  return rows;\r\n};\r\n\r\nconst renderTable = (rows, rowClass) => {\r\n  let table = rows.map((row, index) => {\r\n    return (\r\n      <tr className={`priceList-row ${rowClass}`} key={index}>\r\n        {row}\r\n      </tr>\r\n    );\r\n  });\r\n  return table;\r\n};\r\n\r\n/*** Component ***/\r\nconst PriceList = ({\r\n  title,\r\n  prices,\r\n  titleClass,\r\n  tableClass,\r\n  rowClass,\r\n}) => {\r\n  return (\r\n    <>\r\n      <div className={`priceList-title ${titleClass}`}>{title}</div>\r\n      <table className={`priceList-table ${tableClass}`}>\r\n        <tbody>{renderTable(renderRows(prices), rowClass)}</tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nPriceList.defaultProps = {\r\n  titleClass: '',\r\n  tableClass: '',\r\n  rowClass: '',\r\n};\r\n\r\nexport default PriceList;\r\n","const prices = {\r\n  twoD: {\r\n    openDays: ['', 'Poniedziałek', 'Wtorek-Piątek', 'Weekend'],\r\n    normalTicket: ['Bilet normalny', '15 zł', '21 zł', '25zł'],\r\n    kidPupilTicket: ['Dziecięcy i Studencki', '10zł', '16zł', '16zł'],\r\n    senior: ['Emeryci', '12zł', '17zł', '18zł']\r\n  },\r\n  threeD: {\r\n    openDays: ['', 'Poniedziałek', 'Wtorek-Piątek', 'Weekend'],\r\n    normalTicket: ['Bilet normalny', '25 zł', '28 zł', '30zł'],\r\n    kidPupilTicket: ['Dziecięcy i Studencki', '18zł', '20zł', '22zł'],\r\n    senior: ['Emeryci', '20zł', '22zł', '26zł']\r\n  }\r\n};\r\n\r\nexport default prices;\r\n","import React from 'react';\r\n\r\nimport PriceList from './parts/PriceList/PriceList';\r\nimport pricesData from './parts/pricesData';\r\nimport './Prices.css';\r\n\r\n/*** Component ***/\r\nconst Prices = (props) => {\r\n  return (\r\n    <div className=\"prices-wrapper\">\r\n      <div className=\"prices-content\">\r\n        <h1 className=\"prices-title\">Ceny biletów</h1>\r\n\r\n        <PriceList prices={pricesData.twoD} title=\"FILMY 2D\" />\r\n\r\n        <PriceList prices={pricesData.threeD} title=\"FILMY 3D\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Prices;\r\n","import React from 'react';\r\n\r\nimport { baseUrl } from '../../../../../services/API/v1/baseFetch';\r\nimport MoviePoster from '../../../../low-level components/MoviePoster/MoviePoster';\r\nimport MovieInfo from '../../../../low-level components/MovieInfo/MovieInfo';\r\nimport './Movie.css';\r\n\r\n/*** Assistive Functions ***/\r\nconst renderMovie = ({ _id, imageUrl, title, description }) => {\r\n  return (\r\n    <div className='movie-wrapper' key={_id}>\r\n      <MoviePoster src={`${baseUrl}${imageUrl}`} alt={title} />\r\n\r\n      <div className='movie-utils'>\r\n        <MovieInfo movie={{ description, title }} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n/*** Component ***/\r\nconst Movie = ({ movie }) => {\r\n  return renderMovie(movie);\r\n};\r\n\r\nexport default Movie;\r\n","import React from 'react';\r\n\r\nimport { isEqual } from '../../../services/predicates';\r\nimport './Select.css';\r\n\r\n/*** Assistive Functions ***/\r\nconst doesDataExist = (dataArr) => {\r\n  return !dataArr.every((elem) => isEqual(elem, undefined));\r\n};\r\n\r\nconst renderOptionTags = (\r\n  optionTitleProp,\r\n  dataArr,\r\n  optionContentFunc,\r\n  optionValueFunc,\r\n  fallbackValueProp\r\n) => {\r\n  if (doesDataExist(dataArr)) {\r\n    return (\r\n      <>\r\n        <option>{optionTitleProp}</option>\r\n        {dataArr.map((item, index) => {\r\n          return (\r\n            <option key={index} value={optionValueFunc(item)}>\r\n              {optionContentFunc(item)}\r\n            </option>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  } else return <option>{fallbackValueProp}</option>;\r\n};\r\n\r\n/*** Component ***/\r\nconst Select = ({\r\n  selectNameProp,\r\n  classes,\r\n  labelTextProp,\r\n  spinnerComp,\r\n  optionTitleProp,\r\n  dataArr,\r\n  optionContentFunc,\r\n  optionValueFunc,\r\n  fallbackValueProp,\r\n  handlerFunc,\r\n  reference,\r\n}) => {\r\n  return (\r\n    <label>\r\n      <div style={{ display: 'inline' }}>{labelTextProp}</div>\r\n      {spinnerComp}\r\n      <select\r\n        name={selectNameProp}\r\n        className={classes}\r\n        ref={reference}\r\n        onChange={handlerFunc}\r\n      >\r\n        {renderOptionTags(\r\n          optionTitleProp,\r\n          dataArr,\r\n          optionContentFunc,\r\n          optionValueFunc,\r\n          fallbackValueProp\r\n        )}\r\n      </select>\r\n    </label>\r\n  );\r\n};\r\n\r\nSelect.defaultProps = {\r\n  classes: '',\r\n  fallbackValueProp: 'Brak dostępnych terminów',\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from 'react';\r\n\r\nimport timeout from '../../../../../services/timeout';\r\nimport redirectError from '../../../../../services/errors handling/redirectError';\r\nimport { handleErrors } from '../../../../../services/errors handling/handleErrors';\r\nimport { getItem as getToken } from '../../../../../services/localStorage';\r\nimport baseFetch from '../../../../../services/API/v1/baseFetch';\r\nimport { isEqual } from '../../../../../services/predicates';\r\nimport LoadingSpinner from '../../../../low-level components/LoadingSpinner/LoadingSpinner';\r\nimport {\r\n  startLoading,\r\n  finishLoading,\r\n  enableElement as enableBtn,\r\n  disableElement as disableBtn,\r\n} from '../../../../../assistive functions';\r\nimport Select from '../../../../low-level components/Select/Select';\r\nimport { SubmitBtn as ReservationBtn } from '../../../../low-level components/SubmitBtn/SubmitBtn';\r\nimport {\r\n  getAllSeats,\r\n  dateTitleProp,\r\n  dateFormat,\r\n  restartRowAndSeatUI,\r\n  setTakenSeats,\r\n} from './parts/assistiveFunctions';\r\n\r\n/*** Variables ***/\r\nconst classes = {\r\n  invalidSubmit: 'invalidSubmit',\r\n  validSubmit: 'validSubmit',\r\n  cursorAuto: 'cursor-auto',\r\n  cursorPointer: 'cursor-pointer',\r\n};\r\n\r\n/*** Component ***/\r\nclass BuyTicket extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      movie_id: null,\r\n      user_id: this.props.user_id,\r\n      screenings: [],\r\n      screening_id: null,\r\n      room: '',\r\n      room_id: null,\r\n      rowsList: [],\r\n      rowsWithSeats: [],\r\n      immutableRows: [],\r\n      reservationDone: false,\r\n      takenSeats: [],\r\n      freeSeats: [],\r\n      choosenRow: null,\r\n      choosenSeat: null,\r\n      seat_id: '',\r\n      afterSubmitInfo: '',\r\n      reservation: {},\r\n    };\r\n    this.selectDateRef = React.createRef();\r\n    this.selectRowRef = React.createRef();\r\n    this.selectSeatRef = React.createRef();\r\n    this.afterSubmitInfoRef = React.createRef();\r\n    this.loadingSpinnerRef = React.createRef();\r\n    this.reservationSpinnerRef = React.createRef();\r\n    this.reservationBtnRef = React.createRef();\r\n  }\r\n\r\n  /* Lifecycle Methods*/\r\n  async componentDidMount() {\r\n    startLoading(this.loadingSpinnerRef.current);\r\n    let screenings;\r\n    try {\r\n      const resp = await baseFetch({\r\n        path: `api/screening/${this.props.movie_id}/${this.props.screening_id}`,\r\n        authToken: getToken('token'),\r\n      });\r\n\r\n      handleErrors(resp.status);\r\n      screenings = await resp.json();\r\n    } catch (err) {\r\n      redirectError(this.props.history, err);\r\n    }\r\n\r\n    this.setAnyState(\r\n      {\r\n        screenings,\r\n      },\r\n      () => {\r\n        finishLoading(this.loadingSpinnerRef.current);\r\n      }\r\n    );\r\n  }\r\n\r\n  /* Assistive Methods */\r\n  setAnyState = (receivedState, cb) => {\r\n    const newState = Object.assign(\r\n      {},\r\n      {\r\n        ...this.state,\r\n      },\r\n      receivedState\r\n    );\r\n    this.setState(newState, cb);\r\n  };\r\n\r\n  setRowsList = () => {\r\n    return this.state.rowsWithSeats\r\n      .map(({ row, seats }) => {\r\n        const isRowNotEmpty = !seats.every((seat) => isEqual(seat, null));\r\n        if (isRowNotEmpty) return row;\r\n      })\r\n      .filter((row) => row);\r\n  };\r\n\r\n  checkAvailableSeats = async (cb) => {\r\n    let existingReservations;\r\n    try {\r\n      const resp = await baseFetch({\r\n        path: `api/reservation/none/${this.state.screening_id}`,\r\n        authToken: getToken('token'),\r\n      });\r\n\r\n      handleErrors(resp.status);\r\n\r\n      existingReservations = await resp.json();\r\n    } catch (err) {\r\n      redirectError(this.props.history, err);\r\n    }\r\n\r\n    this.setAnyState(\r\n      { takenSeats: setTakenSeats(existingReservations) },\r\n      async () => {\r\n        await this.calculateFreeSeats();\r\n        cb();\r\n      }\r\n    );\r\n  };\r\n\r\n  getScreeningData = async () => {\r\n    if (!isEqual(this.state.screening_id, null)) {\r\n      startLoading(this.loadingSpinnerRef.current);\r\n\r\n      let screening;\r\n      try {\r\n        const resp = await baseFetch({\r\n          path: `api/screening/${this.state.movie_id}/${this.state.screening_id}`,\r\n          authToken: getToken('token'),\r\n        });\r\n\r\n        handleErrors(resp.status);\r\n\r\n        screening = await resp.json();\r\n      } catch (err) {\r\n        redirectError(this.props.history, err);\r\n      }\r\n\r\n      const setNewState = () => {\r\n        this.setAnyState(\r\n          {\r\n            ...restartRowAndSeatUI(),\r\n          },\r\n          () => {\r\n            this.setAnyState(\r\n              {\r\n                room: screening.room_id.name,\r\n                rowsList: this.setRowsList(),\r\n              },\r\n              () => {\r\n                finishLoading(this.loadingSpinnerRef.current);\r\n              }\r\n            );\r\n          }\r\n        );\r\n      };\r\n\r\n      const room_id = screening.room_id._id;\r\n      this.setAnyState(\r\n        {\r\n          room_id,\r\n        },\r\n        async () => {\r\n          await this.checkAvailableSeats(setNewState);\r\n        }\r\n      );\r\n    } else {\r\n      this.setAnyState({\r\n        ...restartRowAndSeatUI(),\r\n        room: '',\r\n        room_id: '',\r\n      });\r\n    }\r\n  };\r\n\r\n  afterReservationUserInfo = (element, classToDel, classToAdd, time) => {\r\n    startLoading(element, classToDel, classToAdd);\r\n\r\n    timeout(() => {\r\n      this.setAnyState({ afterSubmitInfo: '' }, () => {\r\n        finishLoading(element);\r\n        this.enableReservation();\r\n      });\r\n    }, time);\r\n  };\r\n\r\n  checkReservationAttempt = (\r\n    message,\r\n    element,\r\n    classToDel,\r\n    classToAdd,\r\n    time\r\n  ) => {\r\n    this.setAnyState(\r\n      {\r\n        afterSubmitInfo: message,\r\n      },\r\n      () => {\r\n        this.afterReservationUserInfo(element, classToDel, classToAdd, time);\r\n      }\r\n    );\r\n  };\r\n\r\n  calculateFreeSeats = async () => {\r\n    let rowsWithSeats = await getAllSeats(\r\n      this.state.room_id,\r\n      this.props.history\r\n    );\r\n\r\n    // Computes which seats are free\r\n    rowsWithSeats.forEach(({ row, seats }, index) => {\r\n      this.state.takenSeats.forEach(({ row: takenRow, seats: takenSeat }) => {\r\n        if (isEqual(takenRow, row)) {\r\n          seats.forEach((seat) => {\r\n            if (isEqual(seat, takenSeat)) {\r\n              delete rowsWithSeats[index].seats[\r\n                rowsWithSeats[index].seats.indexOf(seat)\r\n              ];\r\n            }\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    this.setAnyState({ rowsWithSeats }, () => {\r\n      this.setState({\r\n        rowsList: this.setRowsList(),\r\n      });\r\n    });\r\n  };\r\n\r\n  checkConcurrentReservation = async () => {\r\n    let existingReservations;\r\n\r\n    try {\r\n      const resp = await baseFetch({\r\n        path: `api/reservation/none/${this.state.screening_id}`,\r\n        authToken: getToken('token'),\r\n      });\r\n\r\n      handleErrors(resp.status);\r\n      existingReservations = await resp.json();\r\n    } catch (err) {\r\n      redirectError(this.props.history, err);\r\n    }\r\n\r\n    const takenSeats = setTakenSeats(existingReservations);\r\n    const seat = {\r\n      row: this.state.choosenRow,\r\n      seats: this.state.choosenSeat,\r\n    };\r\n\r\n    const wasConcurrentReservationMade = takenSeats.some((rowObj) => {\r\n      return isEqual(rowObj.row, seat.row) && isEqual(rowObj.seats, seat.seats);\r\n    });\r\n\r\n    return wasConcurrentReservationMade;\r\n  };\r\n\r\n  reservationServerError = (err) => {\r\n    const { validSubmit, invalidSubmit } = classes;\r\n    this.checkReservationAttempt(\r\n      err.message,\r\n      this.afterSubmitInfoRef.current,\r\n      [validSubmit],\r\n      [invalidSubmit],\r\n      3000\r\n    );\r\n  };\r\n\r\n  makeNewReservation = async () => {\r\n    try {\r\n      // Checks if meanwhile another user haven't made the same reservation\r\n      if (await this.checkConcurrentReservation()) {\r\n        handleErrors(404, { concurrentReserv: true });\r\n      }\r\n      const reservationParams = {\r\n        user_id: this.state.user_id,\r\n        seat_id: this.state.seat_id,\r\n        screening_id: this.state.screening_id,\r\n      };\r\n\r\n      const { status: reservStatus } = await baseFetch({\r\n        path: 'api/reservation/',\r\n        authToken: getToken('token'),\r\n        method: 'POST',\r\n        body: JSON.stringify(reservationParams),\r\n      });\r\n\r\n      handleErrors(reservStatus);\r\n\r\n      const { validSubmit, invalidSubmit } = classes;\r\n      this.checkReservationAttempt(\r\n        'Zarezerwowano',\r\n        this.afterSubmitInfoRef.current,\r\n        [invalidSubmit],\r\n        [validSubmit],\r\n        3000\r\n      );\r\n\r\n      // Recalculates seats, after successful reservation\r\n      const setStateAfterNewReserv = () => {\r\n        const freeSeats = this.state.rowsWithSeats[this.state.choosenRow - 1]\r\n          .seats;\r\n        this.setAnyState(\r\n          {\r\n            freeSeats,\r\n            choosenSeat: null,\r\n          },\r\n          () => {\r\n            if (this.state.freeSeats.every((seat) => isEqual(seat, null)))\r\n              this.handleRowOptionChange();\r\n            this.enableReservation();\r\n          }\r\n        );\r\n      };\r\n\r\n      this.checkAvailableSeats(setStateAfterNewReserv);\r\n    } catch (err) {\r\n      this.reservationServerError(err);\r\n    }\r\n  };\r\n\r\n  enableReservation = () => {\r\n    const { cursorAuto, cursorPointer } = classes;\r\n    finishLoading(this.reservationSpinnerRef.current);\r\n    enableBtn(this.reservationBtnRef.current, [cursorPointer], [cursorAuto]);\r\n  };\r\n\r\n  /* Handlers */\r\n  handleDateOptionChange = async (e) => {\r\n    e.persist();\r\n\r\n    const screening_id = isEqual(\r\n      this.selectDateRef.current.value,\r\n      dateTitleProp()\r\n    )\r\n      ? null\r\n      : this.selectDateRef.current.value;\r\n\r\n    this.setAnyState({ screening_id, afterSubmitInfo: '' }, async () => {\r\n      this.getScreeningData();\r\n    });\r\n  };\r\n\r\n  handleRowOptionChange = () => {\r\n    let choosenRow = Number(this.selectRowRef.current.value);\r\n    let freeSeats;\r\n\r\n    // Validation of a choosen row\r\n    if (!isEqual(choosenRow.toString(), 'NaN')) {\r\n      freeSeats = this.state.rowsWithSeats[choosenRow - 1].seats;\r\n    } else {\r\n      choosenRow = null;\r\n      freeSeats = [];\r\n    }\r\n\r\n    this.setAnyState({ freeSeats: [] }, () => {\r\n      this.setAnyState({\r\n        freeSeats,\r\n        choosenRow,\r\n        choosenSeat: null,\r\n        afterSubmitInfo: '',\r\n      });\r\n    });\r\n  };\r\n\r\n  handleSeatOptionChange = (e) => {\r\n    const choosenSeat = Number(this.selectSeatRef.current.value);\r\n    this.setAnyState({ choosenSeat, afterSubmitInfo: '' });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Checks if user checked all required fields\r\n    if (\r\n      isEqual(this.state.choosenRow, null) ||\r\n      isEqual(this.state.choosenSeat, null) ||\r\n      isEqual(this.state.screening_id, null)\r\n    ) {\r\n      const { validSubmit, invalidSubmit } = classes;\r\n      this.checkReservationAttempt(\r\n        'Musisz dokonać wyboru',\r\n        this.afterSubmitInfoRef.current,\r\n        [validSubmit],\r\n        [invalidSubmit],\r\n        1500\r\n      );\r\n    } else {\r\n      const { cursorAuto, cursorPointer } = classes;\r\n      disableBtn(this.reservationBtnRef.current, [cursorAuto], [cursorPointer]);\r\n      startLoading(this.reservationSpinnerRef.current);\r\n\r\n      try {\r\n        // Fetches seat which is to be booked\r\n        const resp = await baseFetch({\r\n          path: `api/seat/${this.state.room_id}/${this.state.choosenRow}/${this.state.choosenSeat}`,\r\n          authToken: getToken('token'),\r\n        });\r\n\r\n        handleErrors(resp.status);\r\n        const { _id: seat_id } = await resp.json();\r\n\r\n        // Makes new reservation\r\n        this.setAnyState({ seat_id }, this.makeNewReservation);\r\n      } catch (err) {\r\n        this.reservationServerError(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div className='buyTicket-wrapper'>\r\n          <Select\r\n            classes='data-select'\r\n            labelTextProp='Wybierz datę seansu:'\r\n            optionTitleProp={dateTitleProp()}\r\n            spinnerComp={<LoadingSpinner reference={this.loadingSpinnerRef} />}\r\n            dataArr={this.state.screenings}\r\n            optionContentFunc={(screening) => dateFormat(screening.time)}\r\n            optionValueFunc={(screening) => screening._id}\r\n            handlerFunc={this.handleDateOptionChange}\r\n            reference={this.selectDateRef}\r\n          />\r\n\r\n          <label>Sala: {this.state.room}</label>\r\n\r\n          <Select\r\n            selectNameProp='row'\r\n            classes='row-select'\r\n            labelTextProp='Rząd:'\r\n            optionTitleProp='Wybierz rząd'\r\n            dataArr={this.state.rowsList}\r\n            optionContentFunc={(rowNum) => rowNum}\r\n            optionValueFunc={(rowNum) => rowNum}\r\n            handlerFunc={this.handleRowOptionChange}\r\n            reference={this.selectRowRef}\r\n          />\r\n\r\n          <Select\r\n            selectNameProp='seat'\r\n            classes='seat-select'\r\n            labelTextProp='Miejsce:'\r\n            optionTitleProp='Wybierz miejsce'\r\n            dataArr={this.state.freeSeats}\r\n            optionContentFunc={(free) => free}\r\n            optionValueFunc={(free) => free}\r\n            handlerFunc={this.handleSeatOptionChange}\r\n            reference={this.selectSeatRef}\r\n          />\r\n\r\n          <ReservationBtn\r\n            btnText='Zarezerwuj'\r\n            classes={`reservationBtn ${classes.cursorPointer}`}\r\n            reference={this.reservationBtnRef}\r\n          >\r\n            <LoadingSpinner\r\n              reference={this.reservationSpinnerRef}\r\n              outerWrapper='reservSpinner-outerWrapper'\r\n              spinner='reservSpinner'\r\n            />\r\n          </ReservationBtn>\r\n\r\n          <p className='afterSubmit invisible' ref={this.afterSubmitInfoRef}>\r\n            {this.state.afterSubmitInfo}\r\n          </p>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BuyTicket;\r\n","import React, { Component } from 'react';\r\n\r\nimport { scrollTop } from '../../../assistive functions';\r\nimport redirectError from '../../../services/errors handling/redirectError';\r\nimport { handleErrors } from '../../../services/errors handling/handleErrors';\r\nimport baseFetch from '../../../services/API/v1/baseFetch';\r\nimport {\r\n  isEqual as isUserLoggedIn,\r\n  isEqual as isMovieFetched,\r\n} from '../../../services/predicates';\r\nimport { getItem as getId } from '../../../services/localStorage';\r\nimport { getItem as getToken } from '../../../services/localStorage';\r\nimport { LogInNeeded } from '../../conditional components/LogInNeeded/LogInNeeded';\r\nimport Loading from '../../conditional components/Loading/Loading';\r\nimport Movie from './parts/Movie/Movie';\r\nimport BuyTicket from './parts/BuyTicket/BuyTicket';\r\nimport '../../tickets components/MyTickets/MyTickets.css';\r\nimport './Reservation.css';\r\n\r\n/*** Component ***/\r\nclass Reservation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user_id: getId('userId'),\r\n      movie_id: '',\r\n      movie: null,\r\n    };\r\n    this.wrapperRef = React.createRef();\r\n  }\r\n\r\n  /* Lifycycle Methods */\r\n  async componentDidMount() {\r\n    const movie_id = getId('movieId');\r\n\r\n    if (\r\n      !(\r\n        isUserLoggedIn(this.state.user_id, '') ||\r\n        isUserLoggedIn(this.state.user_id, null)\r\n      )\r\n    ) {\r\n      try {\r\n        const resp = await baseFetch({\r\n          path: `api/movie/${movie_id}`,\r\n          authToken: getToken('token'),\r\n        });\r\n\r\n        handleErrors(resp.status);\r\n\r\n        const movie = await resp.json();\r\n        this.setState({\r\n          movie_id,\r\n          movie,\r\n        });\r\n      } catch (err) {\r\n        redirectError(this.props.history, err);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    scrollTop();\r\n  }\r\n\r\n  /* Assistive Methods */\r\n  renderReservation = () => {\r\n    if (\r\n      isUserLoggedIn(this.state.user_id, '') ||\r\n      isUserLoggedIn(this.state.user_id, null)\r\n    ) {\r\n      setTimeout(() => {\r\n        this.props.history.push('/login');\r\n      }, 1000);\r\n\r\n      return <LogInNeeded />;\r\n    } else if (isMovieFetched(this.state.movie, null)) {\r\n      return <Loading />;\r\n    } else {\r\n      return (\r\n        <div className='reservation-outerWrapper'>\r\n          <div className='reservation-wrapper' ref={this.wrapperRef}>\r\n            <div className='reservation-itemWrapper'>\r\n              <Movie movie={this.state.movie} />\r\n            </div>\r\n\r\n            <div className='reservation-itemWrapper'>\r\n              <BuyTicket\r\n                history={this.props.history}\r\n                movie_id={this.state.movie_id}\r\n                user_id={this.state.user_id}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return this.renderReservation();\r\n  }\r\n}\r\n\r\nexport default Reservation;\r\n","import React from 'react';\r\n\r\nimport { isEqual } from '../../services/predicates';\r\nimport './ServerError.css';\r\nimport { scrollTop } from '../../assistive functions';\r\n\r\n/*** Component ***/\r\nclass ServerError extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errMsg: '',\r\n      errCode: 0,\r\n    };\r\n  }\r\n\r\n  /* Lifecycle Methods */\r\n  componentDidMount() {\r\n    scrollTop();\r\n    if (this.props.history.location.state) {\r\n      const { message, statusCode } = this.props.history.location.state.err;\r\n\r\n      this.setState({\r\n        errMsg: message,\r\n        errCode: isEqual(statusCode, undefined) ? 500 : statusCode,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        errMsg: 'Wystąpił błąd. Spróbuj ponownie później.',\r\n        errCode: 500,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='serverError-outerWrapper'>\r\n        <div className='serverError-wrapper'>\r\n          <h1>{`Error ${this.state.errCode}`}</h1>\r\n          <h2>{`${this.state.errMsg}`}</h2>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ServerError;\r\n","import React from 'react';\r\n\r\nimport { scrollTop } from '../../assistive functions';\r\nimport { clearLocalStorage, getItem } from '../../services/localStorage';\r\nimport './AutoLogout.css';\r\n\r\n/*** Component ***/\r\nclass AutoLogout extends React.Component {\r\n  /* Lifecycle Methods */\r\n  componentDidMount() {\r\n    scrollTop();\r\n    clearInterval(getItem('intervalId'));\r\n    clearLocalStorage();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='autologout-wrapper'>\r\n        <h1 className='autologout-info'>{this.props.infoText}</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAutoLogout.defaultProps = {\r\n  infoText: 'Zostałeś automatycznie wylogowany.',\r\n};\r\n\r\nexport default AutoLogout;\r\n","import HomePage from '../../HomePage/HomePage';\r\nimport ContactUs from '../../ContactUs/ContactUs';\r\nimport Register from '../../Register/Register';\r\nimport Login from '../../Login/Login';\r\nimport { MyTickets } from '../../tickets components/MyTickets/MyTickets';\r\nimport Prices from '../../Prices/Prices';\r\nimport Reservation from '../../tickets components/Reservation/Reservation';\r\nimport ServerError from '../../ServerError/ServerError';\r\nimport AutoLogout from '../../AutoLogout/AutoLogout';\r\n\r\nexport const appName = '';\r\n\r\nconst routingData = [\r\n  { path: `/`, component: HomePage },\r\n  { path: `/contact`, component: ContactUs },\r\n  { path: `/register`, component: Register },\r\n  { path: `/login`, component: Login },\r\n  { path: `/mytickets`, component: MyTickets },\r\n  { path: `/prices`, component: Prices },\r\n  { path: `/reservation`, component: Reservation },\r\n  { path: `/servererror`, component: ServerError },\r\n  { path: `/autologout`, component: AutoLogout },\r\n];\r\n\r\nconst routingList = routingData.map(({ path, component }) => {\r\n  return { path: `${appName}${path}`, exact: true, component };\r\n});\r\n\r\nexport default routingList;\r\n","import { appName } from '../../App/routing/routingList';\r\n\r\nconst linksList = [\r\n  { to: `${appName}/`, content: 'Oferta', name: 'Homepage' },\r\n  { to: `${appName}/prices`, content: 'Cennik', name: 'PriceList' },\r\n  { to: `${appName}/mytickets`, content: 'Moje bilety', name: 'MyTickets' },\r\n  { to: `${appName}/register`, content: 'Rejestracja', name: 'Register' },\r\n  {\r\n    to: `${appName}/login`,\r\n    content: 'Zaloguj',\r\n    name: 'Login',\r\n  },\r\n];\r\n\r\nexport default linksList;\r\n","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport timeout from '../../services/timeout';\r\nimport { getItem as getUserId } from '../../services/localStorage';\r\nimport {\r\n  isEqual,\r\n  isLowerEqual as isHigherEqual,\r\n} from '../../services/predicates';\r\nimport {\r\n  addClasses,\r\n  removeClasses,\r\n  modifyClasses,\r\n} from '../../assistive functions';\r\nimport linksList from './parts/linksList';\r\nimport './NavBar.css';\r\n\r\nLink.defaultProps = {\r\n  className: 'navBar-item',\r\n};\r\n\r\n/*** Variable ***/\r\nconst classes = {\r\n  visible: 'visible',\r\n  invisible: 'invisible',\r\n  horizontalNav: 'horizontalNav',\r\n  dropdownNav: 'dropdownNav',\r\n  navBarActiveItem: 'navBar-activeItem',\r\n  navBarWrapperAnimation: 'navBar-wrapper-animation',\r\n  navBarMenuIconAnimation: 'navBar-menuIcon-animation',\r\n};\r\n\r\n/*** Component ***/\r\nclass NavBar extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loginBtn: '',\r\n      windowWidth: window.innerWidth,\r\n      currentPathName: this.props.location.pathname,\r\n      expanded: false,\r\n      dropdown: isHigherEqual(660, window.innerWidth) ? true : false,\r\n    };\r\n    this.inputRef = React.createRef();\r\n    this.iconWrapperRef = React.createRef();\r\n    this.wrapperRef = React.createRef();\r\n    this.outerWrapperRef = React.createRef();\r\n  }\r\n\r\n  /* Lifecycle Methods */\r\n  componentDidMount() {\r\n    const { horizontalNav, dropdownNav } = classes;\r\n    this.setState({ loginBtn: this.setLoginBtnText() });\r\n    if (this.state.dropdown) {\r\n      modifyClasses(this.wrapperRef.current, [horizontalNav], [dropdownNav]);\r\n    } else {\r\n      modifyClasses(this.wrapperRef.current, [dropdownNav], [horizontalNav]);\r\n    }\r\n\r\n    window.addEventListener('resize', this.handleWindowResize);\r\n    this.outerWrapperRef.current.addEventListener(\r\n      'blur',\r\n      this.hideNavLinksWrapperFunc\r\n    );\r\n\r\n    this.setActiveNavTab();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.setState(\r\n      {\r\n        loginBtn: this.setLoginBtnText(),\r\n        currentPathName: this.props.location.pathname,\r\n      },\r\n      () => {\r\n        this.setActiveNavTab();\r\n      }\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.handleWindowResize);\r\n    this.outerWrapperRef.current.removeEventListener(\r\n      'blur',\r\n      this.hideNavLinksWrapperFunc\r\n    );\r\n  }\r\n\r\n  /* Assistive Methods */\r\n  setLoginBtnText = () => {\r\n    return getUserId('userId') ? 'Wyloguj' : 'Zaloguj';\r\n  };\r\n\r\n  handleWindowResize = () => {\r\n    const { dropdownNav, invisible, horizontalNav } = classes;\r\n    if (isHigherEqual(window.innerWidth, 660)) {\r\n      this.setState({ dropdown: false }, () => {\r\n        modifyClasses(\r\n          this.wrapperRef.current,\r\n          [dropdownNav, invisible],\r\n          [horizontalNav]\r\n        );\r\n      });\r\n    } else {\r\n      this.setState({ dropdown: true, expanded: false }, () => {\r\n        modifyClasses(this.wrapperRef.current, [horizontalNav], [dropdownNav]);\r\n      });\r\n    }\r\n  };\r\n\r\n  setActiveNavTab = () => {\r\n    const { navBarActiveItem } = classes;\r\n    const navChildren = Array.from(this.wrapperRef.current.children);\r\n    const activeChild = navChildren.find((aTag) => {\r\n      return isEqual(aTag.hash, `#${this.state.currentPathName}`);\r\n    });\r\n\r\n    navChildren.forEach((aTag) => removeClasses(aTag, navBarActiveItem));\r\n    if (activeChild) addClasses(activeChild, navBarActiveItem);\r\n  };\r\n\r\n  handleIconClick = () => {\r\n    const {\r\n      visible,\r\n      invisible,\r\n      navBarWrapperAnimation,\r\n      navBarMenuIconAnimation,\r\n    } = classes;\r\n    if (this.state.expanded) {\r\n      modifyClasses(this.wrapperRef.current, [visible], [invisible]);\r\n      this.setState({ expanded: false });\r\n    } else {\r\n      addClasses(this.wrapperRef.current, [navBarWrapperAnimation]);\r\n      addClasses(this.iconWrapperRef.current, [navBarMenuIconAnimation]);\r\n      timeout(() => {\r\n        removeClasses(this.wrapperRef.current, [navBarWrapperAnimation]);\r\n        removeClasses(this.iconWrapperRef.current, [navBarMenuIconAnimation]);\r\n      }, 2000);\r\n      modifyClasses(this.wrapperRef.current, [invisible], [visible]);\r\n      this.setState({ expanded: true });\r\n    }\r\n  };\r\n\r\n  hideNavLinks = (isDropdown) => {\r\n    const { visible, invisible } = classes;\r\n    if (isDropdown) {\r\n      timeout(() => {\r\n        this.setState({ expanded: false }, () => {\r\n          modifyClasses(this.wrapperRef.current, [visible], [invisible]);\r\n        });\r\n      }, 250);\r\n    }\r\n  };\r\n\r\n  hideNavLinksWrapperFunc = () => this.hideNavLinks(this.state.dropdown);\r\n\r\n  renderLinks = () => {\r\n    return linksList.map(({ to, content, name }, index) => {\r\n      if (isEqual(name, 'Login')) content = this.state.loginBtn;\r\n      return (\r\n        <Link key={index} to={to}>\r\n          {content}\r\n        </Link>\r\n      );\r\n    });\r\n  };\r\n\r\n  renderDropdownIcon = (isExpanded) => {\r\n    if (isExpanded) {\r\n      return <FontAwesomeIcon icon={faTimes} onClick={this.handleIconClick} />;\r\n    } else {\r\n      return <FontAwesomeIcon icon={faBars} onClick={this.handleIconClick} />;\r\n    }\r\n  };\r\n\r\n  renderDropdownNav = (isExpanded) => {\r\n    return this.renderHorizontalNav(() => this.renderDropdownIcon(isExpanded));\r\n  };\r\n\r\n  renderHorizontalNav = (renderAdditionalChildren = () => {}) => {\r\n    return (\r\n      <div\r\n        className='navBar-outerWrapper'\r\n        ref={this.outerWrapperRef}\r\n        tabIndex='0'\r\n      >\r\n        <div className='iconWrapperRef' ref={this.iconWrapperRef}>\r\n          {renderAdditionalChildren()}\r\n        </div>\r\n        <div className='navBar-wrapper' ref={this.wrapperRef}>\r\n          {this.renderLinks()}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    if (this.state.dropdown) {\r\n      return this.renderDropdownNav(this.state.expanded);\r\n    } else {\r\n      return this.renderHorizontalNav();\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(NavBar);\r\n","import React from 'react';\r\n\r\nimport './Attribution.css';\r\n\r\n/*** Component ***/\r\nconst Attribution = () => {\r\n  return (\r\n    <div className=\"item attribution\">\r\n      <a className=\"item\" href=\"http://loading.io\" target=\"blank\">\r\n        the spinner \"Ellipsis\" is provided by loading.io\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Attribution;\r\n","import React from 'react';\r\n\r\n/*** Component ***/\r\nconst CinemasList = ({ className, cinemasList }) => {\r\n  return cinemasList.map(({ content }, index) => {\r\n    return (\r\n      <div className={className} key={index}>\r\n        {content}\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\nCinemasList.defaultProps = {\r\n  className: 'item',\r\n};\r\n\r\nexport default CinemasList;\r\n","export const cinemasList = [\r\n  { content: 'Katowice' },\r\n  { content: 'Kraków' },\r\n  { content: 'Łódź' },\r\n  { content: 'Poznań' },\r\n  { content: 'Sopot' },\r\n  { content: 'Warszawa' },\r\n  { content: 'Wrocław' },\r\n  { content: 'Zgorzelec' },\r\n];\r\n","import React from 'react';\r\n\r\nimport CinemasList from '../CinemasList/CinemasList';\r\nimport { cinemasList } from '../CinemasList/data';\r\n\r\n/*** Component ***/\r\nconst OurCinemas = () => {\r\n  return (\r\n    <div className=\"item\">\r\n      <h2>NASZE KINA</h2>\r\n      <div className=\"ui list\">\r\n        <CinemasList cinemasList={cinemasList} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OurCinemas;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { appName } from '../../../App/routing/routingList';\r\n\r\n/*** Component ***/\r\nconst ContactsLink = () => {\r\n  return (\r\n    <div className=\"item\">\r\n      <h2>KONTAKT</h2>\r\n      <div className=\"ui list\">\r\n        <Link to={`${appName}/contact`} className=\"item\">\r\n          Kontakt\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactsLink;\r\n","import React from 'react';\r\n\r\n/*** Component ***/\r\nconst Applications = ({ dataList }) => {\r\n  const picsList = () => {\r\n    return dataList.map(({ className, src, alt }, index) => {\r\n      return (\r\n        <div key={index} className=\"item\">\r\n          <img className={className} src={src} alt={alt} />\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"item\">\r\n      <h2>APLIKACJA MINIKINO</h2>\r\n      <div className=\"ui list\">{picsList()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Applications;\r\n","export const picsData = [\r\n  { className: 'footer-app-and', src: 'img/app-and.jpg', alt: 'Android' },\r\n  { className: 'footer-app-ios', src: 'img/app-mob.jpg', alt: 'IOS' },\r\n];\r\n","import React from 'react';\r\n\r\nimport Attribution from './parts/Attribution/Attribution';\r\nimport OurCinemas from './parts/OurCinemas/OurCinemas';\r\nimport ContactLink from './parts/ContactLink/ContactLink';\r\nimport Applications from './parts/Applications/Applications';\r\nimport { picsData } from './parts/Applications/data';\r\nimport './Footer.css';\r\n\r\n/*** Component ***/\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer-outerWrapper\">\r\n      <div className=\"footer-wrapper\">\r\n        <OurCinemas />\r\n        <Applications dataList={picsData} />\r\n        <ContactLink />\r\n      </div>\r\n      <Attribution />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { Route, withRouter } from 'react-router-dom';\r\n\r\nimport timeout from '../../services/timeout';\r\nimport {\r\n  getItem as getExpiresIn,\r\n  clearLocalStorage,\r\n} from '../../services/localStorage';\r\nimport { setItem as setAutoLogoutTimerId } from '../../services/localStorage';\r\nimport { setItem as setAutoLogoutReminderTimerId } from '../../services/localStorage';\r\nimport AutoLogoutReminder from '../AutoLogoutReminder/AutoLogoutReminder';\r\nimport NavBar from '../NavBar/NavBar';\r\nimport Footer from '../Footer/Footer';\r\nimport routingList from '../App/routing/routingList';\r\nimport './App.css';\r\n\r\n/*** Component ***/\r\nclass App extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      reminder: false,\r\n    };\r\n    this.appWrapperRef = React.createRef();\r\n    this.mainContainerRef = React.createRef();\r\n  }\r\n\r\n  /* Lifecycle Methods */\r\n  componentDidMount() {\r\n    const expiresIn = getExpiresIn('expiresIn');\r\n    if (expiresIn) {\r\n      this.handleAutoLogout(expiresIn);\r\n      this.handleAutoLogoutReminder(expiresIn);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const expiresIn = getExpiresIn('expiresIn');\r\n    this.handleAutoLogoutReminder(expiresIn);\r\n  }\r\n\r\n  /* Assistive Methods */\r\n  handleAutoLogout = (expiresIn) => {\r\n    if (Date.now() > expiresIn) {\r\n      clearLocalStorage();\r\n    } else {\r\n      const autoLogoutRedirect = () => {\r\n        this.props.history.push('/autologout');\r\n      };\r\n      const autoLogoutTimerId = timeout(\r\n        autoLogoutRedirect,\r\n        expiresIn - Date.now()\r\n      );\r\n      setAutoLogoutTimerId('autoLogoutTimerId', autoLogoutTimerId);\r\n    }\r\n  };\r\n\r\n  handleAutoLogoutReminder = (expiresIn) => {\r\n    const timeToShowReminder = 300000;\r\n    if (expiresIn && Date.now() - timeToShowReminder < expiresIn) {\r\n      const autoLogoutReminderCb = () => {\r\n        this.setState({ reminder: true });\r\n      };\r\n      const autoLogoutReminderTimerId = timeout(\r\n        autoLogoutReminderCb,\r\n        expiresIn - Date.now() - timeToShowReminder\r\n      );\r\n      setAutoLogoutReminderTimerId(\r\n        'autoLogoutReminderTimerId',\r\n        autoLogoutReminderTimerId\r\n      );\r\n    } else if (!expiresIn) {\r\n      this.setState({ reminder: false });\r\n    }\r\n  };\r\n\r\n  renderRouting = () => {\r\n    return routingList.map(({ path, component, exact }, index) => {\r\n      return (\r\n        <Route key={index} path={path} exact={exact} component={component} />\r\n      );\r\n    });\r\n  };\r\n\r\n  renderAutoLogoutReminder = () => {\r\n    if (this.state.reminder) return <AutoLogoutReminder />;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <NavBar />\r\n        <div className='main-container' ref={this.mainContainerRef}>\r\n          {this.renderRouting()}\r\n          {this.renderAutoLogoutReminder()}\r\n        </div>\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\n\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}