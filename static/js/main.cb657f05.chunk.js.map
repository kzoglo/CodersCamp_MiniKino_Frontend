{"version":3,"sources":["services/timeout/index.js","services/localStorage/index.js","assistive functions/index.js","components/AutoLogoutReminder/AutoLogoutReminder.js","services/predicates/index.js","services/errors handling/redirectError.js","services/errors handling/handleErrors.js","services/apis/baseFetch.js","components/conditional_components/Loading/Loading.js","components/low-level_components/MoviePoster/MoviePoster.js","components/HomePage/parts/MovieLinkWithTitle/MovieLinkWithTitle.js","components/HomePage/parts/MoviesGroup/MoviesGroup.js","components/HomePage/HomePage.js","components/ContactUs/parts/ContactWay/ContactWay.js","components/ContactUs/ContactUs.js","components/low-level_components/LoadingSpinner/LoadingSpinner.js","components/low-level_components/FormInput/FormInput.js","components/low-level_components/SubmitBtn/SubmitBtn.js","components/Register/parts/assistive functions.js","components/Register/Register.js","components/conditional_components/LogInNeeded/LogInNeeded.js","components/Login/Login.js","components/low-level_components/MovieInfo/MovieInfo.js","components/tickets_components/Reservation/parts/BuyTicket/parts/assistiveFunctions.js","components/low-level_components/ScreeningInfo/ScreeningInfo.js","components/tickets_components/MyTickets/parts/Movies.js","components/tickets_components/MyTickets/MyTickets.js","components/Prices/parts/PriceList/PriceList.js","components/Prices/parts/pricesData.js","components/Prices/Prices.js","components/tickets_components/Reservation/parts/Movie/Movie.js","components/low-level_components/Select/Select.js","components/tickets_components/Reservation/parts/BuyTicket/BuyTicket.js","components/tickets_components/Reservation/Reservation.js","components/ServerError/ServerError.js","components/AutoLogout/AutoLogout.js","components/App/routing/routingList.js","components/NavBar/parts/linksList.js","components/NavBar/NavBar.js","components/Footer/parts/Attribution/Attribution.js","components/Footer/parts/CinemasList/CinemasList.js","components/Footer/parts/CinemasList/data.js","components/Footer/parts/OurCinemas/OurCinemas.js","components/Footer/parts/ContactLink/ContactLink.js","components/Footer/parts/Applications/Applications.js","components/Footer/parts/Applications/data.js","components/Footer/Footer.js","components/App/App.js","index.js"],"names":["timeout","func","time","setTimeout","getAnyItem","item","window","localStorage","getItem","setAnyItem","value","setItem","clearLocalStorage","clear","scrollTop","scrollTo","top","bahavior","addClasses","element","classes","Array","forEach","newClass","classList","add","removeClasses","remove","modifyClasses","classesToDel","classesToAdd","startLoading","finishLoading","disableElement","setAttribute","enableElement","removeAttribute","AutoLogoutReminder","props","formatCountdown","Math","round","state","minute","floor","seconds","formatedSeconds","countdownAutologout","intervalId","setInterval","setState","prevState","cancelInterval","clearInterval","closeWindow","wrapperRef","current","renewSession","redirectWrapperRef","renewWrapperRef","agreeToRenew","clearTimeout","getAutoLogoutTimerId","getAutoLogoutReminderTimerId","history","push","getTokenExpiration","Date","now","React","createRef","this","className","ref","renewSessionText","onClick","renewSessionBtn","icon","faTimes","redirectToLoginText","agreeToRenewBtn","cancelRenewBtn","Component","defaultProps","withRouter","isLower","x","y","isLowerEqual","z","isInequal","isEqual","redirectError","err","pathname","errorTexts","serverErrMsg","concurrentReservErrMsg","validationErrMsg","authErrMsg","conflictErrMsg","badReqErrMsg","forbiddenErrMsg","notFoundErrMsg","handleErrors","status","handler","message","error","Error","statusCode","baseUrl","baseFetch","a","async","path","body","contentType","method","authToken","fetch","headers","Authorization","Loading","loadingText","MoviePoster","src","alt","available","undefined","MovieLinkWithTitle","imageUrl","_id","title","to","appName","setMovieId","data-movie-id","MoviesGroup","movies","map","index","key","renderMovies","HomePage","classifyMovies","newMovies","recommendedMovies","movie","isHigherEqual","year","getFullYear","screenings","availableScreenings","unavailableScreenings","respMovies","json","getScreenings","checkAvailability","unavailable","moviesWithAvailability","addAvailability","respScreenings","screening","movie_id","includes","id","availableMovies","unavailableMovies","moviesCopy","availableId","unavailableId","moviesBeenFetched","length","ContactWay","iconSemanticUI","header","content","main","secondary","communication","way","resource","wrapperClass","iconClass","titleClass","textsClass","ContactUs","getVariables","finalWidthOfWindow","childrenNum","children","wrapper","changeToOneColumn","style","changeToMultiColumn","handleResize","windowWidth","innerWidth","count","width","addEventListener","nextProps","nextState","p1","p2","hadStateChanged","removeEventListener","LoadingSpinner","reference","outerWrapper","spinnerWrapper","spinner","FormInput","moduleName","formValue","type","name","placeholder","minlength","maxlength","required","onChange","onBlur","htmlFor","minLength","maxLength","SubmitBtn","btnText","negativeValidation","parentNode","warningText","innerText","replace","positiveValidation","validateInput","test","polishNounForm","Register","renderInputs","firstName","firstNameRef","lastName","lastNameRef","email","emailRef","pass","passRef","confirmPass","confirmPassRef","e","handleInputChange","target","validatePass","afterSubmitInfo","validateRegisterInfo","errMsg","validateRegisterInfoParagraph","validateRegisterInfoRef","isRegistrationSuccessful","dispatchToLogin","getUserId","endRegister","registerSpinnerRef","enableRegisterBtn","registerBtnRef","stateKey","handleSubmit","preventDefault","disableRegisterBtn","userData","surname","password","confirmPassword","JSON","stringify","focus","onSubmit","registerFormRef","LogInNeeded","logInText","Login","renderLoginInputs","endLogin","loginSpinnerRef","enableLoginBtn","loginBtnRef","handleAutoLogout","expiresIn","autoLogoutTimerId","setAutoLogoutTimerId","disableLoginBtn","loginData","resp","token","userId","setUserId","setAuthToken","setExpiresIn","getExpiresIn","isLoggedIn","validateLoginInfoRef","goBack","cutMovieDescription","fullDescr","compareLenghts","slice","MovieInfo","description","descriptionClass","descrSpanClass","tooltipTextClass","refDescr","refTooltip","descr","dots","shortDescrWithDotsLength","fullDescrAndTooltipText","dateTitleProp","dateFormat","toLocaleString","month","day","hour","getAllSeats","room_id","getToken","seats","filtered","rowNum","occuredRows","row","seatNumber","elem","sort","b","setTakenSeats","data","seat_id","restartRowAndSeatUI","choosenRow","choosenSeat","freeSeats","rowsList","ScreeningInfo","seat","timeClass","seatClass","isSeatDefined","Movies","reservations","noTicketsText","doesUserHasTickets","screening_id","renderTickets","MyTickets","user_id","isUserLoggedIn","areReservationsFetched","PriceList","prices","tableClass","rowClass","rows","renderTable","table","el","renderRows","twoD","openDays","normalTicket","kidPupilTicket","senior","threeD","Prices","pricesData","Movie","renderMovie","renderOptionTags","optionTitle","optionContent","optionValue","fallbackValue","every","doesDataExist","Select","selectName","labelText","display","BuyTicket","setAnyState","receivedState","cb","newState","Object","assign","checkAvailableSeats","existingReservations","takenSeats","calculateFreeSeats","getScreeningData","loadingSpinnerRef","setNewState","room","rowsWithSeats","afterReservationUserInfo","classToDel","classToAdd","enableReservation","checkReservationAttempt","takenRow","takenSeat","indexOf","checkConcurrentReservation","wasConcurrentReservationMade","some","rowObj","reservationServerError","afterSubmitInfoRef","makeNewReservation","concurrentReserv","reservationParams","reservStatus","setStateAfterNewReserv","reservationSpinnerRef","enableBtn","reservationBtnRef","handleDateOptionChange","persist","selectDateRef","handleRowOptionChange","Number","selectRowRef","toString","handleSeatOptionChange","selectSeatRef","disableBtn","immutableRows","reservationDone","reservation","free","Reservation","renderReservation","isMovieFetched","getId","ServerError","errCode","location","PureComponent","AutoLogout","infoText","routingList","component","exact","linksList","Link","NavBar","setLoginBtnText","handleWindowResize","dropdown","expanded","setActiveNavTab","navChildren","from","activeChild","find","aTag","currentPathName","handleIconClick","iconWrapperRef","hideNavLinks","isDropdown","hideNavLinksWrapperFunc","renderLinks","loginBtn","renderDropdownIcon","isExpanded","faBars","renderDropdownNav","renderHorizontalNav","renderAdditionalChildren","outerWrapperRef","tabIndex","inputRef","Attribution","href","CinemasList","cinemasList","OurCinemas","ContactsLink","Applications","dataList","picsData","Footer","ContactLink","App","handleAutoLogoutReminder","autoLogoutReminderTimerId","reminder","setAutoLogoutReminderTimerId","renderRouting","renderAutoLogoutReminder","appWrapperRef","mainContainerRef","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.cb657f05.chunk.js","sourcesContent":["const timeout = (func, time) => {\r\n  const id = setTimeout(func, time);\r\n  return id;\r\n};\r\n\r\nexport default timeout;\r\n","export const getAnyItem = item => {\r\n  return window.localStorage.getItem(item);\r\n};\r\n\r\nexport const setAnyItem = (item, value) => {\r\n  window.localStorage.setItem(item, value);\r\n};\r\n\r\nexport const clearLocalStorage = () => {\r\n  window.localStorage.clear();\r\n};\r\n","/*** Assistive Functions ***/\r\n/* Generic */\r\nexport const scrollTop = () => {\r\n  window.scrollTo({\r\n    top: 0,\r\n    bahavior: 'smooth',\r\n  });\r\n};\r\n\r\nexport const addClasses = (element, classes) => {\r\n  if (!(classes instanceof Array)) classes = [classes];\r\n  classes.forEach((newClass) => {\r\n    element.classList.add(newClass);\r\n  });\r\n};\r\n\r\nexport const removeClasses = (element, classes) => {\r\n  if (!(classes instanceof Array)) classes = [classes];\r\n  classes.forEach((newClass) => {\r\n    element.classList.remove(newClass);\r\n  });\r\n};\r\n\r\nexport const modifyClasses = (\r\n  element,\r\n  classesToDel = [],\r\n  classesToAdd = []\r\n) => {\r\n  removeClasses(element, classesToDel);\r\n  addClasses(element, classesToAdd);\r\n};\r\n\r\nexport const startLoading = (element, classesToDel = [], classesToAdd = []) => {\r\n  modifyClasses(\r\n    element,\r\n    ['invisible', ...classesToDel],\r\n    ['visible', ...classesToAdd]\r\n  );\r\n};\r\n\r\nexport const finishLoading = (element) => {\r\n  modifyClasses(element, ['visible'], ['invisible']);\r\n};\r\n\r\nexport const disableElement = (element, classesToAdd, classesToDel) => {\r\n  element.setAttribute('disabled', true);\r\n  modifyClasses(element, classesToDel, classesToAdd);\r\n};\r\n\r\nexport const enableElement = (element, classesToAdd, classesToDel) => {\r\n  element.removeAttribute('disabled', true);\r\n  modifyClasses(element, classesToDel, classesToAdd);\r\n};\r\n\r\n/* Form related */\r\nexport const validateEmail = (emailValue) => {\r\n  if (/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(emailValue))\r\n    return false;\r\n  return true;\r\n};\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport {\r\n  clearLocalStorage,\r\n  getAnyItem as getTokenExpiration,\r\n  setAnyItem,\r\n} from '../../services/localStorage';\r\nimport { getAnyItem } from '../../services/localStorage';\r\nimport { getAnyItem as getAutoLogoutTimerId } from '../../services/localStorage';\r\nimport { getAnyItem as getAutoLogoutReminderTimerId } from '../../services/localStorage';\r\nimport { addClasses, modifyClasses } from '../../assistive functions';\r\nimport './AutoLogoutReminder.css';\r\n\r\n/*** Component ***/\r\nclass AutoLogoutReminder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      time: getTokenExpiration('expiresIn') - Date.now(),\r\n    };\r\n    this.wrapperRef = React.createRef();\r\n    this.redirectWrapperRef = React.createRef();\r\n    this.renewWrapperRef = React.createRef();\r\n  }\r\n\r\n  /* Lifecycle Methods */\r\n  componentDidMount() {\r\n    this.countdownAutologout();\r\n  }\r\n\r\n  /* Assistive Methods */\r\n  formatCountdown = () => {\r\n    const time = Math.round(this.state.time / 1000);\r\n    const minute = Math.floor(time / 60);\r\n    const seconds = time - minute * 60;\r\n    const formatedSeconds = seconds > 9 ? seconds : `0${seconds}`;\r\n    return `${minute}:${formatedSeconds}`;\r\n  };\r\n\r\n  countdownAutologout = () => {\r\n    const intervalId = setInterval(() => {\r\n      this.setState((prevState) => {\r\n        return { time: prevState.time - 1000 };\r\n      });\r\n    }, 1000);\r\n    setAnyItem('intervalId', intervalId);\r\n  };\r\n\r\n  cancelInterval = () => {\r\n    clearInterval(getAnyItem('intervalId'));\r\n  };\r\n\r\n  closeWindow = () => {\r\n    this.cancelInterval();\r\n    modifyClasses(this.wrapperRef.current, 'grid', 'hide');\r\n  };\r\n\r\n  renewSession = () => {\r\n    this.cancelInterval();\r\n    modifyClasses(this.redirectWrapperRef.current, 'hide', 'show');\r\n    addClasses(this.renewWrapperRef.current, 'hide');\r\n  };\r\n\r\n  agreeToRenew = () => {\r\n    this.closeWindow();\r\n    clearTimeout(getAutoLogoutTimerId('autoLogoutTimerId'));\r\n    clearTimeout(getAutoLogoutReminderTimerId('autoLogoutReminderTimerId'));\r\n    clearLocalStorage();\r\n    this.props.history.push('/Login');\r\n  };\r\n\r\n  /* Render */\r\n  render() {\r\n    return (\r\n      <div className=\"autoLogoutReminder-wrapper grid\" ref={this.wrapperRef}>\r\n        <div\r\n          className=\"autoLogoutReminder-reminder-wrapper\"\r\n          ref={this.renewWrapperRef}\r\n        >\r\n          <div className=\"autoLogoutReminder-reminder-innerWrapper\">\r\n            <div className=\"autoLogoutReminder-reminder-content\">\r\n              <p className=\"autoLogoutReminder-reminder-text\">{`Za ${this.formatCountdown()} min. ${\r\n                this.props.renewSessionText\r\n              }`}</p>\r\n              <button\r\n                className=\"submitBtn cursor-pointer\"\r\n                onClick={this.renewSession}\r\n              >\r\n                {this.props.renewSessionBtn}\r\n              </button>\r\n            </div>\r\n            <FontAwesomeIcon icon={faTimes} onClick={this.closeWindow} />\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className=\"autoLogoutReminder-redirect-wrapper hide\"\r\n          ref={this.redirectWrapperRef}\r\n        >\r\n          <div className=\"autoLogoutReminder-redirect-innerWrapper\">\r\n            <p>{this.props.redirectToLoginText}</p>\r\n            <div className=\"autoLogoutReminder-btns-wrapper\">\r\n              <button\r\n                className=\"submitBtn cursor-pointer\"\r\n                onClick={this.agreeToRenew}\r\n              >\r\n                {this.props.agreeToRenewBtn}\r\n              </button>\r\n              <button\r\n                className=\"submitBtn cursor-pointer\"\r\n                onClick={this.closeWindow}\r\n              >\r\n                {this.props.cancelRenewBtn}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAutoLogoutReminder.defaultProps = {\r\n  renewSessionText: 'zostaniesz wylogowany.',\r\n  redirectToLoginText:\r\n    'Teraz zostaniesz wylogowany i przeniesiony do strony logowania.',\r\n  renewSessionBtn: 'Odnów sesję',\r\n  agreeToRenewBtn: 'Kontynuuj',\r\n  cancelRenewBtn: 'Przerwij',\r\n};\r\n\r\nexport default withRouter(AutoLogoutReminder);\r\n","export const check = (p1, p2) => (x, y, z) =>\r\n  (p1(x, y) && p2(x, z)) || (p1(y, x) && p2(z, x));\r\n\r\nexport const isLower = (x, y) => y > x;\r\n\r\nexport const isLowerEqual = (x, z) => z <= x;\r\n\r\nexport const isInequal = (x, y) => x !== y;\r\n\r\nexport const isEqual = (x, y) => {\r\n  return x === y;\r\n};\r\n","const redirectError = (history, err) => {\r\n  history.push({\r\n    pathname: '/servererror',\r\n    state: {\r\n      err,\r\n    },\r\n  });\r\n};\r\n\r\nexport default redirectError;\r\n","import { isEqual } from '../predicates';\r\n\r\n/*** Variables ***/\r\nexport const errorTexts = {\r\n  serverErrMsg: 'Błąd serwera. Spróbuj ponownie później.',\r\n  concurrentReservErrMsg:\r\n    'Przepraszamy, miejsce zostało już zarezerwowane. Odśwież stronę i spróbuj ponownie.',\r\n  validationErrMsg: 'Wprowadzono dane w niedozwolonym formacie.',\r\n  authErrMsg: 'Nieprawidłowy email lub hasło.',\r\n  conflictErrMsg: 'Taki użytkownik już istnieje.',\r\n  badReqErrMsg: 'Niepoprawne żądanie. Spróbuj ponownie później',\r\n  forbiddenErrMsg: 'Nie masz dostępu do żądanego zasobu.',\r\n  notFoundErrMsg: 'Nie znaleziono żądanego zasobu',\r\n};\r\n\r\n/*** Functions ***/\r\nexport const handleErrors = (status) => {\r\n  const handler = (message, status) => {\r\n    const error = new Error(message);\r\n    error.statusCode = status;\r\n    throw error;\r\n  };\r\n\r\n  if (isEqual(status, 200) || isEqual(status, 201)) {\r\n    return;\r\n  } else if (isEqual(status, 400)) {\r\n    handler(errorTexts.badReqErrMsg, 400);\r\n  } else if (isEqual(status, 401)) {\r\n    handler(errorTexts.authErrMsg, status);\r\n  } else if (isEqual(status, 403)) {\r\n    handler(errorTexts.forbiddenErrMsg, status);\r\n  } else if (isEqual(status, 404)) {\r\n    handler(errorTexts.notFoundErrMsg, status);\r\n  } else if (isEqual(status, 409)) {\r\n    handler(errorTexts.conflictErrMsg, status);\r\n  } else if (isEqual(status, 422)) {\r\n    handler(errorTexts.validationErrMsg, status);\r\n  } else if (isEqual(status, 500)) {\r\n    handler(errorTexts.serverErrMsg, status);\r\n  } else {\r\n    handler(errorTexts.serverErrMsg, 500);\r\n  }\r\n};\r\n","export const baseUrl = 'https://mini-kino.herokuapp.com/';\r\n\r\nconst baseFetch = async ({\r\n  path,\r\n  body = null,\r\n  contentType = 'application/json',\r\n  method = 'GET',\r\n  authToken = '',\r\n}) => {\r\n  return await fetch(`${baseUrl}${path}`, {\r\n    method,\r\n    headers: {\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Content-Type': contentType,\r\n      Authorization: `Bearer ${authToken}`,\r\n    },\r\n    body,\r\n  });\r\n};\r\n\r\nexport default baseFetch;\r\n","import React from 'react';\r\n\r\nimport './Loading.css';\r\n\r\n/*** Component ***/\r\nconst Loading = ({ loadingText }) => {\r\n  return (\r\n    <div className=\"loading-wrapper\">\r\n      <div>{loadingText}</div>\r\n      <div className=\"loadingDots-outerWrapper\">\r\n        <div className=\"loadingDots-wrapper\">\r\n          <div> </div> <div> </div> <div> </div> <div> </div> <div> </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nLoading.defaultProps = {\r\n  loadingText: 'Wczytywanie',\r\n};\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\n\r\nimport { isEqual } from '../../../services/predicates';\r\nimport './MoviePoster.css';\r\n\r\nconst MoviePoster = ({ src, alt, available, classes }) => {\r\n  const renderMoviePoster = () => {\r\n    if (isEqual(available, true) || isEqual(available, false)) {\r\n      return (\r\n        <div className=\"moviePoster-wrapper\">\r\n          <img\r\n            className={`${classes} moviePoster-poster`}\r\n            src={src}\r\n            alt={alt}\r\n          />\r\n          <span\r\n            className={`${\r\n              isEqual(available, true)\r\n                ? 'moviePoster-available'\r\n                : 'moviePoster-unavailable'\r\n            } moviePoster-availability`}\r\n          >{`${isEqual(available, true) ? 'Dostępny' : 'Niedostępny'}`}</span>\r\n        </div>\r\n      );\r\n    } else if (isEqual(available, undefined)) {\r\n      return (\r\n        <div className=\"moviePoster-wrapper\">\r\n          <img\r\n            className={`${classes} moviePoster-poster`}\r\n            src={src}\r\n            alt={alt}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return renderMoviePoster();\r\n};\r\n\r\nMoviePoster.defaultProps = {\r\n  classes: '',\r\n};\r\n\r\nexport default MoviePoster;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { baseUrl } from '../../../../services/apis/baseFetch';\r\nimport { setAnyItem as setMovieId } from '../../../../services/localStorage';\r\nimport { appName } from '../../../App/routing/routingList';\r\nimport MoviePoster from '../../../low-level_components/MoviePoster/MoviePoster';\r\nimport './MovieLinkWithTitle.css';\r\n\r\n/*** Component ***/\r\nconst MovieLinkWithTitle = ({ imageUrl, _id, title, available }) => {\r\n  return (\r\n    <>\r\n      <Link\r\n        to={`${appName}/reservation`}\r\n        className=\"movieLinkWithTitle-wrapper\"\r\n        onClick={() => setMovieId('movieId', _id)}\r\n      >\r\n        <MoviePoster\r\n          src={`${baseUrl}${imageUrl}`}\r\n          alt={title}\r\n          available={available}\r\n        />\r\n        <p className=\"movieLinkWithTitle-title\" data-movie-id={_id}>\r\n          {title}\r\n        </p>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieLinkWithTitle;\r\n","import React from 'react';\r\n\r\nimport MovieLinkWithTitle from '../MovieLinkWithTitle/MovieLinkWithTitle';\r\nimport './MoviesGroup.css';\r\n\r\n/*** Assistive Functions ***/\r\nconst renderMovies = (movies) => {\r\n  return movies.map(({ imageUrl, title, _id, available }, index) => {\r\n    return (\r\n      <MovieLinkWithTitle\r\n        key={index}\r\n        imageUrl={imageUrl}\r\n        title={title}\r\n        available={available}\r\n        _id={_id}\r\n      />\r\n    );\r\n  });\r\n};\r\n\r\n/*** Component ***/\r\nconst MoviesGroup = ({ title, movies }) => {\r\n  return (\r\n    <div className=\"moviesGroup-wrapper\">\r\n      <h1 className=\"moviesGroup-title\">{title}</h1>\r\n      <div className=\"moviesGroup-list\">{renderMovies(movies)}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviesGroup;\r\n","import React, { Component } from 'react';\r\n\r\nimport { scrollTop } from '../../assistive functions';\r\nimport redirectError from '../../services/errors handling/redirectError';\r\nimport { handleErrors } from '../../services/errors handling/handleErrors';\r\nimport {\r\n  isInequal as moviesBeenFetched,\r\n  isEqual,\r\n  isLowerEqual as isHigherEqual,\r\n} from '../../services/predicates';\r\nimport baseFetch from '../../services/apis/baseFetch';\r\nimport Loading from '../conditional_components/Loading/Loading';\r\nimport MoviesGroup from './parts/MoviesGroup/MoviesGroup';\r\nimport './HomePage.css';\r\n\r\n/*** Component ***/\r\nclass HomePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      movies: [],\r\n      recommendedMovies: [],\r\n      newMovies: [],\r\n      screenings: [],\r\n      availableScreenings: [],\r\n      unavailableScreenings: [],\r\n    };\r\n  }\r\n\r\n  /* Lifecycle Methods */\r\n  async componentDidMount() {\r\n    scrollTop();\r\n    try {\r\n      const respMovies = await baseFetch({ path: 'api/movie' });\r\n      handleErrors(respMovies.status);\r\n      const movies = await respMovies.json();\r\n      const screenings = await this.getScreenings();\r\n      const { newMovies, recommendedMovies } = this.classifyMovies(movies);\r\n      const { available, unavailable } = this.checkAvailability(\r\n        movies,\r\n        screenings\r\n      );\r\n      const moviesWithAvailability = this.addAvailability(\r\n        available,\r\n        unavailable,\r\n        movies\r\n      );\r\n\r\n      this.setState({\r\n        movies: moviesWithAvailability,\r\n        recommendedMovies,\r\n        newMovies,\r\n      });\r\n    } catch (err) {\r\n      redirectError(this.props.history, err);\r\n    }\r\n  }\r\n\r\n  /* Assistive Methods */\r\n  classifyMovies = (movies) => {\r\n    const newMovies = [];\r\n    const recommendedMovies = [];\r\n\r\n    movies.forEach((movie) => {\r\n      isHigherEqual(movie.year, new Date().getFullYear() - 1)\r\n        ? newMovies.push(movie)\r\n        : recommendedMovies.push(movie);\r\n    });\r\n\r\n    return { newMovies, recommendedMovies };\r\n  };\r\n\r\n  async getScreenings() {\r\n    const respScreenings = await baseFetch({ path: 'api/screening' });\r\n    handleErrors(respScreenings.status);\r\n    const screenings = await respScreenings.json();\r\n    return screenings;\r\n  }\r\n\r\n  checkAvailability(movies, screenings) {\r\n    const available = [];\r\n    const unavailable = [];\r\n\r\n    movies.forEach((movie) => {\r\n      screenings.forEach((screening) => {\r\n        if (isEqual(movie._id, screening.movie_id)) {\r\n          if (!available.includes(movie._id)) available.push(movie._id);\r\n        } else {\r\n          if (!unavailable.includes(movie._id)) unavailable.push(movie._id);\r\n        }\r\n      });\r\n    });\r\n\r\n    available.forEach((id) => {\r\n      unavailable.forEach((_id, index) => {\r\n        if (isEqual(id, _id)) delete unavailable[index];\r\n      });\r\n    });\r\n\r\n    return { available, unavailable };\r\n  }\r\n\r\n  addAvailability(available, unavailable, movies) {\r\n    const availableMovies = [];\r\n    const unavailableMovies = [];\r\n    const moviesCopy = [...movies];\r\n\r\n    moviesCopy.forEach((movie) => {\r\n      available.forEach((availableId) => {\r\n        if (isEqual(movie._id, availableId)) {\r\n          movie.available = true;\r\n          availableMovies.push(movie);\r\n        }\r\n      });\r\n    });\r\n\r\n    unavailable.forEach((unavailableId) => {\r\n      moviesCopy.forEach((movie) => {\r\n        if (!unavailableMovies.includes(movie)) {\r\n          if (isEqual(movie._id, unavailableId)) {\r\n            movie.available = false;\r\n            unavailableMovies.push(movie);\r\n          }\r\n        }\r\n      });\r\n    });\r\n\r\n    const moviesWithAvailability = [...unavailableMovies, ...availableMovies];\r\n    return moviesWithAvailability;\r\n  }\r\n\r\n  /* Render */\r\n  render() {\r\n    if (!moviesBeenFetched(this.state.recommendedMovies.length, 0)) {\r\n      return <Loading />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"homepage-wrapper\">\r\n        <img className=\"homepage-img\" src=\"img/jumanji4.png\" alt=\"Home\" />\r\n\r\n        <MoviesGroup\r\n          title=\"POLECANE FILMY\"\r\n          movies={this.state.recommendedMovies}\r\n        />\r\n\r\n        <MoviesGroup title=\"NOWE FILMY\" movies={this.state.newMovies} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\n\r\nimport './ContactWay.css';\r\n\r\n/*** Component ***/\r\nconst ContactWay = ({\r\n  iconSemanticUI,\r\n  header,\r\n  content: { main, secondary },\r\n  communication: { way, resource },\r\n  classes: { wrapperClass, iconClass, titleClass, textsClass },\r\n}) => {\r\n  return (\r\n    <div className={`contactWay-wrapper ${wrapperClass}`}>\r\n      <i className={`${iconSemanticUI} contactWay-icon ${iconClass}`}></i>\r\n      <h1 className={`contactWay-title ${titleClass}`}>{header}</h1>\r\n      <div className={`contactWay-texts ${textsClass}`}>\r\n        <p>{main}</p>\r\n        <p>{secondary}</p>\r\n        <p>\r\n          {way} <span>{resource}</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactWay.defaultProps = {\r\n  iconSemanticUI: 'envelope outline icon',\r\n  header: 'Napisz do nas e-mail',\r\n  content: {\r\n    main: 'Masz pytanie?',\r\n    secondary: 'Napisz do nas, a na pewno się z Tobą skontaktujemy',\r\n  },\r\n  communication: {\r\n    way: 'e-mail:',\r\n    resource: 'minikino@gmail.com',\r\n  },\r\n  classes: {\r\n    wrapperClass: '',\r\n    iconClass: '',\r\n    titleClass: '',\r\n    textsClass: '',\r\n  },\r\n};\r\n\r\nexport default ContactWay;\r\n","import React from 'react';\r\n\r\nimport { scrollTop } from '../../assistive functions';\r\nimport {\r\n  check,\r\n  isLower,\r\n  isLowerEqual,\r\n  isInequal as hadStateChanged,\r\n} from '../../services/predicates';\r\nimport ContactWay from './parts/ContactWay/ContactWay';\r\nimport './ContactUs.css';\r\n\r\n/*** Component ***/\r\nclass ContactUs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      count: 0,\r\n      windowWidth: window.innerWidth,\r\n    };\r\n    this.wrapperRef = React.createRef();\r\n  }\r\n\r\n  /* Lifecycle Methods */\r\n  componentDidMount() {\r\n    const { finalWidthOfWindow, childrenNum, wrapper } = this.getVariables();\r\n    const width = window.innerWidth;\r\n\r\n    isLowerEqual(finalWidthOfWindow, width)\r\n      ? this.changeToOneColumn(wrapper)\r\n      : this.changeToMultiColumn(childrenNum, wrapper);\r\n\r\n    window.addEventListener('resize', this.handleResize);\r\n    scrollTop();\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    const { finalWidthOfWindow } = this.getVariables();\r\n\r\n    if (hadStateChanged(this.state.windowWidth, nextState.windowWidth)) {\r\n      if (\r\n        check(isLower, isLowerEqual)(\r\n          finalWidthOfWindow,\r\n          this.state.windowWidth,\r\n          nextState.windowWidth\r\n        )\r\n      ) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.handleResize);\r\n  }\r\n\r\n  /* Assistive Methods and Handlers */\r\n  getVariables = () => {\r\n    const wrapperRef = this.wrapperRef.current;\r\n    const values = {\r\n      finalWidthOfWindow: 800,\r\n      childrenNum: wrapperRef.children.length,\r\n      wrapper: wrapperRef,\r\n    };\r\n    return values;\r\n  };\r\n\r\n  changeToOneColumn = (wrapper) => {\r\n    wrapper.style = 'grid-template-columns: auto';\r\n  };\r\n\r\n  changeToMultiColumn = (childrenNum, wrapper) => {\r\n    wrapper.style = `grid-template-columns: repeat(${childrenNum},${\r\n      100 / childrenNum\r\n    }%)`;\r\n  };\r\n\r\n  handleResize = () => {\r\n    const { finalWidthOfWindow, childrenNum, wrapper } = this.getVariables();\r\n\r\n    this.setState({ windowWidth: window.innerWidth }, () => {\r\n      if (isLowerEqual(finalWidthOfWindow, this.state.windowWidth)) {\r\n        this.changeToOneColumn(wrapper);\r\n      } else {\r\n        this.changeToMultiColumn(childrenNum, wrapper);\r\n      }\r\n    });\r\n  };\r\n\r\n  /* Render */\r\n  render() {\r\n    return (\r\n      <div className=\"contactUs-wrapper\" ref={this.wrapperRef}>\r\n        <ContactWay />\r\n        <ContactWay\r\n          iconSemanticUI=\"phone volume icon\"\r\n          header=\"Zadzwoń do nas na infolinię\"\r\n          content={{\r\n            main: 'Masz pytanie?',\r\n            secondary:\r\n              'Nasi fachowcy czekają na Twoje pytania codziennie od 10:00 do 21:00',\r\n          }}\r\n          communication={{ way: 'tel', resource: '+48 666 66 66 66 66' }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactUs;\r\n","import React from 'react';\r\n\r\nimport './LoadingSpinner.css';\r\n\r\nconst LoadingSpinner = ({\r\n  reference,\r\n  classes: { outerWrapper, spinnerWrapper, spinner },\r\n}) => {\r\n  return (\r\n    <div\r\n      ref={reference}\r\n      className={`loadingSpinner-outerWrapper invisible ${outerWrapper}`}\r\n    >\r\n      <div className={`loadingSpinner-wrapper ${spinnerWrapper}`}>\r\n        <div className={`loadingSpinner-spinner ${spinner}`}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nLoadingSpinner.defaultProps = {\r\n  classes: {\r\n    outerWrapper: '',\r\n    spinnerWrapper: '',\r\n    spinner: '',\r\n  },\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React from 'react';\r\n\r\nimport './FormInput.css';\r\n\r\n/*** Variables ***/\r\nexport const labelPosition = 0;\r\nexport const pTagPosition = 2;\r\n\r\n/*** Component ***/\r\nconst FormInput = ({\r\n  moduleName,\r\n  title,\r\n  formValue,\r\n  type,\r\n  name,\r\n  placeholder,\r\n  reference,\r\n  minlength = 3,\r\n  maxlength = 20,\r\n  required = true,\r\n  onClick,\r\n  onChange,\r\n  onBlur,\r\n}) => {\r\n  return (\r\n    <div className={`field ${moduleName}-${name}-wrapper`}>\r\n      <label className=\"formInput-label\" htmlFor={name}>\r\n        {title}\r\n      </label>\r\n      <input\r\n        id={name}\r\n        className=\"formInput-input neutral-input\"\r\n        placeholder={placeholder}\r\n        name={name}\r\n        type={type}\r\n        ref={reference}\r\n        value={formValue}\r\n        minLength={minlength}\r\n        maxLength={maxlength}\r\n        required={required}\r\n        onChange={onChange}\r\n        onClick={onClick}\r\n        onBlur={onBlur}\r\n      />\r\n      <p className=\"validation-p\"></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import React from 'react';\r\nimport './SubmitBtn.css';\r\n\r\nexport const SubmitBtn = ({ classes, btnText, reference, children }) => {\r\n  return (\r\n    <button className={`submitBtn ${classes}`} type=\"submit\" ref={reference}>\r\n      {btnText}\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nSubmitBtn.defaultProps = {\r\n  classes: '',\r\n  btnText: 'Wyślij',\r\n};\r\n","import { isEqual, isLower } from '../../../services/predicates';\r\nimport { validateEmail } from '../../../assistive functions';\r\nimport {\r\n  labelPosition,\r\n  pTagPosition,\r\n} from '../../low-level_components/FormInput/FormInput';\r\n\r\n/*** Assistive Functions ***/\r\nexport const negativeValidation = (parentNode, classList, warningText) => {\r\n  parentNode.children[pTagPosition].innerText = warningText;\r\n  classList.replace('neutral-input', 'invalid-input');\r\n};\r\n\r\nexport const positiveValidation = (parentNode, classList) => {\r\n  parentNode.children[pTagPosition].innerText = '';\r\n  classList.replace('invalid-input', 'neutral-input');\r\n};\r\n\r\nexport const validateInput = (\r\n  { type, value, parentNode, classList },\r\n  minlength\r\n) => {\r\n  let warningText;\r\n  if (isEqual(type, 'email')) {\r\n    if (validateEmail(value)) {\r\n      warningText = `Niepoprawny email.`;\r\n      negativeValidation(parentNode, classList, warningText);\r\n    } else {\r\n      positiveValidation(parentNode, classList);\r\n    }\r\n  } else {\r\n    if (isLower(value.length, minlength)) {\r\n      const polishNounForm = isEqual(minlength, 3) ? 'znaki' : 'znaków';\r\n      warningText = `\"${parentNode.children[labelPosition].innerText}\" musi mieć co najmniej ${minlength} ${polishNounForm}.`;\r\n      negativeValidation(parentNode, classList, warningText);\r\n    } else {\r\n      positiveValidation(parentNode, classList);\r\n    }\r\n  }\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nimport timeout from '../../services/timeout';\r\nimport { handleErrors } from '../../services/errors handling/handleErrors';\r\nimport baseFetch from '../../services/apis/baseFetch';\r\nimport { isEqual, isInequal } from '../../services/predicates';\r\nimport { getAnyItem as getUserId } from '../../services/localStorage';\r\nimport LoadingSpinner from '../low-level_components/LoadingSpinner/LoadingSpinner';\r\nimport FormInput from '../low-level_components/FormInput/FormInput';\r\nimport { SubmitBtn as RegisterBtn } from '../low-level_components/SubmitBtn/SubmitBtn';\r\nimport {\r\n  startLoading,\r\n  finishLoading,\r\n  enableElement as enableRegisterBtn,\r\n  disableElement as disableRegisterBtn,\r\n} from '../../assistive functions';\r\nimport { validateInput } from './parts/assistive functions';\r\nimport './Register.css';\r\n\r\n/*** Component ***/\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      pass: '',\r\n      confirmPass: '',\r\n      afterSubmitInfo: '',\r\n    };\r\n    this.firstNameRef = React.createRef();\r\n    this.lastNameRef = React.createRef();\r\n    this.emailRef = React.createRef();\r\n    this.passRef = React.createRef();\r\n    this.confirmPassRef = React.createRef();\r\n    this.validateRegisterInfoRef = React.createRef();\r\n    this.registerSpinnerRef = React.createRef();\r\n    this.registerBtnRef = React.createRef();\r\n  }\r\n\r\n  /* Lifecycle Methods */\r\n  componentDidMount() {\r\n    this.firstNameRef.current.focus();\r\n  }\r\n\r\n  /* Assistive Methods */\r\n  renderInputs = () => {\r\n    const inputsData = [\r\n      {\r\n        title: 'Imię',\r\n        name: 'firstName',\r\n        placeholder: 'min. 3 znaki',\r\n        formValue: this.state.firstName,\r\n        type: 'text',\r\n        reference: this.firstNameRef,\r\n      },\r\n      {\r\n        title: 'Nazwisko',\r\n        name: 'lastName',\r\n        placeholder: 'min. 3 znaki',\r\n        formValue: this.state.lastName,\r\n        type: 'text',\r\n        reference: this.lastNameRef,\r\n      },\r\n      {\r\n        title: 'Email',\r\n        name: 'email',\r\n        placeholder: 'email',\r\n        formValue: this.state.email,\r\n        type: 'email',\r\n        reference: this.emailRef,\r\n      },\r\n\r\n      {\r\n        title: 'Hasło',\r\n        name: 'pass',\r\n        placeholder: 'min. 8 znaków',\r\n        formValue: this.state.pass,\r\n        type: 'password',\r\n        minlength: 8,\r\n        reference: this.passRef,\r\n      },\r\n      {\r\n        title: 'Potwierdź hasło',\r\n        name: 'confirmPass',\r\n        placeholder: 'min. 8 znaków',\r\n        formValue: this.state.confirmPass,\r\n        type: 'password',\r\n        minlength: 8,\r\n        reference: this.confirmPassRef,\r\n      },\r\n    ];\r\n\r\n    return inputsData.map(\r\n      ({\r\n        title,\r\n        name,\r\n        formValue,\r\n        type,\r\n        placeholder,\r\n        minlength = 3,\r\n        maxlength,\r\n        reference,\r\n      }) => {\r\n        return (\r\n          <FormInput\r\n            moduleName=\"register\"\r\n            key={title}\r\n            title={title}\r\n            name={name}\r\n            placeholder={placeholder}\r\n            formValue={formValue}\r\n            type={type}\r\n            minlength={minlength}\r\n            maxlength={maxlength}\r\n            reference={reference}\r\n            onChange={(e) => this.handleInputChange(name, e.target.value)}\r\n            onBlur={(e) => validateInput(e.target, minlength)}\r\n          />\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  validatePass = () => {\r\n    if (isInequal(this.state.pass, this.state.confirmPass)) {\r\n      this.setState({ afterSubmitInfo: 'Hasła muszą być jednakowe!' }, () => {\r\n        timeout(() => {\r\n          this.setState({ afterSubmitInfo: '' });\r\n        }, 1000);\r\n      });\r\n\r\n      throw new Error('Different passwords!');\r\n    }\r\n  };\r\n\r\n  validateRegisterInfo = (status, errMsg) => {\r\n    const validateRegisterInfoParagraph = this.validateRegisterInfoRef.current;\r\n    let isRegistrationSuccessful = true;\r\n    if (isEqual(status, 201) || isEqual(status, 200)) {\r\n      this.setState({ afterSubmitInfo: 'Zarejestrowano' });\r\n      validateRegisterInfoParagraph.classList.replace('invalid', 'valid');\r\n    } else {\r\n      this.setState({ afterSubmitInfo: errMsg });\r\n      isRegistrationSuccessful = false;\r\n    }\r\n\r\n    timeout(() => {\r\n      this.setState({ afterSubmitInfo: '' });\r\n      validateRegisterInfoParagraph.classList.replace('valid', 'invalid');\r\n      this.dispatchToLogin(isRegistrationSuccessful);\r\n    }, 1000);\r\n  };\r\n\r\n  dispatchToLogin = (isRegistrationSuccessful) => {\r\n    if (isRegistrationSuccessful && !getUserId('userId'))\r\n      this.props.history.push('/login');\r\n  };\r\n\r\n  endRegister = () => {\r\n    finishLoading(this.registerSpinnerRef.current);\r\n    enableRegisterBtn(\r\n      this.registerBtnRef.current,\r\n      ['cursor-pointer'],\r\n      ['cursor-auto']\r\n    );\r\n  };\r\n\r\n  /* Handlers */\r\n  handleInputChange = (stateKey, value) => {\r\n    this.setState({ [stateKey]: value });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    disableRegisterBtn(\r\n      this.registerBtnRef.current,\r\n      ['cursor-auto'],\r\n      ['cursor-pointer']\r\n    );\r\n    startLoading(this.registerSpinnerRef.current);\r\n\r\n    // Checks password length\r\n    try {\r\n      this.validatePass();\r\n    } catch (err) {\r\n      this.endRegister();\r\n      return;\r\n    }\r\n\r\n    // Creates new user\r\n    try {\r\n      const userData = {\r\n        name: this.state.firstName,\r\n        surname: this.state.lastName,\r\n        email: this.state.email,\r\n        password: this.state.pass,\r\n        confirmPassword: this.state.confirmPass,\r\n      };\r\n\r\n      const { status } = await baseFetch({\r\n        path: 'api/user',\r\n        body: JSON.stringify(userData),\r\n        method: 'POST',\r\n      });\r\n\r\n      handleErrors(status);\r\n\r\n      this.endRegister();\r\n      this.validateRegisterInfo(status);\r\n    } catch ({ statusCode, message }) {\r\n      this.endRegister();\r\n      this.validateRegisterInfo(statusCode, message);\r\n    }\r\n  };\r\n\r\n  /* Render */\r\n  render() {\r\n    return (\r\n      <div className=\"register-outerWrapper\">\r\n        <div className=\"register-wrapper\">\r\n          <h1 className=\"register-title\">Rejestracja</h1>\r\n          <form\r\n            className=\"register-form\"\r\n            onSubmit={this.handleSubmit}\r\n            ref={this.registerFormRef}\r\n          >\r\n            {this.renderInputs()}\r\n            <RegisterBtn\r\n              classes=\"registerBtn cursor-pointer\"\r\n              btnText=\"Zarejestruj\"\r\n              reference={this.registerBtnRef}\r\n            >\r\n              <LoadingSpinner\r\n                reference={this.registerSpinnerRef}\r\n                classes={{\r\n                  outerWrapper: 'registerSpinner-outerWrapper',\r\n                  spinner: 'registerSpinner',\r\n                }}\r\n              />\r\n            </RegisterBtn>\r\n            <p\r\n              ref={this.validateRegisterInfoRef}\r\n              className=\"validate-register-info invalid\"\r\n            >\r\n              {this.state.afterSubmitInfo}\r\n            </p>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React from 'react';\r\n\r\nimport { scrollTop } from '../../../assistive functions';\r\nimport './LogInNeeded.css';\r\n\r\nexport const LogInNeeded = ({ logInText }) => {\r\n  scrollTop();\r\n  return <div className=\"logInNeeded\">{logInText}</div>;\r\n};\r\n\r\nLogInNeeded.defaultProps = {\r\n  logInText: 'Musisz się zalogować!',\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nimport timeout from '../../services/timeout';\r\nimport { handleErrors } from '../../services/errors handling/handleErrors';\r\nimport baseFetch from '../../services/apis/baseFetch';\r\nimport {\r\n  clearLocalStorage,\r\n  setAnyItem as setUserId,\r\n  getAnyItem as getUserId,\r\n} from '../../services/localStorage';\r\nimport { setAnyItem as setAuthToken } from '../../services/localStorage';\r\nimport {\r\n  setAnyItem as setExpiresIn,\r\n  getAnyItem as getExpiresIn,\r\n} from '../../services/localStorage';\r\nimport {\r\n  setAnyItem as setAutoLogoutTimerId,\r\n  getAnyItem as getAutoLogoutTimerId,\r\n} from '../../services/localStorage';\r\nimport { getAnyItem as getAutoLogoutReminderTimerId } from '../../services/localStorage';\r\nimport LoadingSpinner from '../low-level_components/LoadingSpinner/LoadingSpinner';\r\nimport { LogInNeeded as LogOutSuccessful } from '../conditional_components/LogInNeeded/LogInNeeded';\r\nimport { SubmitBtn as LoginBtn } from '../low-level_components/SubmitBtn/SubmitBtn';\r\nimport FormInput from '../low-level_components/FormInput/FormInput';\r\nimport {\r\n  startLoading,\r\n  finishLoading,\r\n  disableElement as disableLoginBtn,\r\n  enableElement as enableLoginBtn,\r\n} from '../../assistive functions';\r\nimport './Login.css';\r\n\r\n/*** Component ***/\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      pass: '',\r\n      afterSubmitInfo: '',\r\n      autoLogoutTimerId: '',\r\n      isLoggedIn: false,\r\n    };\r\n    this.emailRef = React.createRef();\r\n    this.passRef = React.createRef();\r\n    this.validateLoginInfoRef = React.createRef();\r\n    this.loginSpinnerRef = React.createRef();\r\n    this.loginBtnRef = React.createRef();\r\n  }\r\n\r\n  /* Lifecycle Methods */\r\n  componentDidMount() {\r\n    if (getUserId('userId')) {\r\n      this.setState({ isLoggedIn: true });\r\n      timeout(() => {\r\n        this.props.history.goBack();\r\n      }, 1000);\r\n      clearTimeout(getAutoLogoutTimerId('autoLogoutTimerId'));\r\n      clearTimeout(getAutoLogoutReminderTimerId('autoLogoutReminderTimerId'));\r\n      clearLocalStorage();\r\n    } else {\r\n      this.emailRef.current.focus();\r\n    }\r\n  }\r\n\r\n  /* Assistive Methods */\r\n  renderLoginInputs = () => {\r\n    const loginData = [\r\n      {\r\n        title: 'E-mail',\r\n        name: 'email',\r\n        formValue: this.state.email,\r\n        type: 'email',\r\n        reference: this.emailRef,\r\n      },\r\n      {\r\n        title: 'Hasło',\r\n        name: 'pass',\r\n        formValue: this.state.pass,\r\n        type: 'password',\r\n        reference: this.passRef,\r\n      },\r\n    ];\r\n\r\n    return loginData.map(\r\n      ({ title, name, formValue, type, reference }, index) => {\r\n        return (\r\n          <FormInput\r\n            moduleName=\"login\"\r\n            key={index}\r\n            title={title}\r\n            type={type}\r\n            name={name}\r\n            formValue={formValue}\r\n            reference={reference}\r\n            onChange={(e) => this.handleInputChange(name, e.target.value)}\r\n          />\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  endLogin = () => {\r\n    finishLoading(this.loginSpinnerRef.current);\r\n    enableLoginBtn(\r\n      this.loginBtnRef.current,\r\n      ['cursor-pointer'],\r\n      ['cursor-auto']\r\n    );\r\n  };\r\n\r\n  /* Handlers */\r\n  handleAutoLogout = (expiresIn) => {\r\n    const autoLogoutRedirect = () => {\r\n      if (expiresIn) this.props.history.push('/autologout');\r\n    };\r\n    const autoLogoutTimerId = timeout(\r\n      autoLogoutRedirect,\r\n      expiresIn - Date.now()\r\n    );\r\n    setAutoLogoutTimerId('autoLogoutTimerId', autoLogoutTimerId);\r\n  };\r\n\r\n  handleInputChange = (stateKey, value) => {\r\n    this.setState({ [stateKey]: value });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    disableLoginBtn(\r\n      this.loginBtnRef.current,\r\n      ['cursor-auto'],\r\n      ['cursor-pointer']\r\n    );\r\n    startLoading(this.loginSpinnerRef.current);\r\n\r\n    const loginData = {\r\n      email: this.state.email,\r\n      password: this.state.pass,\r\n    };\r\n\r\n    try {\r\n      const resp = await baseFetch({\r\n        path: 'api/login',\r\n        body: JSON.stringify(loginData),\r\n        method: 'POST',\r\n      });\r\n\r\n      handleErrors(resp.status);\r\n      const { token, userId, expiresIn } = await resp.json();\r\n      this.endLogin();\r\n\r\n      setUserId('userId', userId);\r\n      setAuthToken('token', token);\r\n      setExpiresIn('expiresIn', Date.now() + expiresIn);\r\n      this.handleAutoLogout(getExpiresIn('expiresIn'));\r\n\r\n      this.props.history.push('/');\r\n    } catch ({ message }) {\r\n      this.endLogin();\r\n      this.setState({ afterSubmitInfo: message }, () => {\r\n        timeout(() => {\r\n          this.setState({ afterSubmitInfo: '' });\r\n        }, 1000);\r\n      });\r\n    }\r\n  };\r\n\r\n  /* Render */\r\n  render() {\r\n    if (this.state.isLoggedIn) {\r\n      return <LogOutSuccessful logInText=\"Wylogowano prawidłowo.\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"login-outerWrapper\">\r\n        <div className=\"login-wrapper\">\r\n          <h1 className=\"login-title\">{this.props.title}</h1>\r\n          <form className=\"login-form\" onSubmit={this.handleSubmit}>\r\n            {this.renderLoginInputs()}\r\n            <LoginBtn\r\n              classes=\"loginBtn cursor-pointer\"\r\n              btnText=\"Zaloguj\"\r\n              reference={this.loginBtnRef}\r\n            >\r\n              <LoadingSpinner\r\n                reference={this.loginSpinnerRef}\r\n                classes={{\r\n                  outerWrapper: 'login-spinner-outerWrapper',\r\n                  spinner: 'login-spinner',\r\n                }}\r\n              />\r\n            </LoginBtn>\r\n            <p\r\n              ref={this.validateLoginInfoRef}\r\n              className=\"validate-login-info invalid\"\r\n            >\r\n              {this.state.afterSubmitInfo}\r\n            </p>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.defaultProps = {\r\n  title: 'Zaloguj',\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\n\r\nimport {\r\n  isEqual,\r\n  isLower as compareLenghts,\r\n} from '../../../services/predicates';\r\nimport './MovieInfo.css';\r\n\r\n/*** Variables ***/\r\nconst shortDescrLength = 30;\r\nconst dots = '...';\r\nconst shortDescrWithDotsLength = (dots) => shortDescrLength + dots.length;\r\n\r\n/*** Assistive Functions ***/\r\nconst fullDescrAndTooltipText = (refDescr, refTooltip, descr, fullDescr) => {\r\n  if (isEqual(refDescr.innerText.length, shortDescrWithDotsLength(dots))) {\r\n    refDescr.innerText = fullDescr;\r\n    refTooltip.innerText = 'Zwiń opis';\r\n  } else {\r\n    refDescr.innerText = descr;\r\n    refTooltip.innerText = 'Rozwiń opis';\r\n  }\r\n};\r\n\r\nconst cutMovieDescription = (fullDescr) => {\r\n  if (compareLenghts(shortDescrLength, fullDescr.length)) {\r\n    return `${fullDescr.slice(0, shortDescrLength)}${dots}`;\r\n  } else return fullDescr;\r\n};\r\n\r\n/*** Component ***/\r\nconst MovieInfo = ({\r\n  movie: { description, title },\r\n  classes: { titleClass, descriptionClass, descrSpanClass, tooltipTextClass },\r\n}) => {\r\n  let refDescr = React.createRef();\r\n  let refTooltip = React.createRef();\r\n\r\n  return (\r\n    <>\r\n      <h3 className={`${titleClass} movieInfo-title`}>{title}</h3>\r\n      <p\r\n        className={`${descriptionClass} movieInfo-description movieInfo-tooltip`}\r\n        onClick={() =>\r\n          fullDescrAndTooltipText(\r\n            refDescr.current,\r\n            refTooltip.current,\r\n            cutMovieDescription(description),\r\n            description\r\n          )\r\n        }\r\n      >\r\n        <span>{'Opis: '}</span>\r\n        <span\r\n          className={`${descrSpanClass} movieInfo-descrSpan`}\r\n          ref={refDescr}\r\n        >\r\n          {cutMovieDescription(description)}\r\n        </span>\r\n        <span\r\n          className={`${tooltipTextClass} movieInfo-tooltipText`}\r\n          ref={refTooltip}\r\n        >\r\n          {'Rozwiń opis'}\r\n        </span>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nMovieInfo.defaultProps = {\r\n  classes: {\r\n    titleClass: '',\r\n    descriptionClass: '',\r\n    descrSpanClass: '',\r\n    tooltipTextClass: '',\r\n  },\r\n};\r\n\r\nexport default MovieInfo;\r\n","import { isEqual, isInequal } from '../../../../../../services/predicates';\r\nimport { handleErrors } from '../../../../../../services/errors handling/handleErrors';\r\nimport redirectError from '../../../../../../services/errors handling/redirectError';\r\nimport baseFetch from '../../../../../../services/apis/baseFetch';\r\nimport { getAnyItem as getToken } from '../../../../../../services/localStorage';\r\n\r\n/*** Assistive Functions ***/\r\nexport const dateTitleProp = () => {\r\n  const title = 'Data i godzina';\r\n  return title;\r\n};\r\n\r\nexport const dateFormat = (time) => {\r\n  return new Date(time).toLocaleString(undefined, {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n    hour: 'numeric',\r\n    minute: 'numeric',\r\n  });\r\n};\r\n\r\nexport const getAllSeats = async (room_id, history) => {\r\n  try {\r\n    const resp = await baseFetch({\r\n      path: `api/seat/${room_id}`,\r\n      authToken: getToken('token'),\r\n    });\r\n\r\n    handleErrors(resp.status);\r\n    const seats = await resp.json();\r\n\r\n    let filtered = [];\r\n    let rowNum = 0;\r\n    let occuredRows = [];\r\n\r\n    // Segregates seats in an organized structure\r\n    seats.forEach(({ row, seatNumber }) => {\r\n      if (isInequal(rowNum, row) && !occuredRows.includes(row)) {\r\n        rowNum = row;\r\n        occuredRows.push(row);\r\n        filtered.push({ row, seats: [seatNumber] });\r\n      } else {\r\n        filtered.forEach((elem) => {\r\n          if (isEqual(elem.row, row)) elem.seats.push(seatNumber);\r\n        });\r\n      }\r\n    });\r\n\r\n    // Sorts seats structure in an ascending order\r\n    filtered\r\n      .sort((a, b) => a.row - b.row)\r\n      .map(({ row, seats }) => {\r\n        return { row, seats: seats.sort((a, b) => a - b) };\r\n      });\r\n\r\n    return filtered;\r\n  } catch (err) {\r\n    redirectError(history, err);\r\n  }\r\n};\r\n\r\nexport const setTakenSeats = (data = []) => {\r\n  return data.map(({ seat_id: { row, seatNumber } }) => {\r\n    return { row: row, seats: seatNumber };\r\n  });\r\n};\r\n\r\nexport const restartRowAndSeatUI = () => {\r\n  return {\r\n    choosenRow: null,\r\n    choosenSeat: null,\r\n    freeSeats: [],\r\n    rowsList: [],\r\n  };\r\n};\r\n","import React from 'react';\r\n\r\nimport { isInequal as isSeatDefined } from '../../../services/predicates';\r\nimport { dateFormat } from '../../tickets_components/Reservation/parts/BuyTicket/parts/assistiveFunctions';\r\nimport './ScreeningInfo.css';\r\n\r\n/*** Component ***/\r\nconst ScreeningInfo = ({\r\n  seat,\r\n  screening,\r\n  classes: { timeClass, seatClass, wrapperClass },\r\n}) => {\r\n  if (isSeatDefined(seat, undefined)) {\r\n    return (\r\n      <div className={`${wrapperClass} screeningInfo-wrapper`}>\r\n        <p className={`${timeClass} screeningInfo-time`}>\r\n          <span>{'Godzina: '}</span> {dateFormat(screening.time)}\r\n        </p>\r\n        <p className={`${seatClass} screeningInfo-seat`}>\r\n          <span>{'Sala: '}</span>\r\n          {seat.room_id.name}\r\n          <span>{', Rząd: '}</span>\r\n          {seat.row}\r\n          <span>{', Miejsce: '}</span>\r\n          {seat.seatNumber}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nScreeningInfo.defaultProps = {\r\n  classes: {\r\n    timeClass: '',\r\n    seatClass: '',\r\n    wrapperClass: '',\r\n  },\r\n};\r\n\r\nexport default ScreeningInfo;\r\n","import React from 'react';\r\n\r\nimport { baseUrl } from '../../../../services/apis/baseFetch';\r\nimport { isLower as doesUserHasTickets } from '../../../../services/predicates';\r\nimport MoviePoster from '../../../low-level_components/MoviePoster/MoviePoster';\r\nimport MovieInfo from '../../../low-level_components/MovieInfo/MovieInfo';\r\nimport ScreeningInfo from '../../../low-level_components/ScreeningInfo/ScreeningInfo';\r\n\r\n/*** Assistive Functions ***/\r\nconst renderTickets = (reservations, noTicketsText) => {\r\n  if (doesUserHasTickets(0, reservations.length)) {\r\n    return reservations.map(({ screening_id, seat_id, _id }) => {\r\n      let { imageUrl, title, description } = screening_id.movie_id;\r\n\r\n      return (\r\n        <div className=\"myTickets-innerWrapper\" key={_id}>\r\n          <MoviePoster src={`${baseUrl}${imageUrl}`} alt={title} />\r\n\r\n          <div className=\"myTickets-utils\">\r\n            <MovieInfo movie={{ description, title }} />\r\n            <ScreeningInfo seat={seat_id} screening={screening_id} />\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n  return <div className=\"myTickets-noTickets\">{noTicketsText}</div>;\r\n};\r\n\r\n/*** Component ***/\r\nexport const Movies = ({ reservations, noTicketsText }) => {\r\n  return (\r\n    <div className=\"myTickets-wrapper\">\r\n      {renderTickets(reservations, noTicketsText)}\r\n    </div>\r\n  );\r\n};\r\n\r\nMovies.defaultProps = {\r\n  noTicketsText: 'Brak biletów do wyświetlenia',\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nimport { handleErrors } from '../../../services/errors handling/handleErrors';\r\nimport redirectError from '../../../services/errors handling/redirectError';\r\nimport baseFetch from '../../../services/apis/baseFetch';\r\nimport { getAnyItem as getUserId } from '../../../services/localStorage';\r\nimport { getAnyItem as getToken } from '../../../services/localStorage';\r\nimport { isEqual as areReservationsFetched } from '../../../services/predicates';\r\nimport { isEqual as isUserLoggedIn } from '../../../services/predicates';\r\nimport Loading from '../../conditional_components/Loading/Loading';\r\nimport { LogInNeeded } from '../../conditional_components/LogInNeeded/LogInNeeded';\r\nimport { Movies } from './parts/Movies';\r\nimport './MyTickets.css';\r\n\r\n/*** Assistive Functions ***/\r\nconst renderTickets = ({ user_id, reservations }) => {\r\n  if (isUserLoggedIn(user_id, '') || isUserLoggedIn(user_id, null)) {\r\n    return <LogInNeeded />;\r\n  } else if (areReservationsFetched(reservations, null)) {\r\n    return <Loading />;\r\n  } else {\r\n    return (\r\n      <div className=\"myTickets-outerWrapper\">\r\n        <Movies reservations={reservations} />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n/*** Component ***/\r\nexport class MyTickets extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user_id: getUserId('userId'),\r\n      reservations: null,\r\n    };\r\n  }\r\n\r\n  /* Lifecycle Methods */\r\n  async componentDidMount() {\r\n    if (\r\n      !(\r\n        isUserLoggedIn(this.state.user_id, '') ||\r\n        isUserLoggedIn(this.state.user_id, null)\r\n      )\r\n    ) {\r\n      try {\r\n        const resp = await baseFetch({\r\n          path: `api/reservation/${this.state.user_id}/none`,\r\n          authToken: getToken('token'),\r\n        });\r\n\r\n        handleErrors(resp.status);\r\n\r\n        const reservations = await resp.json();\r\n\r\n        this.setState({ reservations });\r\n      } catch (err) {\r\n        redirectError(this.props.history, err);\r\n      }\r\n    }\r\n  }\r\n\r\n  /* Render */\r\n  render() {\r\n    return renderTickets(this.state, this.props);\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport './PriceList.css';\r\n\r\n/*** Assistive Functions ***/\r\nconst renderRows = (table) => {\r\n  const rows = [];\r\n\r\n  for (let el in table) {\r\n    rows.push(\r\n      table[el].map((item, index) => {\r\n        return <td key={index}>{item}</td>;\r\n      })\r\n    );\r\n  }\r\n\r\n  return rows;\r\n};\r\n\r\nconst renderTable = (rows, rowClass) => {\r\n  let table = rows.map((row, index) => {\r\n    return (\r\n      <tr className={`priceList-row ${rowClass}`} key={index}>\r\n        {row}\r\n      </tr>\r\n    );\r\n  });\r\n  return table;\r\n};\r\n\r\n/*** Component ***/\r\nconst PriceList = ({\r\n  title,\r\n  prices,\r\n  classes: { titleClass, tableClass, rowClass },\r\n}) => {\r\n  return (\r\n    <>\r\n      <div className={`priceList-title ${titleClass}`}>{title}</div>\r\n      <table className={`priceList-table ${tableClass}`}>\r\n        <tbody>{renderTable(renderRows(prices), rowClass)}</tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nPriceList.defaultProps = {\r\n  classes: {\r\n    titleClass: '',\r\n    tableClass: '',\r\n    rowClass: '',\r\n  },\r\n};\r\n\r\nexport default PriceList;\r\n","const prices = {\r\n  twoD: {\r\n    openDays: ['', 'Poniedziałek', 'Wtorek-Piątek', 'Weekend'],\r\n    normalTicket: ['Bilet normalny', '15 zł', '21 zł', '25zł'],\r\n    kidPupilTicket: ['Dziecięcy i Studencki', '10zł', '16zł', '16zł'],\r\n    senior: ['Emeryci', '12zł', '17zł', '18zł']\r\n  },\r\n  threeD: {\r\n    openDays: ['', 'Poniedziałek', 'Wtorek-Piątek', 'Weekend'],\r\n    normalTicket: ['Bilet normalny', '25 zł', '28 zł', '30zł'],\r\n    kidPupilTicket: ['Dziecięcy i Studencki', '18zł', '20zł', '22zł'],\r\n    senior: ['Emeryci', '20zł', '22zł', '26zł']\r\n  }\r\n};\r\n\r\nexport default prices;\r\n","import React from 'react';\r\n\r\nimport PriceList from './parts/PriceList/PriceList';\r\nimport pricesData from './parts/pricesData';\r\nimport './Prices.css';\r\n\r\n/*** Component ***/\r\nconst Prices = (props) => {\r\n  return (\r\n    <div className=\"prices-wrapper\">\r\n      <div className=\"prices-content\">\r\n        <h1 className=\"prices-title\">Ceny biletów</h1>\r\n\r\n        <PriceList prices={pricesData.twoD} title=\"FILMY 2D\" />\r\n\r\n        <PriceList prices={pricesData.threeD} title=\"FILMY 3D\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Prices;\r\n","import React from 'react';\r\n\r\nimport { baseUrl } from '../../../../../services/apis/baseFetch';\r\nimport MoviePoster from '../../../../low-level_components/MoviePoster/MoviePoster';\r\nimport MovieInfo from '../../../../low-level_components/MovieInfo/MovieInfo';\r\nimport './Movie.css';\r\n\r\n/*** Assistive Functions ***/\r\nconst renderMovie = ({ _id, imageUrl, title, description }) => {\r\n  return (\r\n    <div className=\"movie-wrapper\" key={_id}>\r\n      <MoviePoster src={`${baseUrl}${imageUrl}`} alt={title} />\r\n\r\n      <div className=\"movie-utils\">\r\n        <MovieInfo movie={{ description, title }} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n/*** Component ***/\r\nconst Movie = ({ movie }) => {\r\n  return renderMovie(movie);\r\n};\r\n\r\nexport default Movie;\r\n","import React from 'react';\r\n\r\nimport { isEqual } from '../../../services/predicates';\r\nimport './Select.css';\r\n\r\n/*** Assistive Functions ***/\r\nconst doesDataExist = (data) => {\r\n  return !data.every((elem) => isEqual(elem, undefined));\r\n};\r\n\r\nconst renderOptionTags = (\r\n  optionTitle,\r\n  data,\r\n  optionContent,\r\n  optionValue,\r\n  fallbackValue\r\n) => {\r\n  if (doesDataExist(data)) {\r\n    return (\r\n      <>\r\n        <option>{optionTitle}</option>\r\n        {data.map((item, index) => {\r\n          return (\r\n            <option key={index} value={optionValue(item)}>\r\n              {optionContent(item)}\r\n            </option>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n  return <option>{fallbackValue}</option>;\r\n};\r\n\r\n/*** Component ***/\r\nconst Select = ({\r\n  selectName,\r\n  classes,\r\n  labelText,\r\n  spinner,\r\n  optionTitle,\r\n  data,\r\n  optionContent,\r\n  optionValue,\r\n  fallbackValue,\r\n  handler,\r\n  reference,\r\n}) => {\r\n  return (\r\n    <label>\r\n      <div style={{ display: 'inline' }}>{labelText}</div>\r\n      {spinner}\r\n      <select\r\n        name={selectName}\r\n        className={classes}\r\n        ref={reference}\r\n        onChange={handler}\r\n      >\r\n        {renderOptionTags(\r\n          optionTitle,\r\n          data,\r\n          optionContent,\r\n          optionValue,\r\n          fallbackValue\r\n        )}\r\n      </select>\r\n    </label>\r\n  );\r\n};\r\n\r\nSelect.defaultProps = {\r\n  classes: '',\r\n  fallbackValue: 'Brak dostępnych terminów',\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from 'react';\r\n\r\nimport timeout from '../../../../../services/timeout';\r\nimport redirectError from '../../../../../services/errors handling/redirectError';\r\nimport {\r\n  handleErrors,\r\n  errorTexts,\r\n} from '../../../../../services/errors handling/handleErrors';\r\nimport { getAnyItem as getToken } from '../../../../../services/localStorage';\r\nimport baseFetch from '../../../../../services/apis/baseFetch';\r\nimport { isEqual, isInequal } from '../../../../../services/predicates';\r\nimport LoadingSpinner from '../../../../low-level_components/LoadingSpinner/LoadingSpinner';\r\nimport {\r\n  startLoading,\r\n  finishLoading,\r\n  enableElement as enableBtn,\r\n  disableElement as disableBtn,\r\n} from '../../../../../assistive functions';\r\nimport Select from '../../../../low-level_components/Select/Select';\r\nimport { SubmitBtn as ReservationBtn } from '../../../../low-level_components/SubmitBtn/SubmitBtn';\r\nimport {\r\n  getAllSeats,\r\n  dateTitleProp,\r\n  dateFormat,\r\n  restartRowAndSeatUI,\r\n  setTakenSeats,\r\n} from './parts/assistiveFunctions';\r\n\r\n/*** Component ***/\r\nclass BuyTicket extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      movie_id: null,\r\n      user_id: this.props.user_id,\r\n      screenings: [],\r\n      screening_id: null,\r\n      room: '',\r\n      room_id: null,\r\n      rowsList: [],\r\n      rowsWithSeats: [],\r\n      immutableRows: [],\r\n      reservationDone: false,\r\n      takenSeats: [],\r\n      freeSeats: [],\r\n      choosenRow: null,\r\n      choosenSeat: null,\r\n      seat_id: '',\r\n      afterSubmitInfo: '',\r\n      reservation: {},\r\n    };\r\n    this.selectDateRef = React.createRef();\r\n    this.selectRowRef = React.createRef();\r\n    this.selectSeatRef = React.createRef();\r\n    this.afterSubmitInfoRef = React.createRef();\r\n    this.loadingSpinnerRef = React.createRef();\r\n    this.reservationSpinnerRef = React.createRef();\r\n    this.reservationBtnRef = React.createRef();\r\n  }\r\n\r\n  /* Lifecycle Methods*/\r\n  async componentDidMount() {\r\n    startLoading(this.loadingSpinnerRef.current);\r\n    let screenings;\r\n    try {\r\n      const resp = await baseFetch({\r\n        path: `api/screening/${this.props.movie_id}/${this.props.screening_id}`,\r\n        authToken: getToken('token'),\r\n      });\r\n\r\n      handleErrors(resp.status);\r\n      screenings = await resp.json();\r\n    } catch (err) {\r\n      redirectError(this.props.history, err);\r\n    }\r\n\r\n    this.setAnyState(\r\n      {\r\n        screenings,\r\n      },\r\n      () => {\r\n        finishLoading(this.loadingSpinnerRef.current);\r\n      }\r\n    );\r\n  }\r\n\r\n  /* Assistive Methods */\r\n  setAnyState = (receivedState, cb) => {\r\n    const newState = Object.assign(\r\n      {},\r\n      {\r\n        ...this.state,\r\n      },\r\n      receivedState\r\n    );\r\n    this.setState(newState, cb);\r\n  };\r\n\r\n  checkAvailableSeats = async (cb) => {\r\n    let existingReservations;\r\n    try {\r\n      const resp = await baseFetch({\r\n        path: `api/reservation/none/${this.state.screening_id}`,\r\n        authToken: getToken('token'),\r\n      });\r\n\r\n      handleErrors(resp.status);\r\n\r\n      existingReservations = await resp.json();\r\n    } catch (err) {\r\n      redirectError(this.props.history, err);\r\n    }\r\n\r\n    this.setAnyState(\r\n      { takenSeats: setTakenSeats(existingReservations) },\r\n      async () => {\r\n        await this.calculateFreeSeats();\r\n        cb();\r\n      }\r\n    );\r\n  };\r\n\r\n  getScreeningData = async () => {\r\n    if (isInequal(this.state.screening_id, null)) {\r\n      startLoading(this.loadingSpinnerRef.current);\r\n\r\n      let screening;\r\n      try {\r\n        const resp = await baseFetch({\r\n          path: `api/screening/${this.state.movie_id}/${this.state.screening_id}`,\r\n          authToken: getToken('token'),\r\n        });\r\n\r\n        handleErrors(resp.status);\r\n\r\n        screening = await resp.json();\r\n      } catch (err) {\r\n        redirectError(this.props.history, err);\r\n      }\r\n\r\n      const setNewState = () => {\r\n        this.setAnyState(\r\n          {\r\n            ...restartRowAndSeatUI(),\r\n          },\r\n          () => {\r\n            this.setAnyState(\r\n              {\r\n                room: screening.room_id.name,\r\n                rowsList: this.state.rowsWithSeats.map(({ row }) => row),\r\n              },\r\n              () => {\r\n                finishLoading(this.loadingSpinnerRef.current);\r\n              }\r\n            );\r\n          }\r\n        );\r\n      };\r\n\r\n      const room_id = screening.room_id._id;\r\n      this.setAnyState(\r\n        {\r\n          room_id,\r\n        },\r\n        async () => {\r\n          await this.checkAvailableSeats(setNewState);\r\n        }\r\n      );\r\n    } else {\r\n      this.setAnyState({\r\n        ...restartRowAndSeatUI(),\r\n        room: '',\r\n        room_id: '',\r\n      });\r\n    }\r\n  };\r\n\r\n  afterReservationUserInfo = (element, classToDel, classToAdd, time) => {\r\n    startLoading(element, classToDel, classToAdd);\r\n\r\n    timeout(() => {\r\n      this.setAnyState({ afterSubmitInfo: '' }, () => {\r\n        finishLoading(element);\r\n        this.enableReservation();\r\n      });\r\n    }, time);\r\n  };\r\n\r\n  checkReservationAttempt = (\r\n    message,\r\n    element,\r\n    classToDel,\r\n    classToAdd,\r\n    time\r\n  ) => {\r\n    this.setAnyState(\r\n      {\r\n        afterSubmitInfo: message,\r\n      },\r\n      () => {\r\n        this.afterReservationUserInfo(element, classToDel, classToAdd, time);\r\n      }\r\n    );\r\n  };\r\n\r\n  calculateFreeSeats = async () => {\r\n    let rowsWithSeats = await getAllSeats(\r\n      this.state.room_id,\r\n      this.props.history\r\n    );\r\n\r\n    // Computes which seats are free\r\n    rowsWithSeats.forEach(({ row, seats }, index) => {\r\n      this.state.takenSeats.forEach(({ row: takenRow, seats: takenSeat }) => {\r\n        if (isEqual(takenRow, row)) {\r\n          seats.forEach((seat) => {\r\n            if (isEqual(seat, takenSeat)) {\r\n              delete rowsWithSeats[index].seats[\r\n                rowsWithSeats[index].seats.indexOf(seat)\r\n              ];\r\n            }\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    this.setAnyState({ rowsWithSeats });\r\n  };\r\n\r\n  checkConcurrentReservation = async () => {\r\n    let existingReservations;\r\n\r\n    try {\r\n      const resp = await baseFetch({\r\n        path: `api/reservation/none/${this.state.screening_id}`,\r\n        authToken: getToken('token'),\r\n      });\r\n\r\n      handleErrors(resp.status);\r\n      existingReservations = await resp.json();\r\n    } catch (err) {\r\n      redirectError(this.props.history, err);\r\n    }\r\n\r\n    const takenSeats = setTakenSeats(existingReservations);\r\n    const seat = {\r\n      row: this.state.choosenRow,\r\n      seats: this.state.choosenSeat,\r\n    };\r\n\r\n    const wasConcurrentReservationMade = takenSeats.some((rowObj) => {\r\n      return isEqual(rowObj.row, seat.row) && isEqual(rowObj.seats, seat.seats);\r\n    });\r\n\r\n    return wasConcurrentReservationMade;\r\n  };\r\n\r\n  reservationServerError = (err) => {\r\n    this.checkReservationAttempt(\r\n      err.message,\r\n      this.afterSubmitInfoRef.current,\r\n      ['validSubmit'],\r\n      ['invalidSubmit'],\r\n      3000\r\n    );\r\n  };\r\n\r\n  makeNewReservation = async () => {\r\n    try {\r\n      // Checks if meanwhile another user haven't made the same reservation\r\n      if (await this.checkConcurrentReservation())\r\n        throw new Error(errorTexts.concurrentReserv);\r\n\r\n      const reservationParams = {\r\n        user_id: this.state.user_id,\r\n        seat_id: this.state.seat_id,\r\n        screening_id: this.state.screening_id,\r\n      };\r\n\r\n      const { status: reservStatus } = await baseFetch({\r\n        path: 'api/reservation/',\r\n        authToken: getToken('token'),\r\n        method: 'POST',\r\n        body: JSON.stringify(reservationParams),\r\n      });\r\n\r\n      handleErrors(reservStatus);\r\n\r\n      this.checkReservationAttempt(\r\n        'Zarezerwowano',\r\n        this.afterSubmitInfoRef.current,\r\n        ['invalidSubmit'],\r\n        ['validSubmit'],\r\n        3000\r\n      );\r\n\r\n      // Recalculates seats, after successful reservation\r\n      const setStateAfterNewReserv = () => {\r\n        const freeSeats = this.state.rowsWithSeats[this.state.choosenRow - 1]\r\n          .seats;\r\n        this.setAnyState(\r\n          {\r\n            freeSeats,\r\n            choosenSeat: null,\r\n          },\r\n          () => {\r\n            this.enableReservation();\r\n          }\r\n        );\r\n      };\r\n\r\n      this.checkAvailableSeats(setStateAfterNewReserv);\r\n    } catch (err) {\r\n      this.reservationServerError(err);\r\n    }\r\n  };\r\n\r\n  enableReservation = () => {\r\n    finishLoading(this.reservationSpinnerRef.current);\r\n    enableBtn(\r\n      this.reservationBtnRef.current,\r\n      ['cursor-pointer'],\r\n      ['cursor-auto']\r\n    );\r\n  };\r\n\r\n  /* Handlers */\r\n  handleDateOptionChange = async (e) => {\r\n    e.persist();\r\n\r\n    const screening_id = isEqual(\r\n      this.selectDateRef.current.value,\r\n      dateTitleProp()\r\n    )\r\n      ? null\r\n      : this.selectDateRef.current.value;\r\n\r\n    this.setAnyState({ screening_id }, async () => {\r\n      this.getScreeningData();\r\n    });\r\n  };\r\n\r\n  handleRowOptionChange = () => {\r\n    let choosenRow = Number(this.selectRowRef.current.value);\r\n    let freeSeats;\r\n\r\n    // Validation of a choosen row\r\n    if (isInequal(choosenRow.toString(), 'NaN')) {\r\n      freeSeats = this.state.rowsWithSeats[choosenRow - 1].seats;\r\n    } else {\r\n      choosenRow = null;\r\n      freeSeats = [];\r\n    }\r\n\r\n    this.setAnyState({ freeSeats: [] }, () => {\r\n      this.setAnyState({\r\n        freeSeats,\r\n        choosenRow,\r\n        choosenSeat: null,\r\n      });\r\n    });\r\n  };\r\n\r\n  handleSeatOptionChange = (e) => {\r\n    const choosenSeat = Number(this.selectSeatRef.current.value);\r\n    this.setAnyState({ choosenSeat });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Checks if user checked all required fields\r\n    if (\r\n      isEqual(this.state.choosenRow, null) ||\r\n      isEqual(this.state.choosenSeat, null) ||\r\n      isEqual(this.state.screening_id, null)\r\n    ) {\r\n      this.checkReservationAttempt(\r\n        'Musisz dokonać wyboru',\r\n        this.afterSubmitInfoRef.current,\r\n        ['validSubmit'],\r\n        ['invalidSubmit'],\r\n        1500\r\n      );\r\n    } else {\r\n      disableBtn(\r\n        this.reservationBtnRef.current,\r\n        ['cursor-auto'],\r\n        ['cursor-pointer']\r\n      );\r\n      startLoading(this.reservationSpinnerRef.current);\r\n\r\n      try {\r\n        // Fetches seat which is to be booked\r\n        const resp = await baseFetch({\r\n          path: `api/seat/${this.state.room_id}/${this.state.choosenRow}/${this.state.choosenSeat}`,\r\n          authToken: getToken('token'),\r\n        });\r\n\r\n        handleErrors(resp.status);\r\n        const { _id: seat_id } = await resp.json();\r\n\r\n        // Makes new reservation\r\n        this.setAnyState({ seat_id }, this.makeNewReservation);\r\n      } catch (err) {\r\n        this.reservationServerError(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  /* Render */\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div className=\"buyTicket-wrapper\">\r\n          <Select\r\n            classes=\"data-select\"\r\n            labelText=\"Wybierz datę seansu:\"\r\n            optionTitle={dateTitleProp()}\r\n            spinner={<LoadingSpinner reference={this.loadingSpinnerRef} />}\r\n            data={this.state.screenings}\r\n            optionContent={(screening) => dateFormat(screening.time)}\r\n            optionValue={(screening) => screening._id}\r\n            handler={this.handleDateOptionChange}\r\n            reference={this.selectDateRef}\r\n          />\r\n\r\n          <label>Sala: {this.state.room}</label>\r\n\r\n          <Select\r\n            selectName=\"row\"\r\n            classes=\"row-select\"\r\n            labelText=\"Rząd:\"\r\n            optionTitle=\"Wybierz rząd\"\r\n            data={this.state.rowsList}\r\n            optionContent={(rowNum) => rowNum}\r\n            optionValue={(rowNum) => rowNum}\r\n            handler={this.handleRowOptionChange}\r\n            reference={this.selectRowRef}\r\n          />\r\n\r\n          <Select\r\n            selectName=\"seat\"\r\n            classes=\"seat-select\"\r\n            labelText=\"Miejsce:\"\r\n            optionTitle=\"Wybierz miejsce\"\r\n            data={this.state.freeSeats}\r\n            optionContent={(free) => free}\r\n            optionValue={(free) => free}\r\n            handler={this.handleSeatOptionChange}\r\n            reference={this.selectSeatRef}\r\n          />\r\n\r\n          <ReservationBtn\r\n            btnText=\"Zarezerwuj\"\r\n            classes=\"reservationBtn cursor-pointer\"\r\n            reference={this.reservationBtnRef}\r\n          >\r\n            <LoadingSpinner\r\n              reference={this.reservationSpinnerRef}\r\n              classes={{\r\n                outerWrapper: 'reservSpinner-outerWrapper',\r\n                spinner: 'reservSpinner',\r\n              }}\r\n            />\r\n          </ReservationBtn>\r\n\r\n          <p className=\"afterSubmit invisible\" ref={this.afterSubmitInfoRef}>\r\n            {this.state.afterSubmitInfo}\r\n          </p>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BuyTicket;\r\n","import React, { Component } from 'react';\r\n\r\nimport { scrollTop } from '../../../assistive functions';\r\nimport redirectError from '../../../services/errors handling/redirectError';\r\nimport { handleErrors } from '../../../services/errors handling/handleErrors';\r\nimport baseFetch from '../../../services/apis/baseFetch';\r\nimport {\r\n  isEqual as isUserLoggedIn,\r\n  isEqual as isMovieFetched,\r\n} from '../../../services/predicates';\r\nimport { getAnyItem as getId } from '../../../services/localStorage';\r\nimport { getAnyItem as getToken } from '../../../services/localStorage';\r\nimport { LogInNeeded } from '../../conditional_components/LogInNeeded/LogInNeeded';\r\nimport Loading from '../../conditional_components/Loading/Loading';\r\nimport Movie from './parts/Movie/Movie';\r\nimport BuyTicket from './parts/BuyTicket/BuyTicket';\r\nimport '../../tickets_components/MyTickets/MyTickets.css';\r\nimport './Reservation.css';\r\n\r\n/*** Component ***/\r\nclass Reservation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user_id: getId('userId'),\r\n      movie_id: '',\r\n      movie: null,\r\n    };\r\n    this.wrapperRef = React.createRef();\r\n  }\r\n\r\n  /* Lifycycle Methods */\r\n  async componentDidMount() {\r\n    const movie_id = getId('movieId');\r\n\r\n    if (\r\n      !(\r\n        isUserLoggedIn(this.state.user_id, '') ||\r\n        isUserLoggedIn(this.state.user_id, null)\r\n      )\r\n    ) {\r\n      try {\r\n        const resp = await baseFetch({\r\n          path: `api/movie/${movie_id}`,\r\n          authToken: getToken('token'),\r\n        });\r\n\r\n        handleErrors(resp.status);\r\n\r\n        const movie = await resp.json();\r\n        this.setState({\r\n          movie_id,\r\n          movie,\r\n        });\r\n      } catch (err) {\r\n        redirectError(this.props.history, err);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    scrollTop();\r\n  }\r\n\r\n  /* Assistive Methods */\r\n  renderReservation = () => {\r\n    if (\r\n      isUserLoggedIn(this.state.user_id, '') ||\r\n      isUserLoggedIn(this.state.user_id, null)\r\n    ) {\r\n      return <LogInNeeded />;\r\n    } else if (isMovieFetched(this.state.movie, null)) {\r\n      return <Loading />;\r\n    } else {\r\n      return (\r\n        <div className=\"reservation-outerWrapper\">\r\n          <div className=\"reservation-wrapper\" ref={this.wrapperRef}>\r\n            <div className=\"reservation-itemWrapper\">\r\n              <Movie movie={this.state.movie} />\r\n            </div>\r\n\r\n            <div className=\"reservation-itemWrapper\">\r\n              <BuyTicket\r\n                history={this.props.history}\r\n                movie_id={this.state.movie_id}\r\n                user_id={this.state.user_id}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  /* Render */\r\n  render() {\r\n    return this.renderReservation();\r\n  }\r\n}\r\n\r\nexport default Reservation;\r\n","import React from 'react';\r\n\r\nimport { isEqual } from '../../services/predicates';\r\nimport './ServerError.css';\r\nimport { scrollTop } from '../../assistive functions';\r\n\r\n/*** Component ***/\r\nclass ServerError extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errMsg: '',\r\n      errCode: 0,\r\n    };\r\n  }\r\n\r\n  /* Lifecycle Methods */\r\n  componentDidMount() {\r\n    scrollTop();\r\n    if (this.props.history.location.state) {\r\n      const { message, statusCode } = this.props.history.location.state.err;\r\n\r\n      this.setState({\r\n        errMsg: message,\r\n        errCode: isEqual(statusCode, undefined) ? 500 : statusCode,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        errMsg: 'Wystąpił błąd. Spróbuj ponownie później.',\r\n        errCode: 500,\r\n      });\r\n    }\r\n  }\r\n\r\n  /* Render */\r\n  render() {\r\n    return (\r\n      <div className=\"serverError-outerWrapper\">\r\n        <div className=\"serverError-wrapper\">\r\n          <h1>{`Error ${this.state.errCode}`}</h1>\r\n          <h2>{`${this.state.errMsg}`}</h2>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ServerError;\r\n","import React from 'react';\r\n\r\nimport { scrollTop } from '../../assistive functions';\r\nimport { clearLocalStorage, getAnyItem } from '../../services/localStorage';\r\nimport './AutoLogout.css';\r\n\r\n/*** Component ***/\r\nclass AutoLogout extends React.Component {\r\n  /* Lifecycle Methods */\r\n  componentDidMount() {\r\n    scrollTop();\r\n    clearInterval(getAnyItem('intervalId'));\r\n    clearLocalStorage();\r\n  }\r\n\r\n  /* Render */\r\n  render() {\r\n    return (\r\n      <div className=\"autologout-wrapper\">\r\n        <h1 className=\"autologout-info\">{this.props.infoText}</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAutoLogout.defaultProps = {\r\n  infoText: 'Zostałeś automatycznie wylogowany.',\r\n};\r\n\r\nexport default AutoLogout;\r\n","import HomePage from '../../HomePage/HomePage';\r\nimport ContactUs from '../../ContactUs/ContactUs';\r\nimport Register from '../../Register/Register';\r\nimport Login from '../../Login/Login';\r\nimport { MyTickets } from '../../tickets_components/MyTickets/MyTickets';\r\nimport Prices from '../../Prices/Prices';\r\nimport Reservation from '../../tickets_components/Reservation/Reservation';\r\nimport ServerError from '../../ServerError/ServerError';\r\nimport AutoLogout from '../../AutoLogout/AutoLogout';\r\n\r\nexport const appName = '';\r\n\r\nconst routingData = [\r\n  { path: `/`, component: HomePage },\r\n  { path: `/contact`, component: ContactUs },\r\n  { path: `/register`, component: Register },\r\n  { path: `/login`, component: Login },\r\n  { path: `/mytickets`, component: MyTickets },\r\n  { path: `/prices`, component: Prices },\r\n  { path: `/reservation`, component: Reservation },\r\n  { path: `/servererror`, component: ServerError },\r\n  { path: `/autologout`, component: AutoLogout },\r\n];\r\n\r\nconst routingList = routingData.map(({ path, component }) => {\r\n  return { path: `${appName}${path}`, exact: true, component };\r\n});\r\n\r\nexport default routingList;\r\n","import { appName } from '../../App/routing/routingList';\r\n\r\nconst linksList = [\r\n  { to: `${appName}/`, content: 'Oferta', name: 'Homepage' },\r\n  { to: `${appName}/prices`, content: 'Cennik', name: 'PriceList' },\r\n  { to: `${appName}/mytickets`, content: 'Moje bilety', name: 'MyTickets' },\r\n  { to: `${appName}/register`, content: 'Rejestracja', name: 'Register' },\r\n  {\r\n    to: `${appName}/login`,\r\n    content: 'Zaloguj',\r\n    name: 'Login',\r\n  },\r\n];\r\n\r\nexport default linksList;\r\n","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport timeout from '../../services/timeout';\r\nimport { getAnyItem as getUserId } from '../../services/localStorage';\r\nimport {\r\n  isEqual,\r\n  isLowerEqual as isHigherEqual,\r\n} from '../../services/predicates';\r\nimport {\r\n  addClasses,\r\n  removeClasses,\r\n  modifyClasses,\r\n} from '../../assistive functions';\r\nimport linksList from './parts/linksList';\r\nimport './NavBar.css';\r\n\r\nLink.defaultProps = {\r\n  className: 'navBar-item',\r\n};\r\n\r\n/*** Component ***/\r\nclass NavBar extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loginBtn: '',\r\n      windowWidth: window.innerWidth,\r\n      currentPathName: this.props.location.pathname,\r\n      expanded: false,\r\n      dropdown: isHigherEqual(660, window.innerWidth) ? true : false,\r\n    };\r\n    this.inputRef = React.createRef();\r\n    this.iconWrapperRef = React.createRef();\r\n    this.wrapperRef = React.createRef();\r\n    this.outerWrapperRef = React.createRef();\r\n  }\r\n\r\n  /* Lifecycle Methods */\r\n  componentDidMount() {\r\n    this.setState({ loginBtn: this.setLoginBtnText() });\r\n    if (this.state.dropdown) {\r\n      modifyClasses(\r\n        this.wrapperRef.current,\r\n        ['horizontalNav'],\r\n        ['dropdownNav']\r\n      );\r\n    } else {\r\n      modifyClasses(\r\n        this.wrapperRef.current,\r\n        ['dropdownNav'],\r\n        ['horizontalNav']\r\n      );\r\n    }\r\n\r\n    window.addEventListener('resize', this.handleWindowResize);\r\n    this.outerWrapperRef.current.addEventListener(\r\n      'blur',\r\n      this.hideNavLinksWrapperFunc\r\n    );\r\n\r\n    this.setActiveNavTab();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.setState(\r\n      {\r\n        loginBtn: this.setLoginBtnText(),\r\n        currentPathName: this.props.location.pathname,\r\n      },\r\n      () => {\r\n        this.setActiveNavTab();\r\n      }\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.handleWindowResize);\r\n    this.outerWrapperRef.current.removeEventListener(\r\n      'blur',\r\n      this.hideNavLinksWrapperFunc\r\n    );\r\n  }\r\n\r\n  /* Assistive Methods */\r\n  setLoginBtnText = () => {\r\n    return getUserId('userId') ? 'Wyloguj' : 'Zaloguj';\r\n  };\r\n\r\n  handleWindowResize = () => {\r\n    if (isHigherEqual(window.innerWidth, 660)) {\r\n      this.setState({ dropdown: false }, () => {\r\n        modifyClasses(\r\n          this.wrapperRef.current,\r\n          ['dropdownNav', 'invisible'],\r\n          ['horizontalNav']\r\n        );\r\n      });\r\n    } else {\r\n      this.setState({ dropdown: true, expanded: false }, () => {\r\n        modifyClasses(\r\n          this.wrapperRef.current,\r\n          ['horizontalNav'],\r\n          ['dropdownNav']\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  setActiveNavTab = () => {\r\n    const navChildren = Array.from(this.wrapperRef.current.children);\r\n    const activeChild = navChildren.find((aTag) => {\r\n      return isEqual(aTag.pathname, this.state.currentPathName);\r\n    });\r\n\r\n    navChildren.forEach((aTag) => removeClasses(aTag, 'navBar-activeItem'));\r\n    if (activeChild) addClasses(activeChild, 'navBar-activeItem');\r\n  };\r\n\r\n  handleIconClick = () => {\r\n    if (this.state.expanded) {\r\n      modifyClasses(this.wrapperRef.current, ['visible'], ['invisible']);\r\n      this.setState({ expanded: false });\r\n    } else {\r\n      addClasses(this.wrapperRef.current, ['navBar-wrapper-animation']);\r\n      addClasses(this.iconWrapperRef.current, ['navBar-menuIcon-animation']);\r\n      timeout(() => {\r\n        removeClasses(this.wrapperRef.current, ['navBar-wrapper-animation']);\r\n        removeClasses(this.iconWrapperRef.current, [\r\n          'navBar-menuIcon-animation',\r\n        ]);\r\n      }, 2000);\r\n      modifyClasses(this.wrapperRef.current, ['invisible'], ['visible']);\r\n      this.setState({ expanded: true });\r\n    }\r\n  };\r\n\r\n  hideNavLinks = (isDropdown) => {\r\n    if (isDropdown) {\r\n      timeout(() => {\r\n        this.setState({ expanded: false }, () => {\r\n          modifyClasses(this.wrapperRef.current, ['visible'], ['invisible']);\r\n        });\r\n      }, 250);\r\n    }\r\n  };\r\n\r\n  hideNavLinksWrapperFunc = () => this.hideNavLinks(this.state.dropdown);\r\n\r\n  renderLinks = () => {\r\n    return linksList.map(({ to, content, name }, index) => {\r\n      if (isEqual(name, 'Login')) content = this.state.loginBtn;\r\n      return (\r\n        <Link key={index} to={to}>\r\n          {content}\r\n        </Link>\r\n      );\r\n    });\r\n  };\r\n\r\n  renderDropdownIcon = (isExpanded) => {\r\n    if (isExpanded) {\r\n      return <FontAwesomeIcon icon={faTimes} onClick={this.handleIconClick} />;\r\n    } else {\r\n      return <FontAwesomeIcon icon={faBars} onClick={this.handleIconClick} />;\r\n    }\r\n  };\r\n\r\n  renderDropdownNav = (isExpanded) => {\r\n    return this.renderHorizontalNav(() => this.renderDropdownIcon(isExpanded));\r\n  };\r\n\r\n  renderHorizontalNav = (renderAdditionalChildren = () => {}) => {\r\n    return (\r\n      <div\r\n        className=\"navBar-outerWrapper\"\r\n        ref={this.outerWrapperRef}\r\n        tabIndex=\"0\"\r\n      >\r\n        <div className=\"iconWrapperRef\" ref={this.iconWrapperRef}>\r\n          {renderAdditionalChildren()}\r\n        </div>\r\n        <div className=\"navBar-wrapper\" ref={this.wrapperRef}>\r\n          {this.renderLinks()}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /* Render */\r\n  render() {\r\n    if (this.state.dropdown) {\r\n      return this.renderDropdownNav(this.state.expanded);\r\n    } else {\r\n      return this.renderHorizontalNav();\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(NavBar);\r\n","import React from 'react';\r\n\r\nimport './Attribution.css';\r\n\r\n/*** Component ***/\r\nconst Attribution = () => {\r\n  return (\r\n    <div className=\"item attribution\">\r\n      <a className=\"item\" href=\"http://loading.io\" target=\"blank\">\r\n        the spinner \"Ellipsis\" is provided by loading.io\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Attribution;\r\n","import React from 'react';\r\n\r\n/*** Component ***/\r\nconst CinemasList = ({ className, cinemasList }) => {\r\n  return cinemasList.map(({ content }, index) => {\r\n    return (\r\n      <div className={className} key={index}>\r\n        {content}\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\nCinemasList.defaultProps = {\r\n  className: 'item',\r\n};\r\n\r\nexport default CinemasList;\r\n","export const cinemasList = [\r\n  { content: 'Katowice' },\r\n  { content: 'Kraków' },\r\n  { content: 'Łódź' },\r\n  { content: 'Poznań' },\r\n  { content: 'Sopot' },\r\n  { content: 'Warszawa' },\r\n  { content: 'Wrocław' },\r\n  { content: 'Zgorzelec' },\r\n];\r\n","import React from 'react';\r\n\r\nimport CinemasList from '../CinemasList/CinemasList';\r\nimport { cinemasList } from '../CinemasList/data';\r\n\r\n/*** Component ***/\r\nconst OurCinemas = () => {\r\n  return (\r\n    <div className=\"item\">\r\n      <h2>NASZE KINA</h2>\r\n      <div className=\"ui list\">\r\n        <CinemasList cinemasList={cinemasList} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OurCinemas;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { appName } from '../../../App/routing/routingList';\r\n\r\n/*** Component ***/\r\nconst ContactsLink = () => {\r\n  return (\r\n    <div className=\"item\">\r\n      <h2>KONTAKT</h2>\r\n      <div className=\"ui list\">\r\n        <Link to={`${appName}/contact`} className=\"item\">\r\n          Kontakt\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactsLink;\r\n","import React from 'react';\r\n\r\n/*** Component ***/\r\nconst Applications = ({ dataList }) => {\r\n  const picsList = () => {\r\n    return dataList.map(({ className, src, alt }, index) => {\r\n      return (\r\n        <div key={index} className=\"item\">\r\n          <img className={className} src={src} alt={alt} />\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"item\">\r\n      <h2>APLIKACJA MINIKINO</h2>\r\n      <div className=\"ui list\">{picsList()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Applications;\r\n","export const picsData = [\r\n  { className: 'footer-app-and', src: 'img/app-and.jpg', alt: 'Android' },\r\n  { className: 'footer-app-ios', src: 'img/app-mob.jpg', alt: 'IOS' },\r\n];\r\n","import React from 'react';\r\n\r\nimport Attribution from './parts/Attribution/Attribution';\r\nimport OurCinemas from './parts/OurCinemas/OurCinemas';\r\nimport ContactLink from './parts/ContactLink/ContactLink';\r\nimport Applications from './parts/Applications/Applications';\r\nimport { picsData } from './parts/Applications/data';\r\nimport './Footer.css';\r\n\r\n/*** Component ***/\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer-outerWrapper\">\r\n      <div className=\"footer-wrapper\">\r\n        <OurCinemas />\r\n        <Applications dataList={picsData} />\r\n        <ContactLink />\r\n      </div>\r\n      <Attribution />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { Route, withRouter } from 'react-router-dom';\r\n\r\nimport timeout from '../../services/timeout';\r\nimport {\r\n  getAnyItem as getExpiresIn,\r\n  clearLocalStorage,\r\n} from '../../services/localStorage';\r\nimport { setAnyItem as setAutoLogoutTimerId } from '../../services/localStorage';\r\nimport { setAnyItem as setAutoLogoutReminderTimerId } from '../../services/localStorage';\r\nimport AutoLogoutReminder from '../AutoLogoutReminder/AutoLogoutReminder';\r\nimport NavBar from '../NavBar/NavBar';\r\nimport Footer from '../Footer/Footer';\r\nimport routingList from '../App/routing/routingList';\r\nimport './App.css';\r\n\r\n/*** Component ***/\r\nclass App extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      reminder: false,\r\n    };\r\n    this.appWrapperRef = React.createRef();\r\n    this.mainContainerRef = React.createRef();\r\n  }\r\n\r\n  /* Lifecycle Methods */\r\n  componentDidMount() {\r\n    const expiresIn = getExpiresIn('expiresIn');\r\n    if (expiresIn) {\r\n      this.handleAutoLogout(getExpiresIn('expiresIn'));\r\n      this.handleAutoLogoutReminder(expiresIn);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const expiresIn = getExpiresIn('expiresIn');\r\n    this.handleAutoLogoutReminder(expiresIn);\r\n  }\r\n\r\n  /* Assistive Methods */\r\n  handleAutoLogout = (expiresIn) => {\r\n    if (Date.now() > expiresIn) {\r\n      clearLocalStorage();\r\n    } else {\r\n      const autoLogoutRedirect = () => {\r\n        this.props.history.push('/autologout');\r\n      };\r\n      const autoLogoutTimerId = timeout(\r\n        autoLogoutRedirect,\r\n        expiresIn - Date.now()\r\n      );\r\n      setAutoLogoutTimerId('autoLogoutTimerId', autoLogoutTimerId);\r\n    }\r\n  };\r\n\r\n  handleAutoLogoutReminder = (expiresIn) => {\r\n    const timeToShowReminder = 300000;\r\n    if (expiresIn && Date.now() - timeToShowReminder < expiresIn) {\r\n      const autoLogoutReminderCb = () => {\r\n        this.setState({ reminder: true });\r\n      };\r\n      const autoLogoutReminderTimerId = timeout(\r\n        autoLogoutReminderCb,\r\n        expiresIn - Date.now() - timeToShowReminder\r\n      );\r\n      setAutoLogoutReminderTimerId(\r\n        'autoLogoutReminderTimerId',\r\n        autoLogoutReminderTimerId\r\n      );\r\n    } else if (!expiresIn) {\r\n      this.setState({ reminder: false });\r\n    }\r\n  };\r\n\r\n  renderRouting = () => {\r\n    return routingList.map(({ path, component, exact }, index) => {\r\n      return (\r\n        <Route key={index} path={path} exact={exact} component={component} />\r\n      );\r\n    });\r\n  };\r\n\r\n  renderAutoLogoutReminder = () => {\r\n    if (this.state.reminder) return <AutoLogoutReminder />;\r\n  };\r\n\r\n  /* Render */\r\n  render() {\r\n    return (\r\n      <>\r\n        <NavBar />\r\n        <div className=\"main-container\" ref={this.mainContainerRef}>\r\n          {this.renderRouting()}\r\n          {this.renderAutoLogoutReminder()}\r\n        </div>\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\n\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}