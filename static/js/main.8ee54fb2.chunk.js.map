{"version":3,"sources":["services/timeout/index.js","services/localStorage/index.js","assistive functions/index.js","components/AutoLogoutReminder/AutoLogoutReminder.js","services/predicates/index.js","services/errors handling/redirectError.js","services/errors handling/handleErrors.js","services/apis/baseFetch.js","components/conditional_components/Loading/Loading.js","components/low-level_components/MoviePoster/MoviePoster.js","components/HomePage/parts/MovieLinkWithTitle/MovieLinkWithTitle.js","components/HomePage/parts/MoviesGroup/MoviesGroup.js","components/HomePage/HomePage.js","components/ContactUs/parts/ContactWay/ContactWay.js","components/ContactUs/ContactUs.js","components/low-level_components/LoadingSpinner/LoadingSpinner.js","components/low-level_components/FormInput/FormInput.js","components/low-level_components/SubmitBtn/SubmitBtn.js","components/Register/Register.js","components/conditional_components/LogInNeeded/LogInNeeded.js","components/Login/Login.js","components/low-level_components/MovieInfo/MovieInfo.js","components/tickets_components/Reservation/parts/BuyTicket/parts/assistiveFunctions.js","components/low-level_components/ScreeningInfo/ScreeningInfo.js","components/tickets_components/MyTickets/parts/Movies.js","components/tickets_components/MyTickets/MyTickets.js","components/Prices/parts/PriceList/PriceList.js","components/Prices/parts/pricesData.js","components/Prices/Prices.js","components/tickets_components/Reservation/parts/Movie/Movie.js","components/low-level_components/Select/Select.js","components/tickets_components/Reservation/parts/BuyTicket/BuyTicket.js","components/tickets_components/Reservation/Reservation.js","components/ServerError/ServerError.js","components/AutoLogout/AutoLogout.js","components/App/routing/routingList.js","components/NavBar/parts/linksList.js","components/NavBar/NavBar.js","components/Footer/parts/Attribution/Attribution.js","components/Footer/parts/CinemasList/CinemasList.js","components/Footer/parts/CinemasList/data.js","components/Footer/parts/OurCinemas/OurCinemas.js","components/Footer/parts/ContactLink/ContactLink.js","components/Footer/parts/Applications/Applications.js","components/Footer/parts/Applications/data.js","components/Footer/Footer.js","components/App/App.js","index.js"],"names":["timeout","func","time","setTimeout","getItem","item","window","localStorage","setItem","value","clearLocalStorage","clear","classes","scrollTop","scrollTo","top","bahavior","addClasses","element","Array","forEach","newClass","classList","add","removeClasses","remove","modifyClasses","classesToDel","classesToAdd","startLoading","visible","invisible","finishLoading","disableElement","setAttribute","enableElement","removeAttribute","AutoLogoutReminder","props","formatCountdown","Math","round","state","minute","floor","seconds","formatedSeconds","countdownAutologout","intervalId","setInterval","setState","prevState","cancelInterval","clearInterval","closeWindow","hide","grid","wrapperRef","current","renewSession","show","redirectWrapperRef","renewWrapperRef","agreeToRenew","clearTimeout","getAutoLogoutTimerId","getAutoLogoutReminderTimerId","history","push","getTokenExpiration","Date","now","React","createRef","this","submitBtn","cursorPointer","className","ref","renewSessionText","onClick","renewSessionBtn","icon","faTimes","redirectToLoginText","agreeToRenewBtn","cancelRenewBtn","Component","defaultProps","withRouter","isLower","x","y","isLowerEqual","z","isEqual","redirectError","err","pathname","errorCodes","errorTexts","handleErrors","status","optionsObj","concurrentReserv","handler","message","error","Error","statusCode","ok","created","bad_request","unauthorized","forbidden","not_found","conflict","unprocessable_entity","internal_server_error","badReqErrMsg","authErrMsg","forbiddenErrMsg","concurrentReservErrMsg","notFoundErrMsg","conflictErrMsg","validationErrMsg","serverErrMsg","baseUrl","baseFetch","a","path","body","contentType","method","authToken","fetch","headers","Authorization","Loading","loadingText","MoviePoster","src","alt","available","image","undefined","MovieLinkWithTitle","imageUrl","_id","title","to","appName","setMovieId","data-movie-id","MoviesGroup","movies","map","index","key","renderMovies","HomePage","classifyMovies","newMovies","recommendedMovies","movie","isHigherEqual","year","getFullYear","screenings","availableScreenings","unavailableScreenings","respMovies","json","getScreenings","checkAvailability","unavailable","moviesWithAvailability","addAvailability","respScreenings","screening","movie_id","includes","id","availableMovies","unavailableMovies","moviesCopy","availableId","unavailableId","wereNotMoviesFetched","length","ContactWay","iconSemanticUI","header","content","main","secondary","communication","way","resource","wrapperClass","iconClass","titleClass","textsClass","ContactUs","getVariables","finalWidthOfWindow","childrenNum","children","wrapper","changeToOneColumn","style","changeToMultiColumn","handleResize","windowWidth","innerWidth","count","width","addEventListener","nextProps","nextState","predicateOne","predicateTwo","didStateNotChange","removeEventListener","LoadingSpinner","reference","outerWrapper","spinnerWrapper","spinner","FormInput","moduleName","formValue","validationVal","type","name","placeholder","inputRef","minlength","maxlength","required","onChange","onBlur","htmlFor","minLength","maxLength","SubmitBtn","btnText","Register","renderInputs","firstName","firstNameRef","validationMsg","validationMsgFirstName","validationMsgName","lastName","lastNameRef","validationMsgLastName","email","emailRef","validationMsgEmail","pass","passRef","validationMsgPass","confirmPass","confirmPassRef","validationMsgConfirmPass","handleInputChange","validateInput","negativeValidation","inputClassList","warningText","neutralInput","invalidInput","replace","positiveValidation","inputName","inputValue","test","polishNounForm","validateCommonTextInput","validatePass","msg","afterSubmitInfo","validateRegisterInfo","errMsg","valid","invalid","validateRegisterInfoParagraph","validateRegisterInfoRef","isRegistrationSuccessful","dispatchToLogin","checksDataEntirety","every","getUserId","endRegister","cursorAuto","registerSpinnerRef","enableRegisterBtn","registerBtnRef","stateKey","handleSubmit","e","preventDefault","disableRegisterBtn","userData","surname","password","confirmPassword","JSON","stringify","areInputsValidatedCorrectyle","focus","onSubmit","registerFormRef","LogInNeeded","logInText","Login","renderLoginInputs","target","endLogin","cusorPointer","loginSpinnerRef","enableLoginBtn","loginBtnRef","handleAutoLogout","expiresIn","autoLogoutTimerId","setAutoLogoutTimerId","disableLoginBtn","loginData","resp","token","userId","setUserId","setAuthToken","setExpiresIn","getExpiresIn","isLoggedIn","validateLoginInfoRef","goBack","cutMovieDescription","fullDescr","compareLenghts","slice","MovieInfo","description","descriptionClass","descrSpanClass","tooltipTextClass","refDescr","refTooltip","descr","innerText","dots","shortDescrWithDotsLength","fullDescrAndTooltipText","dateFormat","toLocaleString","month","day","hour","getAllSeats","room_id","getToken","seats","filtered","rowNum","occuredRows","row","seatNumber","elem","sort","b","setTakenSeats","data","seat_id","ScreeningInfo","seat","timeClass","seatClass","isSeatDefined","Movies","reservations","noTicketsText","doesUserHasTickets","screening_id","renderTickets","MyTickets","user_id","isUserLoggedIn","areReservationsFetched","PriceList","prices","tableClass","rowClass","rows","renderTable","table","el","renderRows","twoD","openDays","normalTicket","kidPupilTicket","senior","threeD","Prices","pricesData","Movie","renderMovie","renderOptionTags","optionTitleProp","dataArr","optionContentFunc","optionValueFunc","fallbackValueProp","doesDataExist","Select","selectNameProp","labelTextProp","spinnerComp","handlerFunc","display","BuyTicket","setAnyState","receivedState","cb","newState","Object","assign","setRowsList","rowsWithSeats","filter","checkAvailableSeats","existingReservations","takenSeats","calculateFreeSeats","getScreeningData","loadingSpinnerRef","setNewState","choosenRow","choosenSeat","freeSeats","rowsList","room","afterReservationUserInfo","classToDel","classToAdd","enableReservation","checkReservationAttempt","takenRow","takenSeat","indexOf","checkConcurrentReservation","wasConcurrentReservationMade","some","rowObj","reservationServerError","validSubmit","invalidSubmit","afterSubmitInfoRef","makeNewReservation","reservationParams","reservStatus","setStateAfterNewReserv","handleRowOptionChange","reservationSpinnerRef","enableBtn","reservationBtnRef","handleDateOptionChange","persist","selectDateRef","Number","selectRowRef","toString","handleSeatOptionChange","selectSeatRef","disableBtn","immutableRows","reservationDone","reservation","free","Reservation","renderReservation","isMovieFetched","getId","ServerError","errCode","location","PureComponent","AutoLogout","infoText","routingList","component","exact","linksList","Link","NavBar","setLoginBtnText","handleWindowResize","dropdownNav","horizontalNav","dropdown","expanded","setActiveNavTab","navBarActiveItem","navChildren","from","activeChild","find","aTag","hash","currentPathName","handleIconClick","navBarWrapperAnimation","navBarMenuIconAnimation","iconWrapperRef","hideNavLinks","isDropdown","hideNavLinksWrapperFunc","renderLinks","loginBtn","renderDropdownIcon","isExpanded","faBars","renderDropdownNav","renderHorizontalNav","renderAdditionalChildren","outerWrapperRef","tabIndex","Attribution","href","CinemasList","cinemasList","OurCinemas","ContactsLink","Applications","dataList","picsData","Footer","ContactLink","App","handleAutoLogoutReminder","autoLogoutReminderTimerId","reminder","setAutoLogoutReminderTimerId","renderRouting","renderAutoLogoutReminder","appWrapperRef","mainContainerRef","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.8ee54fb2.chunk.js","sourcesContent":["const timeout = (func, time) => {\r\n  const id = setTimeout(func, time);\r\n  return id;\r\n};\r\n\r\nexport default timeout;\r\n","export const getItem = (item) => {\r\n  return window.localStorage.getItem(item);\r\n};\r\n\r\nexport const setItem = (item, value) => {\r\n  window.localStorage.setItem(item, value);\r\n};\r\n\r\nexport const clearLocalStorage = () => {\r\n  window.localStorage.clear();\r\n};\r\n","/*** Variables ***/\r\nconst classes = {\r\n  invisible: 'invisible',\r\n  visible: 'visible',\r\n};\r\n\r\n/*** Assistive Functions ***/\r\n/* Generic */\r\nexport const scrollTop = () => {\r\n  window.scrollTo({\r\n    top: 0,\r\n    bahavior: 'smooth',\r\n  });\r\n};\r\n\r\nexport const addClasses = (element, classes) => {\r\n  if (!(classes instanceof Array)) classes = [classes];\r\n  classes.forEach((newClass) => {\r\n    element.classList.add(newClass);\r\n  });\r\n};\r\n\r\nexport const removeClasses = (element, classes) => {\r\n  if (!(classes instanceof Array)) classes = [classes];\r\n  classes.forEach((newClass) => {\r\n    element.classList.remove(newClass);\r\n  });\r\n};\r\n\r\nexport const modifyClasses = (\r\n  element,\r\n  classesToDel = [],\r\n  classesToAdd = []\r\n) => {\r\n  removeClasses(element, classesToDel);\r\n  addClasses(element, classesToAdd);\r\n};\r\n\r\nexport const startLoading = (element, classesToDel = [], classesToAdd = []) => {\r\n  const { visible, invisible } = classes;\r\n  modifyClasses(\r\n    element,\r\n    [invisible, ...classesToDel],\r\n    [visible, ...classesToAdd]\r\n  );\r\n};\r\n\r\nexport const finishLoading = (element) => {\r\n  const { visible, invisible } = classes;\r\n  modifyClasses(element, [visible], [invisible]);\r\n};\r\n\r\nexport const disableElement = (\r\n  element,\r\n  classesToAdd = [],\r\n  classesToDel = []\r\n) => {\r\n  element.setAttribute('disabled', true);\r\n  modifyClasses(element, classesToDel, classesToAdd);\r\n};\r\n\r\nexport const enableElement = (element, classesToAdd, classesToDel) => {\r\n  element.removeAttribute('disabled', true);\r\n  modifyClasses(element, classesToDel, classesToAdd);\r\n};\r\n\r\n/* Form related */\r\nexport const validateEmail = (emailValue) => {\r\n  if (/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(emailValue))\r\n    return false;\r\n  return true;\r\n};\r\n\r\nexport const validateCommonTextInput = (value) => {\r\n  if (/^[A-Ż]?[a-ż]*$/.test(value)) return false;\r\n  return true;\r\n};\r\n\r\nexport const validateSurname = (value) =>\r\n  !/(^[A-Za-ż][']?[A-Z]?[a-ż]+[-|\\s]?[A-Za-ż]+$)/.test(value);\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport {\r\n  clearLocalStorage,\r\n  getItem as getTokenExpiration,\r\n  setItem,\r\n} from '../../services/localStorage';\r\nimport { getItem } from '../../services/localStorage';\r\nimport { getItem as getAutoLogoutTimerId } from '../../services/localStorage';\r\nimport { getItem as getAutoLogoutReminderTimerId } from '../../services/localStorage';\r\nimport { addClasses, modifyClasses } from '../../assistive functions';\r\nimport './AutoLogoutReminder.css';\r\n\r\n/*** Variables ***/\r\nconst classes = {\r\n  hide: 'hide',\r\n  show: 'show',\r\n  grid: 'grid',\r\n  cursorPointer: 'cursor-pointer',\r\n  submitBtn: 'submitBtn',\r\n};\r\n\r\n/*** Component ***/\r\nclass AutoLogoutReminder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      time: getTokenExpiration('expiresIn') - Date.now(),\r\n    };\r\n    this.wrapperRef = React.createRef();\r\n    this.redirectWrapperRef = React.createRef();\r\n    this.renewWrapperRef = React.createRef();\r\n  }\r\n\r\n  /* Lifecycle Methods */\r\n  componentDidMount() {\r\n    this.countdownAutologout();\r\n  }\r\n\r\n  /* Assistive Methods */\r\n  formatCountdown = () => {\r\n    const time = Math.round(this.state.time / 1000);\r\n    const minute = Math.floor(time / 60);\r\n    const seconds = time - minute * 60;\r\n    const formatedSeconds = seconds > 9 ? seconds : `0${seconds}`;\r\n    return `${minute}:${formatedSeconds}`;\r\n  };\r\n\r\n  countdownAutologout = () => {\r\n    const intervalId = setInterval(() => {\r\n      this.setState((prevState) => {\r\n        return { time: prevState.time - 1000 };\r\n      });\r\n    }, 1000);\r\n    setItem('intervalId', intervalId);\r\n  };\r\n\r\n  cancelInterval = () => {\r\n    clearInterval(getItem('intervalId'));\r\n  };\r\n\r\n  closeWindow = () => {\r\n    const { hide, grid } = classes;\r\n    this.cancelInterval();\r\n    modifyClasses(this.wrapperRef.current, grid, hide);\r\n  };\r\n\r\n  renewSession = () => {\r\n    const { hide, show } = classes;\r\n    this.cancelInterval();\r\n    modifyClasses(this.redirectWrapperRef.current, hide, show);\r\n    addClasses(this.renewWrapperRef.current, hide);\r\n  };\r\n\r\n  agreeToRenew = () => {\r\n    this.closeWindow();\r\n    clearTimeout(getAutoLogoutTimerId('autoLogoutTimerId'));\r\n    clearTimeout(getAutoLogoutReminderTimerId('autoLogoutReminderTimerId'));\r\n    clearLocalStorage();\r\n    this.props.history.push('/Login');\r\n  };\r\n\r\n  /* Render */\r\n  render() {\r\n    const { grid, hide, submitBtn, cursorPointer } = classes;\r\n    return (\r\n      <div\r\n        className={`autoLogoutReminder-wrapper ${grid}`}\r\n        ref={this.wrapperRef}\r\n      >\r\n        <div\r\n          className='autoLogoutReminder-reminder-wrapper'\r\n          ref={this.renewWrapperRef}\r\n        >\r\n          <div className='autoLogoutReminder-reminder-innerWrapper'>\r\n            <div className='autoLogoutReminder-reminder-content'>\r\n              <p className='autoLogoutReminder-reminder-text'>{`Za ${this.formatCountdown()} min. ${\r\n                this.props.renewSessionText\r\n              }`}</p>\r\n              <button\r\n                className={`${submitBtn} ${cursorPointer}`}\r\n                onClick={this.renewSession}\r\n              >\r\n                {this.props.renewSessionBtn}\r\n              </button>\r\n            </div>\r\n            <FontAwesomeIcon icon={faTimes} onClick={this.closeWindow} />\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className={`autoLogoutReminder-redirect-wrapper ${hide}`}\r\n          ref={this.redirectWrapperRef}\r\n        >\r\n          <div className='autoLogoutReminder-redirect-innerWrapper'>\r\n            <p>{this.props.redirectToLoginText}</p>\r\n            <div className='autoLogoutReminder-btns-wrapper'>\r\n              <button\r\n                className={`${submitBtn} ${cursorPointer}`}\r\n                onClick={this.agreeToRenew}\r\n              >\r\n                {this.props.agreeToRenewBtn}\r\n              </button>\r\n              <button\r\n                className={`${submitBtn} ${cursorPointer}`}\r\n                onClick={this.closeWindow}\r\n              >\r\n                {this.props.cancelRenewBtn}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAutoLogoutReminder.defaultProps = {\r\n  renewSessionText: 'zostaniesz wylogowany.',\r\n  redirectToLoginText:\r\n    'Teraz zostaniesz wylogowany i przeniesiony do strony logowania.',\r\n  renewSessionBtn: 'Odnów sesję',\r\n  agreeToRenewBtn: 'Kontynuuj',\r\n  cancelRenewBtn: 'Przerwij',\r\n};\r\n\r\nexport default withRouter(AutoLogoutReminder);\r\n","export const combinePredicates = (predicateOne, predicateTwo) => (x, y, z) =>\r\n  (predicateOne(x, y) && predicateTwo(x, z)) ||\r\n  (predicateOne(y, x) && predicateTwo(z, x));\r\n\r\nexport const isLower = (x, y) => y > x;\r\n\r\nexport const isLowerEqual = (x, z) => z <= x;\r\n\r\nexport const isEqual = (x, y) => {\r\n  return x === y;\r\n};\r\n","const redirectError = (history, err) => {\r\n  history.push({\r\n    pathname: '/servererror',\r\n    state: {\r\n      err,\r\n    },\r\n  });\r\n};\r\n\r\nexport default redirectError;\r\n","/*** Variables ***/\r\nexport const errorCodes = {\r\n  ok: 200,\r\n  created: 201,\r\n  bad_request: 400,\r\n  unauthorized: 401,\r\n  forbidden: 403,\r\n  not_found: 404,\r\n  conflict: 409,\r\n  unprocessable_entity: 422,\r\n  internal_server_error: 500,\r\n};\r\n\r\nexport const errorTexts = {\r\n  serverErrMsg: 'Błąd serwera. Spróbuj ponownie później.',\r\n  concurrentReservErrMsg:\r\n    'Przepraszamy, miejsce zostało już zarezerwowane. Odśwież stronę i spróbuj ponownie.',\r\n  validationErrMsg: 'Wprowadzono dane w niedozwolonym formacie.',\r\n  authErrMsg: 'Nieprawidłowy email lub hasło.',\r\n  conflictErrMsg: 'Taki użytkownik już istnieje.',\r\n  badReqErrMsg: 'Niepoprawne żądanie. Spróbuj ponownie później.',\r\n  forbiddenErrMsg: 'Nie masz dostępu do żądanego zasobu.',\r\n  notFoundErrMsg: 'Nie znaleziono żądanego zasobu.',\r\n};\r\n\r\n/*** Functions ***/\r\nexport const handleErrors = (\r\n  status,\r\n  optionsObj = { concurrentReserv: false }\r\n) => {\r\n  const handler = (message, status) => {\r\n    const error = new Error(message);\r\n    error.statusCode = status;\r\n    throw error;\r\n  };\r\n\r\n  const {\r\n    ok,\r\n    created,\r\n    bad_request,\r\n    unauthorized,\r\n    forbidden,\r\n    not_found,\r\n    conflict,\r\n    unprocessable_entity,\r\n    internal_server_error,\r\n  } = errorCodes;\r\n  const {\r\n    badReqErrMsg,\r\n    authErrMsg,\r\n    forbiddenErrMsg,\r\n    concurrentReservErrMsg,\r\n    notFoundErrMsg,\r\n    conflictErrMsg,\r\n    validationErrMsg,\r\n    serverErrMsg,\r\n  } = errorTexts;\r\n\r\n  switch (status) {\r\n    case ok:\r\n    case created:\r\n      break;\r\n    case bad_request:\r\n      handler(badReqErrMsg, bad_request);\r\n      break;\r\n    case unauthorized:\r\n      handler(authErrMsg, unauthorized);\r\n      break;\r\n    case forbidden:\r\n      handler(forbiddenErrMsg, forbidden);\r\n      break;\r\n    case not_found:\r\n      if (optionsObj.concurrentReserv)\r\n        handler(concurrentReservErrMsg, not_found);\r\n      else handler(notFoundErrMsg, not_found);\r\n      break;\r\n    case conflict:\r\n      handler(conflictErrMsg, conflict);\r\n      break;\r\n    case unprocessable_entity:\r\n      handler(validationErrMsg, unprocessable_entity);\r\n      break;\r\n    case internal_server_error:\r\n      handler(serverErrMsg, internal_server_error);\r\n      break;\r\n    default:\r\n      handler(serverErrMsg, internal_server_error);\r\n  }\r\n\r\n  return;\r\n};\r\n","export const baseUrl = 'https://mini-kino.herokuapp.com/';\r\n\r\nconst baseFetch = async ({\r\n  path,\r\n  body = null,\r\n  contentType = 'application/json',\r\n  method = 'GET',\r\n  authToken = '',\r\n}) => {\r\n  return await fetch(`${baseUrl}${path}`, {\r\n    method,\r\n    headers: {\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Content-Type': contentType,\r\n      Authorization: `Bearer ${authToken}`,\r\n    },\r\n    body,\r\n  });\r\n};\r\n\r\nexport default baseFetch;\r\n","import React from 'react';\r\n\r\nimport './Loading.css';\r\n\r\n/*** Component ***/\r\nconst Loading = ({ loadingText }) => {\r\n  return (\r\n    <div className=\"loading-wrapper\">\r\n      <div>{loadingText}</div>\r\n      <div className=\"loadingDots-outerWrapper\">\r\n        <div className=\"loadingDots-wrapper\">\r\n          <div> </div> <div> </div> <div> </div> <div> </div> <div> </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nLoading.defaultProps = {\r\n  loadingText: 'Wczytywanie',\r\n};\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\n\r\nimport { isEqual } from '../../../services/predicates';\r\nimport './MoviePoster.css';\r\n\r\nconst MoviePoster = ({ src, alt, available, classes }) => {\r\n  const image = (\r\n    <img className={`${classes} moviePoster-poster`} src={src} alt={alt} />\r\n  );\r\n\r\n  const renderMoviePoster = () => {\r\n    if (isEqual(available, true) || isEqual(available, false)) {\r\n      return (\r\n        <div className='moviePoster-wrapper'>\r\n          {image}\r\n          <span\r\n            className={`${\r\n              isEqual(available, true)\r\n                ? 'moviePoster-available'\r\n                : 'moviePoster-unavailable'\r\n            } moviePoster-availability`}\r\n          >{`${isEqual(available, true) ? 'Dostępny' : 'Niedostępny'}`}</span>\r\n        </div>\r\n      );\r\n    } else if (isEqual(available, undefined)) {\r\n      return <div className='moviePoster-wrapper'>{image}</div>;\r\n    }\r\n  };\r\n\r\n  return renderMoviePoster();\r\n};\r\n\r\nMoviePoster.defaultProps = {\r\n  classes: '',\r\n};\r\n\r\nexport default MoviePoster;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { baseUrl } from '../../../../services/apis/baseFetch';\r\nimport { setItem as setMovieId } from '../../../../services/localStorage';\r\nimport { appName } from '../../../App/routing/routingList';\r\nimport MoviePoster from '../../../low-level_components/MoviePoster/MoviePoster';\r\nimport './MovieLinkWithTitle.css';\r\n\r\n/*** Component ***/\r\nconst MovieLinkWithTitle = ({ imageUrl, _id, title, available }) => {\r\n  return (\r\n    <>\r\n      <Link\r\n        to={`${appName}/reservation`}\r\n        className='movieLinkWithTitle-wrapper'\r\n        onClick={() => setMovieId('movieId', _id)}\r\n      >\r\n        <MoviePoster\r\n          src={`${baseUrl}${imageUrl}`}\r\n          alt={title}\r\n          available={available}\r\n        />\r\n        <p className='movieLinkWithTitle-title' data-movie-id={_id}>\r\n          {title}\r\n        </p>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieLinkWithTitle;\r\n","import React from 'react';\r\n\r\nimport MovieLinkWithTitle from '../MovieLinkWithTitle/MovieLinkWithTitle';\r\nimport './MoviesGroup.css';\r\n\r\n/*** Assistive Functions ***/\r\nconst renderMovies = (movies) => {\r\n  return movies.map(({ imageUrl, title, _id, available }, index) => {\r\n    return (\r\n      <MovieLinkWithTitle\r\n        key={index}\r\n        imageUrl={imageUrl}\r\n        title={title}\r\n        available={available}\r\n        _id={_id}\r\n      />\r\n    );\r\n  });\r\n};\r\n\r\n/*** Component ***/\r\nconst MoviesGroup = ({ title, movies }) => {\r\n  return (\r\n    <div className=\"moviesGroup-wrapper\">\r\n      <h1 className=\"moviesGroup-title\">{title}</h1>\r\n      <div className=\"moviesGroup-list\">{renderMovies(movies)}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviesGroup;\r\n","import React, { Component } from 'react';\r\n\r\nimport { scrollTop } from '../../assistive functions';\r\nimport redirectError from '../../services/errors handling/redirectError';\r\nimport { handleErrors } from '../../services/errors handling/handleErrors';\r\nimport {\r\n  isEqual,\r\n  isLowerEqual as isHigherEqual,\r\n} from '../../services/predicates';\r\nimport { isEqual as wereNotMoviesFetched } from '../../services/predicates';\r\nimport baseFetch from '../../services/apis/baseFetch';\r\nimport Loading from '../conditional_components/Loading/Loading';\r\nimport MoviesGroup from './parts/MoviesGroup/MoviesGroup';\r\nimport './HomePage.css';\r\n\r\n/*** Component ***/\r\nclass HomePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      movies: [],\r\n      recommendedMovies: [],\r\n      newMovies: [],\r\n      screenings: [],\r\n      availableScreenings: [],\r\n      unavailableScreenings: [],\r\n    };\r\n  }\r\n\r\n  /* Lifecycle Methods */\r\n  async componentDidMount() {\r\n    scrollTop();\r\n    try {\r\n      const respMovies = await baseFetch({ path: 'api/movie' });\r\n      handleErrors(respMovies.status);\r\n      const movies = await respMovies.json();\r\n      const screenings = await this.getScreenings();\r\n      const { newMovies, recommendedMovies } = this.classifyMovies(movies);\r\n      const { available, unavailable } = this.checkAvailability(\r\n        movies,\r\n        screenings\r\n      );\r\n      const moviesWithAvailability = this.addAvailability(\r\n        available,\r\n        unavailable,\r\n        movies\r\n      );\r\n\r\n      this.setState({\r\n        movies: moviesWithAvailability,\r\n        recommendedMovies,\r\n        newMovies,\r\n      });\r\n    } catch (err) {\r\n      redirectError(this.props.history, err);\r\n    }\r\n  }\r\n\r\n  /* Assistive Methods */\r\n  classifyMovies = (movies) => {\r\n    const newMovies = [];\r\n    const recommendedMovies = [];\r\n\r\n    movies.forEach((movie) => {\r\n      isHigherEqual(movie.year, new Date().getFullYear() - 1)\r\n        ? newMovies.push(movie)\r\n        : recommendedMovies.push(movie);\r\n    });\r\n\r\n    return { newMovies, recommendedMovies };\r\n  };\r\n\r\n  async getScreenings() {\r\n    const respScreenings = await baseFetch({ path: 'api/screening' });\r\n    handleErrors(respScreenings.status);\r\n    const screenings = await respScreenings.json();\r\n    return screenings;\r\n  }\r\n\r\n  checkAvailability(movies, screenings) {\r\n    const available = [];\r\n    const unavailable = [];\r\n\r\n    movies.forEach((movie) => {\r\n      screenings.forEach((screening) => {\r\n        if (isEqual(movie._id, screening.movie_id)) {\r\n          if (!available.includes(movie._id)) available.push(movie._id);\r\n        } else {\r\n          if (!unavailable.includes(movie._id)) unavailable.push(movie._id);\r\n        }\r\n      });\r\n    });\r\n\r\n    available.forEach((id) => {\r\n      unavailable.forEach((_id, index) => {\r\n        if (isEqual(id, _id)) delete unavailable[index];\r\n      });\r\n    });\r\n\r\n    return { available, unavailable };\r\n  }\r\n\r\n  addAvailability(available, unavailable, movies) {\r\n    const availableMovies = [];\r\n    const unavailableMovies = [];\r\n    const moviesCopy = [...movies];\r\n\r\n    moviesCopy.forEach((movie) => {\r\n      available.forEach((availableId) => {\r\n        if (isEqual(movie._id, availableId)) {\r\n          movie.available = true;\r\n          availableMovies.push(movie);\r\n        }\r\n      });\r\n    });\r\n\r\n    unavailable.forEach((unavailableId) => {\r\n      moviesCopy.forEach((movie) => {\r\n        if (!unavailableMovies.includes(movie)) {\r\n          if (isEqual(movie._id, unavailableId)) {\r\n            movie.available = false;\r\n            unavailableMovies.push(movie);\r\n          }\r\n        }\r\n      });\r\n    });\r\n\r\n    const moviesWithAvailability = [...unavailableMovies, ...availableMovies];\r\n    return moviesWithAvailability;\r\n  }\r\n\r\n  /* Render */\r\n  render() {\r\n    if (wereNotMoviesFetched(this.state.recommendedMovies.length, 0)) {\r\n      return <Loading />;\r\n    }\r\n\r\n    return (\r\n      <div className='homepage-wrapper'>\r\n        <img className='homepage-img' src='img/jumanji4.png' alt='Home' />\r\n\r\n        <MoviesGroup\r\n          title='POLECANE FILMY'\r\n          movies={this.state.recommendedMovies}\r\n        />\r\n\r\n        <MoviesGroup title='NOWE FILMY' movies={this.state.newMovies} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\n\r\nimport './ContactWay.css';\r\n\r\n/*** Component ***/\r\nconst ContactWay = ({\r\n  iconSemanticUI,\r\n  header,\r\n  content: { main, secondary },\r\n  communication: { way, resource },\r\n  classes: { wrapperClass, iconClass, titleClass, textsClass },\r\n}) => {\r\n  return (\r\n    <div className={`contactWay-wrapper ${wrapperClass}`}>\r\n      <i className={`${iconSemanticUI} contactWay-icon ${iconClass}`}></i>\r\n      <h1 className={`contactWay-title ${titleClass}`}>{header}</h1>\r\n      <div className={`contactWay-texts ${textsClass}`}>\r\n        <p>{main}</p>\r\n        <p>{secondary}</p>\r\n        <p>\r\n          {way} <span>{resource}</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactWay.defaultProps = {\r\n  iconSemanticUI: 'envelope outline icon',\r\n  header: 'Napisz do nas e-mail',\r\n  content: {\r\n    main: 'Masz pytanie?',\r\n    secondary: 'Napisz do nas, a na pewno się z Tobą skontaktujemy',\r\n  },\r\n  communication: {\r\n    way: 'e-mail:',\r\n    resource: 'minikino@gmail.com',\r\n  },\r\n  classes: {\r\n    wrapperClass: '',\r\n    iconClass: '',\r\n    titleClass: '',\r\n    textsClass: '',\r\n  },\r\n};\r\n\r\nexport default ContactWay;\r\n","import React from 'react';\r\n\r\nimport { scrollTop } from '../../assistive functions';\r\nimport {\r\n  combinePredicates as hasWindowWithCrossedThreshold,\r\n  isLower,\r\n  isLowerEqual,\r\n  isEqual as didStateNotChange,\r\n} from '../../services/predicates';\r\nimport ContactWay from './parts/ContactWay/ContactWay';\r\nimport './ContactUs.css';\r\n\r\n/*** Component ***/\r\nclass ContactUs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      count: 0,\r\n      windowWidth: window.innerWidth,\r\n    };\r\n    this.wrapperRef = React.createRef();\r\n  }\r\n\r\n  /* Lifecycle Methods */\r\n  componentDidMount() {\r\n    const { finalWidthOfWindow, childrenNum, wrapper } = this.getVariables();\r\n    const width = window.innerWidth;\r\n\r\n    isLowerEqual(finalWidthOfWindow, width)\r\n      ? this.changeToOneColumn(wrapper)\r\n      : this.changeToMultiColumn(childrenNum, wrapper);\r\n\r\n    window.addEventListener('resize', this.handleResize);\r\n    scrollTop();\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    const { finalWidthOfWindow } = this.getVariables();\r\n\r\n    if (!didStateNotChange(this.state.windowWidth, nextState.windowWidth)) {\r\n      if (\r\n        hasWindowWithCrossedThreshold(isLower, isLowerEqual)(\r\n          finalWidthOfWindow,\r\n          this.state.windowWidth,\r\n          nextState.windowWidth\r\n        )\r\n      )\r\n        return true;\r\n      else return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.handleResize);\r\n  }\r\n\r\n  /* Assistive Methods and Handlers */\r\n  getVariables = () => {\r\n    const wrapperRef = this.wrapperRef.current;\r\n    const values = {\r\n      finalWidthOfWindow: 800,\r\n      childrenNum: wrapperRef.children.length,\r\n      wrapper: wrapperRef,\r\n    };\r\n    return values;\r\n  };\r\n\r\n  changeToOneColumn = (wrapper) => {\r\n    wrapper.style = 'grid-template-columns: auto';\r\n  };\r\n\r\n  changeToMultiColumn = (childrenNum, wrapper) => {\r\n    wrapper.style = `grid-template-columns: repeat(${childrenNum},${\r\n      100 / childrenNum\r\n    }%)`;\r\n  };\r\n\r\n  handleResize = () => {\r\n    const { finalWidthOfWindow, childrenNum, wrapper } = this.getVariables();\r\n\r\n    this.setState({ windowWidth: window.innerWidth }, () => {\r\n      if (isLowerEqual(finalWidthOfWindow, this.state.windowWidth)) {\r\n        this.changeToOneColumn(wrapper);\r\n      } else {\r\n        this.changeToMultiColumn(childrenNum, wrapper);\r\n      }\r\n    });\r\n  };\r\n\r\n  /* Render */\r\n  render() {\r\n    return (\r\n      <div className='contactUs-wrapper' ref={this.wrapperRef}>\r\n        <ContactWay />\r\n        <ContactWay\r\n          iconSemanticUI='phone volume icon'\r\n          header='Zadzwoń do nas na infolinię'\r\n          content={{\r\n            main: 'Masz pytanie?',\r\n            secondary:\r\n              'Nasi fachowcy czekają na Twoje pytania codziennie od 10:00 do 21:00',\r\n          }}\r\n          communication={{ way: 'tel', resource: '+48 666 66 66 66 66' }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactUs;\r\n","import React from 'react';\r\n\r\nimport './LoadingSpinner.css';\r\n\r\nconst LoadingSpinner = ({\r\n  reference,\r\n  classes: { outerWrapper, spinnerWrapper, spinner },\r\n}) => {\r\n  return (\r\n    <div\r\n      ref={reference}\r\n      className={`loadingSpinner-outerWrapper invisible ${outerWrapper}`}\r\n    >\r\n      <div className={`loadingSpinner-wrapper ${spinnerWrapper}`}>\r\n        <div className={`loadingSpinner-spinner ${spinner}`}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nLoadingSpinner.defaultProps = {\r\n  classes: {\r\n    outerWrapper: '',\r\n    spinnerWrapper: '',\r\n    spinner: '',\r\n  },\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React from 'react';\r\n\r\nimport './FormInput.css';\r\n\r\n/*** Component ***/\r\nconst FormInput = ({\r\n  moduleName,\r\n  title,\r\n  formValue,\r\n  validationVal,\r\n  type,\r\n  name,\r\n  placeholder,\r\n  inputRef,\r\n  minlength = 3,\r\n  maxlength = 20,\r\n  required = true,\r\n  onClick,\r\n  onChange,\r\n  onBlur,\r\n}) => {\r\n  return (\r\n    <div className={`field ${moduleName}-${name}-wrapper`}>\r\n      <label className='formInput-label' htmlFor={name}>\r\n        {title}\r\n      </label>\r\n      <input\r\n        id={name}\r\n        className='formInput-input neutral-input'\r\n        placeholder={placeholder}\r\n        name={name}\r\n        type={type}\r\n        ref={inputRef}\r\n        value={formValue}\r\n        minLength={minlength}\r\n        maxLength={maxlength}\r\n        required={required}\r\n        onChange={onChange}\r\n        onClick={onClick}\r\n        onBlur={onBlur}\r\n      />\r\n      <p className='validation-p'>{validationVal}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import React from 'react';\r\nimport './SubmitBtn.css';\r\n\r\nexport const SubmitBtn = ({ classes, btnText, reference, children }) => {\r\n  return (\r\n    <button className={`submitBtn ${classes}`} type=\"submit\" ref={reference}>\r\n      {btnText}\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nSubmitBtn.defaultProps = {\r\n  classes: '',\r\n  btnText: 'Wyślij',\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nimport { isEqual, isLower } from '../../services/predicates';\r\nimport {\r\n  validateEmail,\r\n  validateCommonTextInput,\r\n  validateSurname,\r\n} from '../../assistive functions';\r\nimport timeout from '../../services/timeout';\r\nimport { handleErrors } from '../../services/errors handling/handleErrors';\r\nimport baseFetch from '../../services/apis/baseFetch';\r\nimport { getItem as getUserId } from '../../services/localStorage';\r\nimport LoadingSpinner from '../low-level_components/LoadingSpinner/LoadingSpinner';\r\nimport FormInput from '../low-level_components/FormInput/FormInput';\r\nimport { SubmitBtn as RegisterBtn } from '../low-level_components/SubmitBtn/SubmitBtn';\r\nimport {\r\n  startLoading,\r\n  finishLoading,\r\n  enableElement as enableRegisterBtn,\r\n  disableElement as disableRegisterBtn,\r\n} from '../../assistive functions';\r\n\r\nimport './Register.css';\r\n\r\n/*** Variables ***/\r\nconst classes = {\r\n  invalid: 'invalid',\r\n  valid: 'valid',\r\n  neutralInput: 'neutral-input',\r\n  invalidInput: 'invalid-input',\r\n  cursorAuto: 'cursor-auto',\r\n  cursorPointer: 'cursor-pointer',\r\n};\r\n\r\n/*** Component ***/\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      pass: '',\r\n      confirmPass: '',\r\n      afterSubmitInfo: '',\r\n      validationMsgFirstName: '',\r\n      validationMsgLastName: '',\r\n      validationMsgEmail: '',\r\n      validationMsgPass: '',\r\n      validationMsgConfirmPass: '',\r\n      areInputsValidatedCorrectyle: false,\r\n    };\r\n    this.firstNameRef = React.createRef();\r\n    this.lastNameRef = React.createRef();\r\n    this.emailRef = React.createRef();\r\n    this.passRef = React.createRef();\r\n    this.confirmPassRef = React.createRef();\r\n    this.validateRegisterInfoRef = React.createRef();\r\n    this.registerSpinnerRef = React.createRef();\r\n    this.registerBtnRef = React.createRef();\r\n  }\r\n\r\n  /* Lifecycle Methods */\r\n  componentDidMount() {\r\n    this.firstNameRef.current.focus();\r\n  }\r\n\r\n  /* Assistive Methods */\r\n  renderInputs = () => {\r\n    const inputsData = [\r\n      {\r\n        title: 'Imię',\r\n        name: 'firstName',\r\n        placeholder: 'min. 3 znaki',\r\n        formValue: this.state.firstName,\r\n        type: 'text',\r\n        inputRef: this.firstNameRef,\r\n        validationMsg: this.state.validationMsgFirstName,\r\n        validationMsgName: 'validationMsgFirstName',\r\n      },\r\n      {\r\n        title: 'Nazwisko',\r\n        name: 'lastName',\r\n        placeholder: 'min. 3 znaki',\r\n        formValue: this.state.lastName,\r\n        type: 'text',\r\n        inputRef: this.lastNameRef,\r\n        validationMsg: this.state.validationMsgLastName,\r\n        validationMsgName: 'validationMsgLastName',\r\n      },\r\n      {\r\n        title: 'Email',\r\n        name: 'email',\r\n        placeholder: 'email',\r\n        formValue: this.state.email,\r\n        type: 'email',\r\n        minlength: 6,\r\n        maxlength: 40,\r\n        inputRef: this.emailRef,\r\n        validationMsg: this.state.validationMsgEmail,\r\n        validationMsgName: 'validationMsgEmail',\r\n      },\r\n\r\n      {\r\n        title: 'Hasło',\r\n        name: 'pass',\r\n        placeholder: 'min. 8 znaków',\r\n        formValue: this.state.pass,\r\n        type: 'password',\r\n        minlength: 8,\r\n        inputRef: this.passRef,\r\n        validationMsg: this.state.validationMsgPass,\r\n        validationMsgName: 'validationMsgPass',\r\n      },\r\n      {\r\n        title: 'Potwierdź hasło',\r\n        name: 'confirmPass',\r\n        placeholder: 'min. 8 znaków',\r\n        formValue: this.state.confirmPass,\r\n        type: 'password',\r\n        minlength: 8,\r\n        inputRef: this.confirmPassRef,\r\n        validationMsg: this.state.validationMsgConfirmPass,\r\n        validationMsgName: 'validationMsgConfirmPass',\r\n      },\r\n    ];\r\n\r\n    return inputsData.map(\r\n      ({\r\n        title,\r\n        name,\r\n        formValue,\r\n        type,\r\n        placeholder,\r\n        minlength = 3,\r\n        maxlength,\r\n        inputRef,\r\n        validationMsg,\r\n        validationMsgName,\r\n      }) => {\r\n        return (\r\n          <FormInput\r\n            moduleName='register'\r\n            key={title}\r\n            title={title}\r\n            name={name}\r\n            placeholder={placeholder}\r\n            formValue={formValue}\r\n            validationVal={validationMsg}\r\n            type={type}\r\n            minlength={minlength}\r\n            maxlength={maxlength}\r\n            inputRef={inputRef}\r\n            onChange={() =>\r\n              this.handleInputChange(name, inputRef.current.value)\r\n            }\r\n            onBlur={() =>\r\n              this.validateInput(\r\n                title,\r\n                inputRef.current,\r\n                minlength,\r\n                validationMsgName\r\n              )\r\n            }\r\n          />\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  negativeValidation = (inputClassList, warningText, validationMsgName) => {\r\n    this.setState({ [validationMsgName]: warningText });\r\n    const { neutralInput, invalidInput } = classes;\r\n    inputClassList.replace(neutralInput, invalidInput);\r\n  };\r\n\r\n  positiveValidation = (inputClassList, validationMsgName) => {\r\n    this.setState({ [validationMsgName]: '' });\r\n    const { neutralInput, invalidInput } = classes;\r\n    inputClassList.replace(invalidInput, neutralInput);\r\n  };\r\n\r\n  validateInput = (\r\n    title,\r\n    { name: inputName, value: inputValue, classList: inputClassList },\r\n    minlength,\r\n    validationMsgName\r\n  ) => {\r\n    let warningText;\r\n\r\n    if (isEqual(inputName, 'email')) {\r\n      if (validateEmail(inputValue)) {\r\n        warningText = `Niepoprawny email.`;\r\n        this.negativeValidation(inputClassList, warningText, validationMsgName);\r\n      } else {\r\n        this.positiveValidation(inputClassList, validationMsgName);\r\n      }\r\n    } else if (isEqual(inputName, 'lastName')) {\r\n      if (validateSurname(inputValue)) {\r\n        warningText = `\"${title}\" nie może zawierać liczb oraz znaków specjalnych.`;\r\n        this.negativeValidation(inputClassList, warningText, validationMsgName);\r\n      } else this.positiveValidation(inputClassList, validationMsgName);\r\n    } else {\r\n      if (isLower(inputValue.length, minlength)) {\r\n        const polishNounForm = isEqual(minlength, 3) ? 'znaki' : 'znaków';\r\n        warningText = `\"${title}\" musi mieć co najmniej ${minlength} ${polishNounForm}.`;\r\n        this.negativeValidation(inputClassList, warningText, validationMsgName);\r\n      } else if (validateCommonTextInput(inputValue)) {\r\n        warningText = `\"${title}\" nie może zawierać liczb oraz znaków specjalnych.`;\r\n        this.negativeValidation(inputClassList, warningText, validationMsgName);\r\n      } else this.positiveValidation(inputClassList, validationMsgName);\r\n    }\r\n  };\r\n\r\n  validatePass = () => {\r\n    if (!isEqual(this.state.pass, this.state.confirmPass)) {\r\n      const msg = 'Hasła muszą być jednakowe!';\r\n      this.setState({ afterSubmitInfo: msg }, () => {\r\n        timeout(() => {\r\n          this.setState({ afterSubmitInfo: '' });\r\n        }, 1000);\r\n      });\r\n\r\n      throw new Error(msg);\r\n    }\r\n  };\r\n\r\n  validateRegisterInfo = (status, errMsg) => {\r\n    const { valid, invalid } = classes;\r\n    const validateRegisterInfoParagraph = this.validateRegisterInfoRef.current;\r\n    let isRegistrationSuccessful = true;\r\n    if (isEqual(status, 201) || isEqual(status, 200)) {\r\n      this.setState({ afterSubmitInfo: 'Zarejestrowano' });\r\n      validateRegisterInfoParagraph.classList.replace(invalid, valid);\r\n    } else {\r\n      this.setState({ afterSubmitInfo: errMsg });\r\n      isRegistrationSuccessful = false;\r\n    }\r\n\r\n    timeout(() => {\r\n      this.setState({ afterSubmitInfo: '' });\r\n      validateRegisterInfoParagraph.classList.replace(valid, invalid);\r\n      this.dispatchToLogin(isRegistrationSuccessful);\r\n    }, 1000);\r\n  };\r\n\r\n  checksDataEntirety = () => {\r\n    let validationMsgs = [\r\n      this.state.validationMsgConfirmPass,\r\n      this.state.validationMsgEmail,\r\n      this.state.validationMsgFirstName,\r\n      this.state.validationMsgLastName,\r\n      this.state.validationMsgPass,\r\n    ];\r\n    let areDataCorrect = validationMsgs.every((msg) => isEqual(msg, ''));\r\n    if (!areDataCorrect) {\r\n      const msg = 'Uzupełnij dane!';\r\n      this.setState({ afterSubmitInfo: msg }, () => {\r\n        timeout(() => {\r\n          this.setState({ afterSubmitInfo: '' });\r\n        }, 1000);\r\n      });\r\n      throw new Error(msg);\r\n    }\r\n  };\r\n\r\n  dispatchToLogin = (isRegistrationSuccessful) => {\r\n    if (isRegistrationSuccessful && !getUserId('userId'))\r\n      this.props.history.push('/login');\r\n  };\r\n\r\n  endRegister = () => {\r\n    const { cursorAuto, cursorPointer } = classes;\r\n    finishLoading(this.registerSpinnerRef.current);\r\n    enableRegisterBtn(\r\n      this.registerBtnRef.current,\r\n      [cursorPointer],\r\n      [cursorAuto]\r\n    );\r\n  };\r\n\r\n  /* Handlers */\r\n  handleInputChange = (stateKey, value) => {\r\n    this.setState({ [stateKey]: value });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { cursorAuto, cursorPointer } = classes;\r\n    disableRegisterBtn(\r\n      this.registerBtnRef.current,\r\n      [cursorAuto],\r\n      [cursorPointer]\r\n    );\r\n    startLoading(this.registerSpinnerRef.current);\r\n\r\n    try {\r\n      // Checks if all inputs are filled correectly\r\n      this.checksDataEntirety();\r\n      // Check password and confirmPassword equality\r\n      this.validatePass();\r\n    } catch (err) {\r\n      this.endRegister();\r\n      return;\r\n    }\r\n\r\n    // Creates new user\r\n    try {\r\n      const userData = {\r\n        name: this.state.firstName,\r\n        surname: this.state.lastName,\r\n        email: this.state.email,\r\n        password: this.state.pass,\r\n        confirmPassword: this.state.confirmPass,\r\n      };\r\n\r\n      const { status } = await baseFetch({\r\n        path: 'api/user',\r\n        body: JSON.stringify(userData),\r\n        method: 'POST',\r\n      });\r\n\r\n      handleErrors(status);\r\n\r\n      this.endRegister();\r\n      this.validateRegisterInfo(status);\r\n    } catch ({ statusCode, message }) {\r\n      this.endRegister();\r\n      this.validateRegisterInfo(statusCode, message);\r\n    }\r\n  };\r\n\r\n  /* Render */\r\n  render() {\r\n    return (\r\n      <div className='register-outerWrapper'>\r\n        <div className='register-wrapper'>\r\n          <h1 className='register-title'>Rejestracja</h1>\r\n          <form\r\n            className='register-form'\r\n            onSubmit={this.handleSubmit}\r\n            ref={this.registerFormRef}\r\n          >\r\n            {this.renderInputs()}\r\n            <RegisterBtn\r\n              classes='registerBtn cursor-pointer'\r\n              btnText='Zarejestruj'\r\n              reference={this.registerBtnRef}\r\n            >\r\n              <LoadingSpinner\r\n                reference={this.registerSpinnerRef}\r\n                classes={{\r\n                  outerWrapper: 'registerSpinner-outerWrapper',\r\n                  spinner: 'registerSpinner',\r\n                }}\r\n              />\r\n            </RegisterBtn>\r\n            <p\r\n              ref={this.validateRegisterInfoRef}\r\n              className={`validate-register-info ${classes.invalid}`}\r\n            >\r\n              {this.state.afterSubmitInfo}\r\n            </p>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React from 'react';\r\n\r\nimport { scrollTop } from '../../../assistive functions';\r\nimport './LogInNeeded.css';\r\n\r\nexport const LogInNeeded = ({ logInText }) => {\r\n  scrollTop();\r\n  return <div className=\"logInNeeded\">{logInText}</div>;\r\n};\r\n\r\nLogInNeeded.defaultProps = {\r\n  logInText: 'Musisz się zalogować!',\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nimport timeout from '../../services/timeout';\r\nimport { handleErrors } from '../../services/errors handling/handleErrors';\r\nimport baseFetch from '../../services/apis/baseFetch';\r\nimport {\r\n  clearLocalStorage,\r\n  setItem as setUserId,\r\n  getItem as getUserId,\r\n} from '../../services/localStorage';\r\nimport { setItem as setAuthToken } from '../../services/localStorage';\r\nimport {\r\n  setItem as setExpiresIn,\r\n  getItem as getExpiresIn,\r\n} from '../../services/localStorage';\r\nimport {\r\n  setItem as setAutoLogoutTimerId,\r\n  getItem as getAutoLogoutTimerId,\r\n} from '../../services/localStorage';\r\nimport { getItem as getAutoLogoutReminderTimerId } from '../../services/localStorage';\r\nimport LoadingSpinner from '../low-level_components/LoadingSpinner/LoadingSpinner';\r\nimport { LogInNeeded as LogOutSuccessful } from '../conditional_components/LogInNeeded/LogInNeeded';\r\nimport { SubmitBtn as LoginBtn } from '../low-level_components/SubmitBtn/SubmitBtn';\r\nimport FormInput from '../low-level_components/FormInput/FormInput';\r\nimport {\r\n  startLoading,\r\n  finishLoading,\r\n  disableElement as disableLoginBtn,\r\n  enableElement as enableLoginBtn,\r\n} from '../../assistive functions';\r\nimport './Login.css';\r\n\r\n/*** Variables ***/\r\nconst classes = {\r\n  cursorPointer: 'cursor-pointer',\r\n  cursorAuto: 'cursor-auto',\r\n};\r\n\r\n/*** Component ***/\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      pass: '',\r\n      afterSubmitInfo: '',\r\n      autoLogoutTimerId: '',\r\n      isLoggedIn: false,\r\n    };\r\n    this.emailRef = React.createRef();\r\n    this.passRef = React.createRef();\r\n    this.validateLoginInfoRef = React.createRef();\r\n    this.loginSpinnerRef = React.createRef();\r\n    this.loginBtnRef = React.createRef();\r\n  }\r\n\r\n  /* Lifecycle Methods */\r\n  componentDidMount() {\r\n    if (getUserId('userId')) {\r\n      this.setState({ isLoggedIn: true });\r\n      timeout(() => {\r\n        this.props.history.goBack();\r\n      }, 1000);\r\n      clearTimeout(getAutoLogoutTimerId('autoLogoutTimerId'));\r\n      clearTimeout(getAutoLogoutReminderTimerId('autoLogoutReminderTimerId'));\r\n      clearLocalStorage();\r\n    } else {\r\n      this.emailRef.current.focus();\r\n    }\r\n  }\r\n\r\n  /* Assistive Methods */\r\n  renderLoginInputs = () => {\r\n    const loginData = [\r\n      {\r\n        title: 'E-mail',\r\n        name: 'email',\r\n        formValue: this.state.email,\r\n        type: 'email',\r\n        reference: this.emailRef,\r\n      },\r\n      {\r\n        title: 'Hasło',\r\n        name: 'pass',\r\n        formValue: this.state.pass,\r\n        type: 'password',\r\n        reference: this.passRef,\r\n      },\r\n    ];\r\n\r\n    return loginData.map(\r\n      ({ title, name, formValue, type, reference }, index) => {\r\n        return (\r\n          <FormInput\r\n            moduleName='login'\r\n            key={index}\r\n            title={title}\r\n            type={type}\r\n            name={name}\r\n            formValue={formValue}\r\n            inputRef={reference}\r\n            onChange={(e) => this.handleInputChange(name, e.target.value)}\r\n          />\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  endLogin = () => {\r\n    const { cursorAuto, cusorPointer } = classes;\r\n    finishLoading(this.loginSpinnerRef.current);\r\n    enableLoginBtn(this.loginBtnRef.current, [cusorPointer], [cursorAuto]);\r\n  };\r\n\r\n  /* Handlers */\r\n  handleAutoLogout = (expiresIn) => {\r\n    const autoLogoutRedirect = () => {\r\n      if (expiresIn) this.props.history.push('/autologout');\r\n    };\r\n    const autoLogoutTimerId = timeout(\r\n      autoLogoutRedirect,\r\n      expiresIn - Date.now()\r\n    );\r\n    setAutoLogoutTimerId('autoLogoutTimerId', autoLogoutTimerId);\r\n  };\r\n\r\n  handleInputChange = (stateKey, value) => {\r\n    this.setState({ [stateKey]: value });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { cursorAuto, cusorPointer } = classes;\r\n    disableLoginBtn(this.loginBtnRef.current, [cursorAuto], [cusorPointer]);\r\n    startLoading(this.loginSpinnerRef.current);\r\n\r\n    const loginData = {\r\n      email: this.state.email,\r\n      password: this.state.pass,\r\n    };\r\n\r\n    try {\r\n      const resp = await baseFetch({\r\n        path: 'api/login',\r\n        body: JSON.stringify(loginData),\r\n        method: 'POST',\r\n      });\r\n\r\n      handleErrors(resp.status);\r\n      const { token, userId, expiresIn } = await resp.json();\r\n      this.endLogin();\r\n\r\n      setUserId('userId', userId);\r\n      setAuthToken('token', token);\r\n      setExpiresIn('expiresIn', Date.now() + expiresIn);\r\n      this.handleAutoLogout(getExpiresIn('expiresIn'));\r\n\r\n      this.props.history.push('/');\r\n    } catch ({ message }) {\r\n      this.endLogin();\r\n      this.setState({ afterSubmitInfo: message }, () => {\r\n        timeout(() => {\r\n          this.setState({ afterSubmitInfo: '' });\r\n        }, 1000);\r\n      });\r\n    }\r\n  };\r\n\r\n  /* Render */\r\n  render() {\r\n    if (this.state.isLoggedIn) {\r\n      return <LogOutSuccessful logInText='Wylogowano prawidłowo.' />;\r\n    }\r\n    const { cursorPointer } = classes;\r\n\r\n    return (\r\n      <div className='login-outerWrapper'>\r\n        <div className='login-wrapper'>\r\n          <h1 className='login-title'>{this.props.title}</h1>\r\n          <form className='login-form' onSubmit={this.handleSubmit}>\r\n            {this.renderLoginInputs()}\r\n            <LoginBtn\r\n              classes={`loginBtn ${cursorPointer}`}\r\n              btnText='Zaloguj'\r\n              reference={this.loginBtnRef}\r\n            >\r\n              <LoadingSpinner\r\n                reference={this.loginSpinnerRef}\r\n                classes={{\r\n                  outerWrapper: 'login-spinner-outerWrapper',\r\n                  spinner: 'login-spinner',\r\n                }}\r\n              />\r\n            </LoginBtn>\r\n            <p\r\n              ref={this.validateLoginInfoRef}\r\n              className='validate-login-info invalid'\r\n            >\r\n              {this.state.afterSubmitInfo}\r\n            </p>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.defaultProps = {\r\n  title: 'Zaloguj',\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\n\r\nimport {\r\n  isEqual,\r\n  isLower as compareLenghts,\r\n} from '../../../services/predicates';\r\nimport './MovieInfo.css';\r\n\r\n/*** Variables ***/\r\nconst shortDescrLength = 30;\r\nconst dots = '...';\r\nconst shortDescrWithDotsLength = (dots) => shortDescrLength + dots.length;\r\n\r\n/*** Assistive Functions ***/\r\nconst fullDescrAndTooltipText = (refDescr, refTooltip, descr, fullDescr) => {\r\n  if (isEqual(refDescr.innerText.length, shortDescrWithDotsLength(dots))) {\r\n    refDescr.innerText = fullDescr;\r\n    refTooltip.innerText = 'Zwiń opis';\r\n  } else {\r\n    refDescr.innerText = descr;\r\n    refTooltip.innerText = 'Rozwiń opis';\r\n  }\r\n};\r\n\r\nconst cutMovieDescription = (fullDescr) => {\r\n  if (compareLenghts(shortDescrLength, fullDescr.length)) {\r\n    return `${fullDescr.slice(0, shortDescrLength)}${dots}`;\r\n  } else return fullDescr;\r\n};\r\n\r\n/*** Component ***/\r\nconst MovieInfo = ({\r\n  movie: { description, title },\r\n  classes: { titleClass, descriptionClass, descrSpanClass, tooltipTextClass },\r\n}) => {\r\n  let refDescr = React.createRef();\r\n  let refTooltip = React.createRef();\r\n\r\n  return (\r\n    <>\r\n      <h3 className={`${titleClass} movieInfo-title`}>{title}</h3>\r\n      <p\r\n        className={`${descriptionClass} movieInfo-description movieInfo-tooltip`}\r\n        onClick={() =>\r\n          fullDescrAndTooltipText(\r\n            refDescr.current,\r\n            refTooltip.current,\r\n            cutMovieDescription(description),\r\n            description\r\n          )\r\n        }\r\n      >\r\n        <span>{'Opis: '}</span>\r\n        <span\r\n          className={`${descrSpanClass} movieInfo-descrSpan`}\r\n          ref={refDescr}\r\n        >\r\n          {cutMovieDescription(description)}\r\n        </span>\r\n        <span\r\n          className={`${tooltipTextClass} movieInfo-tooltipText`}\r\n          ref={refTooltip}\r\n        >\r\n          {'Rozwiń opis'}\r\n        </span>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nMovieInfo.defaultProps = {\r\n  classes: {\r\n    titleClass: '',\r\n    descriptionClass: '',\r\n    descrSpanClass: '',\r\n    tooltipTextClass: '',\r\n  },\r\n};\r\n\r\nexport default MovieInfo;\r\n","import { isEqual } from '../../../../../../services/predicates';\r\nimport { handleErrors } from '../../../../../../services/errors handling/handleErrors';\r\nimport redirectError from '../../../../../../services/errors handling/redirectError';\r\nimport baseFetch from '../../../../../../services/apis/baseFetch';\r\nimport { getItem as getToken } from '../../../../../../services/localStorage';\r\n\r\n/*** Assistive Functions ***/\r\nexport const dateTitleProp = () => {\r\n  const title = 'Data i godzina';\r\n  return title;\r\n};\r\n\r\nexport const dateFormat = (time) => {\r\n  return new Date(time).toLocaleString(undefined, {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n    hour: 'numeric',\r\n    minute: 'numeric',\r\n  });\r\n};\r\n\r\nexport const getAllSeats = async (room_id, history) => {\r\n  try {\r\n    const resp = await baseFetch({\r\n      path: `api/seat/${room_id}`,\r\n      authToken: getToken('token'),\r\n    });\r\n\r\n    handleErrors(resp.status);\r\n    const seats = await resp.json();\r\n\r\n    let filtered = [];\r\n    let rowNum = 0;\r\n    let occuredRows = [];\r\n\r\n    // Segregates seats in an organized structure\r\n    seats.forEach(({ row, seatNumber }) => {\r\n      if (!isEqual(rowNum, row) && !occuredRows.includes(row)) {\r\n        rowNum = row;\r\n        occuredRows.push(row);\r\n        filtered.push({ row, seats: [seatNumber] });\r\n      } else {\r\n        filtered.forEach((elem) => {\r\n          if (isEqual(elem.row, row)) elem.seats.push(seatNumber);\r\n        });\r\n      }\r\n    });\r\n\r\n    // Sorts seats structure in an ascending order\r\n    filtered\r\n      .sort((a, b) => a.row - b.row)\r\n      .map(({ row, seats }) => {\r\n        return { row, seats: seats.sort((a, b) => a - b) };\r\n      });\r\n\r\n    return filtered;\r\n  } catch (err) {\r\n    redirectError(history, err);\r\n  }\r\n};\r\n\r\nexport const setTakenSeats = (data = []) => {\r\n  return data.map(({ seat_id: { row, seatNumber } }) => {\r\n    return { row: row, seats: seatNumber };\r\n  });\r\n};\r\n\r\nexport const restartRowAndSeatUI = () => {\r\n  return {\r\n    choosenRow: null,\r\n    choosenSeat: null,\r\n    freeSeats: [],\r\n    rowsList: [],\r\n  };\r\n};\r\n","import React from 'react';\r\n\r\nimport { isEqual as isSeatDefined } from '../../../services/predicates';\r\nimport { dateFormat } from '../../tickets_components/Reservation/parts/BuyTicket/parts/assistiveFunctions';\r\nimport './ScreeningInfo.css';\r\n\r\n/*** Component ***/\r\nconst ScreeningInfo = ({\r\n  seat,\r\n  screening,\r\n  classes: { timeClass, seatClass, wrapperClass },\r\n}) => {\r\n  if (!isSeatDefined(seat, undefined)) {\r\n    return (\r\n      <div className={`${wrapperClass} screeningInfo-wrapper`}>\r\n        <p className={`${timeClass} screeningInfo-time`}>\r\n          <span>{'Godzina: '}</span> {dateFormat(screening.time)}\r\n        </p>\r\n        <p className={`${seatClass} screeningInfo-seat`}>\r\n          <span>{'Sala: '}</span>\r\n          {seat.room_id.name}\r\n          <span>{', Rząd: '}</span>\r\n          {seat.row}\r\n          <span>{', Miejsce: '}</span>\r\n          {seat.seatNumber}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nScreeningInfo.defaultProps = {\r\n  classes: {\r\n    timeClass: '',\r\n    seatClass: '',\r\n    wrapperClass: '',\r\n  },\r\n};\r\n\r\nexport default ScreeningInfo;\r\n","import React from 'react';\r\n\r\nimport { baseUrl } from '../../../../services/apis/baseFetch';\r\nimport { isLower as doesUserHasTickets } from '../../../../services/predicates';\r\nimport MoviePoster from '../../../low-level_components/MoviePoster/MoviePoster';\r\nimport MovieInfo from '../../../low-level_components/MovieInfo/MovieInfo';\r\nimport ScreeningInfo from '../../../low-level_components/ScreeningInfo/ScreeningInfo';\r\n\r\n/*** Assistive Functions ***/\r\nconst renderTickets = (reservations, noTicketsText) => {\r\n  if (doesUserHasTickets(0, reservations.length)) {\r\n    return reservations.map(({ screening_id, seat_id, _id }) => {\r\n      let { imageUrl, title, description } = screening_id.movie_id;\r\n\r\n      return (\r\n        <div className=\"myTickets-innerWrapper\" key={_id}>\r\n          <MoviePoster src={`${baseUrl}${imageUrl}`} alt={title} />\r\n\r\n          <div className=\"myTickets-utils\">\r\n            <MovieInfo movie={{ description, title }} />\r\n            <ScreeningInfo seat={seat_id} screening={screening_id} />\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n  return <div className=\"myTickets-noTickets\">{noTicketsText}</div>;\r\n};\r\n\r\n/*** Component ***/\r\nexport const Movies = ({ reservations, noTicketsText }) => {\r\n  return (\r\n    <div className=\"myTickets-wrapper\">\r\n      {renderTickets(reservations, noTicketsText)}\r\n    </div>\r\n  );\r\n};\r\n\r\nMovies.defaultProps = {\r\n  noTicketsText: 'Brak biletów do wyświetlenia',\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nimport { handleErrors } from '../../../services/errors handling/handleErrors';\r\nimport redirectError from '../../../services/errors handling/redirectError';\r\nimport baseFetch from '../../../services/apis/baseFetch';\r\nimport { getItem as getUserId } from '../../../services/localStorage';\r\nimport { getItem as getToken } from '../../../services/localStorage';\r\nimport { isEqual as areReservationsFetched } from '../../../services/predicates';\r\nimport { isEqual as isUserLoggedIn } from '../../../services/predicates';\r\nimport Loading from '../../conditional_components/Loading/Loading';\r\nimport { LogInNeeded } from '../../conditional_components/LogInNeeded/LogInNeeded';\r\nimport { Movies } from './parts/Movies';\r\nimport './MyTickets.css';\r\n\r\n/*** Component ***/\r\nexport class MyTickets extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user_id: getUserId('userId'),\r\n      reservations: null,\r\n    };\r\n  }\r\n\r\n  /* Lifecycle Methods */\r\n  async componentDidMount() {\r\n    if (\r\n      !(\r\n        isUserLoggedIn(this.state.user_id, '') ||\r\n        isUserLoggedIn(this.state.user_id, null)\r\n      )\r\n    ) {\r\n      try {\r\n        const resp = await baseFetch({\r\n          path: `api/reservation/${this.state.user_id}/none`,\r\n          authToken: getToken('token'),\r\n        });\r\n\r\n        handleErrors(resp.status);\r\n\r\n        const reservations = await resp.json();\r\n\r\n        this.setState({ reservations });\r\n      } catch (err) {\r\n        redirectError(this.props.history, err);\r\n      }\r\n    }\r\n  }\r\n\r\n  /* Assistive Methods */\r\n  renderTickets = ({ user_id, reservations }) => {\r\n    if (isUserLoggedIn(user_id, '') || isUserLoggedIn(user_id, null)) {\r\n      setTimeout(() => {\r\n        this.props.history.push('/login');\r\n      }, 1000);\r\n      return <LogInNeeded />;\r\n    } else if (areReservationsFetched(reservations, null)) {\r\n      return <Loading />;\r\n    } else {\r\n      return (\r\n        <div className='myTickets-outerWrapper'>\r\n          <Movies reservations={reservations} />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  /* Render */\r\n  render() {\r\n    return this.renderTickets(this.state, this.props);\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport './PriceList.css';\r\n\r\n/*** Assistive Functions ***/\r\nconst renderRows = (table) => {\r\n  const rows = [];\r\n\r\n  for (let el in table) {\r\n    rows.push(\r\n      table[el].map((item, index) => {\r\n        return <td key={index}>{item}</td>;\r\n      })\r\n    );\r\n  }\r\n\r\n  return rows;\r\n};\r\n\r\nconst renderTable = (rows, rowClass) => {\r\n  let table = rows.map((row, index) => {\r\n    return (\r\n      <tr className={`priceList-row ${rowClass}`} key={index}>\r\n        {row}\r\n      </tr>\r\n    );\r\n  });\r\n  return table;\r\n};\r\n\r\n/*** Component ***/\r\nconst PriceList = ({\r\n  title,\r\n  prices,\r\n  classes: { titleClass, tableClass, rowClass },\r\n}) => {\r\n  return (\r\n    <>\r\n      <div className={`priceList-title ${titleClass}`}>{title}</div>\r\n      <table className={`priceList-table ${tableClass}`}>\r\n        <tbody>{renderTable(renderRows(prices), rowClass)}</tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nPriceList.defaultProps = {\r\n  classes: {\r\n    titleClass: '',\r\n    tableClass: '',\r\n    rowClass: '',\r\n  },\r\n};\r\n\r\nexport default PriceList;\r\n","const prices = {\r\n  twoD: {\r\n    openDays: ['', 'Poniedziałek', 'Wtorek-Piątek', 'Weekend'],\r\n    normalTicket: ['Bilet normalny', '15 zł', '21 zł', '25zł'],\r\n    kidPupilTicket: ['Dziecięcy i Studencki', '10zł', '16zł', '16zł'],\r\n    senior: ['Emeryci', '12zł', '17zł', '18zł']\r\n  },\r\n  threeD: {\r\n    openDays: ['', 'Poniedziałek', 'Wtorek-Piątek', 'Weekend'],\r\n    normalTicket: ['Bilet normalny', '25 zł', '28 zł', '30zł'],\r\n    kidPupilTicket: ['Dziecięcy i Studencki', '18zł', '20zł', '22zł'],\r\n    senior: ['Emeryci', '20zł', '22zł', '26zł']\r\n  }\r\n};\r\n\r\nexport default prices;\r\n","import React from 'react';\r\n\r\nimport PriceList from './parts/PriceList/PriceList';\r\nimport pricesData from './parts/pricesData';\r\nimport './Prices.css';\r\n\r\n/*** Component ***/\r\nconst Prices = (props) => {\r\n  return (\r\n    <div className=\"prices-wrapper\">\r\n      <div className=\"prices-content\">\r\n        <h1 className=\"prices-title\">Ceny biletów</h1>\r\n\r\n        <PriceList prices={pricesData.twoD} title=\"FILMY 2D\" />\r\n\r\n        <PriceList prices={pricesData.threeD} title=\"FILMY 3D\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Prices;\r\n","import React from 'react';\r\n\r\nimport { baseUrl } from '../../../../../services/apis/baseFetch';\r\nimport MoviePoster from '../../../../low-level_components/MoviePoster/MoviePoster';\r\nimport MovieInfo from '../../../../low-level_components/MovieInfo/MovieInfo';\r\nimport './Movie.css';\r\n\r\n/*** Assistive Functions ***/\r\nconst renderMovie = ({ _id, imageUrl, title, description }) => {\r\n  return (\r\n    <div className='movie-wrapper' key={_id}>\r\n      <MoviePoster src={`${baseUrl}${imageUrl}`} alt={title} />\r\n\r\n      <div className='movie-utils'>\r\n        <MovieInfo movie={{ description, title }} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n/*** Component ***/\r\nconst Movie = ({ movie }) => {\r\n  return renderMovie(movie);\r\n};\r\n\r\nexport default Movie;\r\n","import React from 'react';\r\n\r\nimport { isEqual } from '../../../services/predicates';\r\nimport './Select.css';\r\n\r\n/*** Assistive Functions ***/\r\nconst doesDataExist = (dataArr) => {\r\n  return !dataArr.every((elem) => isEqual(elem, undefined));\r\n};\r\n\r\nconst renderOptionTags = (\r\n  optionTitleProp,\r\n  dataArr,\r\n  optionContentFunc,\r\n  optionValueFunc,\r\n  fallbackValueProp\r\n) => {\r\n  if (doesDataExist(dataArr)) {\r\n    return (\r\n      <>\r\n        <option>{optionTitleProp}</option>\r\n        {dataArr.map((item, index) => {\r\n          return (\r\n            <option key={index} value={optionValueFunc(item)}>\r\n              {optionContentFunc(item)}\r\n            </option>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  } else return <option>{fallbackValueProp}</option>;\r\n};\r\n\r\n/*** Component ***/\r\nconst Select = ({\r\n  selectNameProp,\r\n  classes,\r\n  labelTextProp,\r\n  spinnerComp,\r\n  optionTitleProp,\r\n  dataArr,\r\n  optionContentFunc,\r\n  optionValueFunc,\r\n  fallbackValueProp,\r\n  handlerFunc,\r\n  reference,\r\n}) => {\r\n  return (\r\n    <label>\r\n      <div style={{ display: 'inline' }}>{labelTextProp}</div>\r\n      {spinnerComp}\r\n      <select\r\n        name={selectNameProp}\r\n        className={classes}\r\n        ref={reference}\r\n        onChange={handlerFunc}\r\n      >\r\n        {renderOptionTags(\r\n          optionTitleProp,\r\n          dataArr,\r\n          optionContentFunc,\r\n          optionValueFunc,\r\n          fallbackValueProp\r\n        )}\r\n      </select>\r\n    </label>\r\n  );\r\n};\r\n\r\nSelect.defaultProps = {\r\n  classes: '',\r\n  fallbackValueProp: 'Brak dostępnych terminów',\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from 'react';\r\n\r\nimport timeout from '../../../../../services/timeout';\r\nimport redirectError from '../../../../../services/errors handling/redirectError';\r\nimport { handleErrors } from '../../../../../services/errors handling/handleErrors';\r\nimport { getItem as getToken } from '../../../../../services/localStorage';\r\nimport baseFetch from '../../../../../services/apis/baseFetch';\r\nimport { isEqual } from '../../../../../services/predicates';\r\nimport LoadingSpinner from '../../../../low-level_components/LoadingSpinner/LoadingSpinner';\r\nimport {\r\n  startLoading,\r\n  finishLoading,\r\n  enableElement as enableBtn,\r\n  disableElement as disableBtn,\r\n} from '../../../../../assistive functions';\r\nimport Select from '../../../../low-level_components/Select/Select';\r\nimport { SubmitBtn as ReservationBtn } from '../../../../low-level_components/SubmitBtn/SubmitBtn';\r\nimport {\r\n  getAllSeats,\r\n  dateTitleProp,\r\n  dateFormat,\r\n  restartRowAndSeatUI,\r\n  setTakenSeats,\r\n} from './parts/assistiveFunctions';\r\n\r\n/*** Variables ***/\r\nconst classes = {\r\n  invalidSubmit: 'invalidSubmit',\r\n  validSubmit: 'validSubmit',\r\n  cursorAuto: 'cursor-auto',\r\n  cursorPointer: 'cursor-pointer',\r\n};\r\n\r\n/*** Component ***/\r\nclass BuyTicket extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      movie_id: null,\r\n      user_id: this.props.user_id,\r\n      screenings: [],\r\n      screening_id: null,\r\n      room: '',\r\n      room_id: null,\r\n      rowsList: [],\r\n      rowsWithSeats: [],\r\n      immutableRows: [],\r\n      reservationDone: false,\r\n      takenSeats: [],\r\n      freeSeats: [],\r\n      choosenRow: null,\r\n      choosenSeat: null,\r\n      seat_id: '',\r\n      afterSubmitInfo: '',\r\n      reservation: {},\r\n    };\r\n    this.selectDateRef = React.createRef();\r\n    this.selectRowRef = React.createRef();\r\n    this.selectSeatRef = React.createRef();\r\n    this.afterSubmitInfoRef = React.createRef();\r\n    this.loadingSpinnerRef = React.createRef();\r\n    this.reservationSpinnerRef = React.createRef();\r\n    this.reservationBtnRef = React.createRef();\r\n  }\r\n\r\n  /* Lifecycle Methods*/\r\n  async componentDidMount() {\r\n    startLoading(this.loadingSpinnerRef.current);\r\n    let screenings;\r\n    try {\r\n      const resp = await baseFetch({\r\n        path: `api/screening/${this.props.movie_id}/${this.props.screening_id}`,\r\n        authToken: getToken('token'),\r\n      });\r\n\r\n      handleErrors(resp.status);\r\n      screenings = await resp.json();\r\n    } catch (err) {\r\n      redirectError(this.props.history, err);\r\n    }\r\n\r\n    this.setAnyState(\r\n      {\r\n        screenings,\r\n      },\r\n      () => {\r\n        finishLoading(this.loadingSpinnerRef.current);\r\n      }\r\n    );\r\n  }\r\n\r\n  /* Assistive Methods */\r\n  setAnyState = (receivedState, cb) => {\r\n    const newState = Object.assign(\r\n      {},\r\n      {\r\n        ...this.state,\r\n      },\r\n      receivedState\r\n    );\r\n    this.setState(newState, cb);\r\n  };\r\n\r\n  setRowsList = () => {\r\n    return this.state.rowsWithSeats\r\n      .map(({ row, seats }) => {\r\n        if (!seats.every((seat) => isEqual(seat, null))) return row;\r\n      })\r\n      .filter((row) => row);\r\n  };\r\n\r\n  checkAvailableSeats = async (cb) => {\r\n    let existingReservations;\r\n    try {\r\n      const resp = await baseFetch({\r\n        path: `api/reservation/none/${this.state.screening_id}`,\r\n        authToken: getToken('token'),\r\n      });\r\n\r\n      handleErrors(resp.status);\r\n\r\n      existingReservations = await resp.json();\r\n    } catch (err) {\r\n      redirectError(this.props.history, err);\r\n    }\r\n\r\n    this.setAnyState(\r\n      { takenSeats: setTakenSeats(existingReservations) },\r\n      async () => {\r\n        await this.calculateFreeSeats();\r\n        cb();\r\n      }\r\n    );\r\n  };\r\n\r\n  getScreeningData = async () => {\r\n    if (!isEqual(this.state.screening_id, null)) {\r\n      startLoading(this.loadingSpinnerRef.current);\r\n\r\n      let screening;\r\n      try {\r\n        const resp = await baseFetch({\r\n          path: `api/screening/${this.state.movie_id}/${this.state.screening_id}`,\r\n          authToken: getToken('token'),\r\n        });\r\n\r\n        handleErrors(resp.status);\r\n\r\n        screening = await resp.json();\r\n      } catch (err) {\r\n        redirectError(this.props.history, err);\r\n      }\r\n\r\n      const setNewState = () => {\r\n        this.setAnyState(\r\n          {\r\n            ...restartRowAndSeatUI(),\r\n          },\r\n          () => {\r\n            this.setAnyState(\r\n              {\r\n                room: screening.room_id.name,\r\n                rowsList: this.setRowsList(),\r\n              },\r\n              () => {\r\n                finishLoading(this.loadingSpinnerRef.current);\r\n              }\r\n            );\r\n          }\r\n        );\r\n      };\r\n\r\n      const room_id = screening.room_id._id;\r\n      this.setAnyState(\r\n        {\r\n          room_id,\r\n        },\r\n        async () => {\r\n          await this.checkAvailableSeats(setNewState);\r\n        }\r\n      );\r\n    } else {\r\n      this.setAnyState({\r\n        ...restartRowAndSeatUI(),\r\n        room: '',\r\n        room_id: '',\r\n      });\r\n    }\r\n  };\r\n\r\n  afterReservationUserInfo = (element, classToDel, classToAdd, time) => {\r\n    startLoading(element, classToDel, classToAdd);\r\n\r\n    timeout(() => {\r\n      this.setAnyState({ afterSubmitInfo: '' }, () => {\r\n        finishLoading(element);\r\n        this.enableReservation();\r\n      });\r\n    }, time);\r\n  };\r\n\r\n  checkReservationAttempt = (\r\n    message,\r\n    element,\r\n    classToDel,\r\n    classToAdd,\r\n    time\r\n  ) => {\r\n    this.setAnyState(\r\n      {\r\n        afterSubmitInfo: message,\r\n      },\r\n      () => {\r\n        this.afterReservationUserInfo(element, classToDel, classToAdd, time);\r\n      }\r\n    );\r\n  };\r\n\r\n  calculateFreeSeats = async () => {\r\n    let rowsWithSeats = await getAllSeats(\r\n      this.state.room_id,\r\n      this.props.history\r\n    );\r\n\r\n    // Computes which seats are free\r\n    rowsWithSeats.forEach(({ row, seats }, index) => {\r\n      this.state.takenSeats.forEach(({ row: takenRow, seats: takenSeat }) => {\r\n        if (isEqual(takenRow, row)) {\r\n          seats.forEach((seat) => {\r\n            if (isEqual(seat, takenSeat)) {\r\n              delete rowsWithSeats[index].seats[\r\n                rowsWithSeats[index].seats.indexOf(seat)\r\n              ];\r\n            }\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    this.setAnyState({ rowsWithSeats }, () => {\r\n      this.setState({\r\n        rowsList: this.setRowsList(),\r\n      });\r\n    });\r\n  };\r\n\r\n  checkConcurrentReservation = async () => {\r\n    let existingReservations;\r\n\r\n    try {\r\n      const resp = await baseFetch({\r\n        path: `api/reservation/none/${this.state.screening_id}`,\r\n        authToken: getToken('token'),\r\n      });\r\n\r\n      handleErrors(resp.status);\r\n      existingReservations = await resp.json();\r\n    } catch (err) {\r\n      redirectError(this.props.history, err);\r\n    }\r\n\r\n    const takenSeats = setTakenSeats(existingReservations);\r\n    const seat = {\r\n      row: this.state.choosenRow,\r\n      seats: this.state.choosenSeat,\r\n    };\r\n\r\n    const wasConcurrentReservationMade = takenSeats.some((rowObj) => {\r\n      return isEqual(rowObj.row, seat.row) && isEqual(rowObj.seats, seat.seats);\r\n    });\r\n\r\n    return wasConcurrentReservationMade;\r\n  };\r\n\r\n  reservationServerError = (err) => {\r\n    const { validSubmit, invalidSubmit } = classes;\r\n    this.checkReservationAttempt(\r\n      err.message,\r\n      this.afterSubmitInfoRef.current,\r\n      [validSubmit],\r\n      [invalidSubmit],\r\n      3000\r\n    );\r\n  };\r\n\r\n  makeNewReservation = async () => {\r\n    try {\r\n      // Checks if meanwhile another user haven't made the same reservation\r\n      if (await this.checkConcurrentReservation()) {\r\n        handleErrors(404, { concurrentReserv: true });\r\n      }\r\n      const reservationParams = {\r\n        user_id: this.state.user_id,\r\n        seat_id: this.state.seat_id,\r\n        screening_id: this.state.screening_id,\r\n      };\r\n\r\n      const { status: reservStatus } = await baseFetch({\r\n        path: 'api/reservation/',\r\n        authToken: getToken('token'),\r\n        method: 'POST',\r\n        body: JSON.stringify(reservationParams),\r\n      });\r\n\r\n      handleErrors(reservStatus);\r\n\r\n      const { validSubmit, invalidSubmit } = classes;\r\n      this.checkReservationAttempt(\r\n        'Zarezerwowano',\r\n        this.afterSubmitInfoRef.current,\r\n        [invalidSubmit],\r\n        [validSubmit],\r\n        3000\r\n      );\r\n\r\n      // Recalculates seats, after successful reservation\r\n      const setStateAfterNewReserv = () => {\r\n        const freeSeats = this.state.rowsWithSeats[this.state.choosenRow - 1]\r\n          .seats;\r\n        this.setAnyState(\r\n          {\r\n            freeSeats,\r\n            choosenSeat: null,\r\n          },\r\n          () => {\r\n            if (this.state.freeSeats.every((seat) => isEqual(seat, null)))\r\n              this.handleRowOptionChange();\r\n            this.enableReservation();\r\n          }\r\n        );\r\n      };\r\n\r\n      this.checkAvailableSeats(setStateAfterNewReserv);\r\n    } catch (err) {\r\n      this.reservationServerError(err);\r\n    }\r\n  };\r\n\r\n  enableReservation = () => {\r\n    const { cursorAuto, cursorPointer } = classes;\r\n    finishLoading(this.reservationSpinnerRef.current);\r\n    enableBtn(this.reservationBtnRef.current, [cursorPointer], [cursorAuto]);\r\n  };\r\n\r\n  /* Handlers */\r\n  handleDateOptionChange = async (e) => {\r\n    e.persist();\r\n\r\n    const screening_id = isEqual(\r\n      this.selectDateRef.current.value,\r\n      dateTitleProp()\r\n    )\r\n      ? null\r\n      : this.selectDateRef.current.value;\r\n\r\n    this.setAnyState({ screening_id, afterSubmitInfo: '' }, async () => {\r\n      this.getScreeningData();\r\n    });\r\n  };\r\n\r\n  handleRowOptionChange = () => {\r\n    let choosenRow = Number(this.selectRowRef.current.value);\r\n    let freeSeats;\r\n\r\n    // Validation of a choosen row\r\n    if (!isEqual(choosenRow.toString(), 'NaN')) {\r\n      freeSeats = this.state.rowsWithSeats[choosenRow - 1].seats;\r\n    } else {\r\n      choosenRow = null;\r\n      freeSeats = [];\r\n    }\r\n\r\n    this.setAnyState({ freeSeats: [] }, () => {\r\n      this.setAnyState({\r\n        freeSeats,\r\n        choosenRow,\r\n        choosenSeat: null,\r\n        afterSubmitInfo: '',\r\n      });\r\n    });\r\n  };\r\n\r\n  handleSeatOptionChange = (e) => {\r\n    const choosenSeat = Number(this.selectSeatRef.current.value);\r\n    this.setAnyState({ choosenSeat, afterSubmitInfo: '' });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Checks if user checked all required fields\r\n    if (\r\n      isEqual(this.state.choosenRow, null) ||\r\n      isEqual(this.state.choosenSeat, null) ||\r\n      isEqual(this.state.screening_id, null)\r\n    ) {\r\n      const { validSubmit, invalidSubmit } = classes;\r\n      this.checkReservationAttempt(\r\n        'Musisz dokonać wyboru',\r\n        this.afterSubmitInfoRef.current,\r\n        [validSubmit],\r\n        [invalidSubmit],\r\n        1500\r\n      );\r\n    } else {\r\n      const { cursorAuto, cursorPointer } = classes;\r\n      disableBtn(this.reservationBtnRef.current, [cursorAuto], [cursorPointer]);\r\n      startLoading(this.reservationSpinnerRef.current);\r\n\r\n      try {\r\n        // Fetches seat which is to be booked\r\n        const resp = await baseFetch({\r\n          path: `api/seat/${this.state.room_id}/${this.state.choosenRow}/${this.state.choosenSeat}`,\r\n          authToken: getToken('token'),\r\n        });\r\n\r\n        handleErrors(resp.status);\r\n        const { _id: seat_id } = await resp.json();\r\n\r\n        // Makes new reservation\r\n        this.setAnyState({ seat_id }, this.makeNewReservation);\r\n      } catch (err) {\r\n        this.reservationServerError(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  /* Render */\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div className='buyTicket-wrapper'>\r\n          <Select\r\n            classes='data-select'\r\n            labelTextProp='Wybierz datę seansu:'\r\n            optionTitleProp={dateTitleProp()}\r\n            spinnerComp={<LoadingSpinner reference={this.loadingSpinnerRef} />}\r\n            dataArr={this.state.screenings}\r\n            optionContentFunc={(screening) => dateFormat(screening.time)}\r\n            optionValueFunc={(screening) => screening._id}\r\n            handlerFunc={this.handleDateOptionChange}\r\n            reference={this.selectDateRef}\r\n          />\r\n\r\n          <label>Sala: {this.state.room}</label>\r\n\r\n          <Select\r\n            selectNameProp='row'\r\n            classes='row-select'\r\n            labelTextProp='Rząd:'\r\n            optionTitleProp='Wybierz rząd'\r\n            dataArr={this.state.rowsList}\r\n            optionContentFunc={(rowNum) => rowNum}\r\n            optionValueFunc={(rowNum) => rowNum}\r\n            handlerFunc={this.handleRowOptionChange}\r\n            reference={this.selectRowRef}\r\n          />\r\n\r\n          <Select\r\n            selectNameProp='seat'\r\n            classes='seat-select'\r\n            labelTextProp='Miejsce:'\r\n            optionTitleProp='Wybierz miejsce'\r\n            dataArr={this.state.freeSeats}\r\n            optionContentFunc={(free) => free}\r\n            optionValueFunc={(free) => free}\r\n            handlerFunc={this.handleSeatOptionChange}\r\n            reference={this.selectSeatRef}\r\n          />\r\n\r\n          <ReservationBtn\r\n            btnText='Zarezerwuj'\r\n            classes={`reservationBtn ${classes.cursorPointer}`}\r\n            reference={this.reservationBtnRef}\r\n          >\r\n            <LoadingSpinner\r\n              reference={this.reservationSpinnerRef}\r\n              classes={{\r\n                outerWrapper: 'reservSpinner-outerWrapper',\r\n                spinner: 'reservSpinner',\r\n              }}\r\n            />\r\n          </ReservationBtn>\r\n\r\n          <p className='afterSubmit invisible' ref={this.afterSubmitInfoRef}>\r\n            {this.state.afterSubmitInfo}\r\n          </p>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BuyTicket;\r\n","import React, { Component } from 'react';\r\n\r\nimport { scrollTop } from '../../../assistive functions';\r\nimport redirectError from '../../../services/errors handling/redirectError';\r\nimport { handleErrors } from '../../../services/errors handling/handleErrors';\r\nimport baseFetch from '../../../services/apis/baseFetch';\r\nimport {\r\n  isEqual as isUserLoggedIn,\r\n  isEqual as isMovieFetched,\r\n} from '../../../services/predicates';\r\nimport { getItem as getId } from '../../../services/localStorage';\r\nimport { getItem as getToken } from '../../../services/localStorage';\r\nimport { LogInNeeded } from '../../conditional_components/LogInNeeded/LogInNeeded';\r\nimport Loading from '../../conditional_components/Loading/Loading';\r\nimport Movie from './parts/Movie/Movie';\r\nimport BuyTicket from './parts/BuyTicket/BuyTicket';\r\nimport '../../tickets_components/MyTickets/MyTickets.css';\r\nimport './Reservation.css';\r\n\r\n/*** Component ***/\r\nclass Reservation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user_id: getId('userId'),\r\n      movie_id: '',\r\n      movie: null,\r\n    };\r\n    this.wrapperRef = React.createRef();\r\n  }\r\n\r\n  /* Lifycycle Methods */\r\n  async componentDidMount() {\r\n    const movie_id = getId('movieId');\r\n\r\n    if (\r\n      !(\r\n        isUserLoggedIn(this.state.user_id, '') ||\r\n        isUserLoggedIn(this.state.user_id, null)\r\n      )\r\n    ) {\r\n      try {\r\n        const resp = await baseFetch({\r\n          path: `api/movie/${movie_id}`,\r\n          authToken: getToken('token'),\r\n        });\r\n\r\n        handleErrors(resp.status);\r\n\r\n        const movie = await resp.json();\r\n        this.setState({\r\n          movie_id,\r\n          movie,\r\n        });\r\n      } catch (err) {\r\n        redirectError(this.props.history, err);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    scrollTop();\r\n  }\r\n\r\n  /* Assistive Methods */\r\n  renderReservation = () => {\r\n    if (\r\n      isUserLoggedIn(this.state.user_id, '') ||\r\n      isUserLoggedIn(this.state.user_id, null)\r\n    ) {\r\n      setTimeout(() => {\r\n        this.props.history.push('/login');\r\n      }, 1000);\r\n\r\n      return <LogInNeeded />;\r\n    } else if (isMovieFetched(this.state.movie, null)) {\r\n      return <Loading />;\r\n    } else {\r\n      return (\r\n        <div className='reservation-outerWrapper'>\r\n          <div className='reservation-wrapper' ref={this.wrapperRef}>\r\n            <div className='reservation-itemWrapper'>\r\n              <Movie movie={this.state.movie} />\r\n            </div>\r\n\r\n            <div className='reservation-itemWrapper'>\r\n              <BuyTicket\r\n                history={this.props.history}\r\n                movie_id={this.state.movie_id}\r\n                user_id={this.state.user_id}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  /* Render */\r\n  render() {\r\n    return this.renderReservation();\r\n  }\r\n}\r\n\r\nexport default Reservation;\r\n","import React from 'react';\r\n\r\nimport { isEqual } from '../../services/predicates';\r\nimport './ServerError.css';\r\nimport { scrollTop } from '../../assistive functions';\r\n\r\n/*** Component ***/\r\nclass ServerError extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errMsg: '',\r\n      errCode: 0,\r\n    };\r\n  }\r\n\r\n  /* Lifecycle Methods */\r\n  componentDidMount() {\r\n    scrollTop();\r\n    if (this.props.history.location.state) {\r\n      const { message, statusCode } = this.props.history.location.state.err;\r\n\r\n      this.setState({\r\n        errMsg: message,\r\n        errCode: isEqual(statusCode, undefined) ? 500 : statusCode,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        errMsg: 'Wystąpił błąd. Spróbuj ponownie później.',\r\n        errCode: 500,\r\n      });\r\n    }\r\n  }\r\n\r\n  /* Render */\r\n  render() {\r\n    return (\r\n      <div className='serverError-outerWrapper'>\r\n        <div className='serverError-wrapper'>\r\n          <h1>{`Error ${this.state.errCode}`}</h1>\r\n          <h2>{`${this.state.errMsg}`}</h2>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ServerError;\r\n","import React from 'react';\r\n\r\nimport { scrollTop } from '../../assistive functions';\r\nimport { clearLocalStorage, getItem } from '../../services/localStorage';\r\nimport './AutoLogout.css';\r\n\r\n/*** Component ***/\r\nclass AutoLogout extends React.Component {\r\n  /* Lifecycle Methods */\r\n  componentDidMount() {\r\n    scrollTop();\r\n    clearInterval(getItem('intervalId'));\r\n    clearLocalStorage();\r\n  }\r\n\r\n  /* Render */\r\n  render() {\r\n    return (\r\n      <div className='autologout-wrapper'>\r\n        <h1 className='autologout-info'>{this.props.infoText}</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAutoLogout.defaultProps = {\r\n  infoText: 'Zostałeś automatycznie wylogowany.',\r\n};\r\n\r\nexport default AutoLogout;\r\n","import HomePage from '../../HomePage/HomePage';\r\nimport ContactUs from '../../ContactUs/ContactUs';\r\nimport Register from '../../Register/Register';\r\nimport Login from '../../Login/Login';\r\nimport { MyTickets } from '../../tickets_components/MyTickets/MyTickets';\r\nimport Prices from '../../Prices/Prices';\r\nimport Reservation from '../../tickets_components/Reservation/Reservation';\r\nimport ServerError from '../../ServerError/ServerError';\r\nimport AutoLogout from '../../AutoLogout/AutoLogout';\r\n\r\nexport const appName = '';\r\n\r\nconst routingData = [\r\n  { path: `/`, component: HomePage },\r\n  { path: `/contact`, component: ContactUs },\r\n  { path: `/register`, component: Register },\r\n  { path: `/login`, component: Login },\r\n  { path: `/mytickets`, component: MyTickets },\r\n  { path: `/prices`, component: Prices },\r\n  { path: `/reservation`, component: Reservation },\r\n  { path: `/servererror`, component: ServerError },\r\n  { path: `/autologout`, component: AutoLogout },\r\n];\r\n\r\nconst routingList = routingData.map(({ path, component }) => {\r\n  return { path: `${appName}${path}`, exact: true, component };\r\n});\r\n\r\nexport default routingList;\r\n","import { appName } from '../../App/routing/routingList';\r\n\r\nconst linksList = [\r\n  { to: `${appName}/`, content: 'Oferta', name: 'Homepage' },\r\n  { to: `${appName}/prices`, content: 'Cennik', name: 'PriceList' },\r\n  { to: `${appName}/mytickets`, content: 'Moje bilety', name: 'MyTickets' },\r\n  { to: `${appName}/register`, content: 'Rejestracja', name: 'Register' },\r\n  {\r\n    to: `${appName}/login`,\r\n    content: 'Zaloguj',\r\n    name: 'Login',\r\n  },\r\n];\r\n\r\nexport default linksList;\r\n","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport timeout from '../../services/timeout';\r\nimport { getItem as getUserId } from '../../services/localStorage';\r\nimport {\r\n  isEqual,\r\n  isLowerEqual as isHigherEqual,\r\n} from '../../services/predicates';\r\nimport {\r\n  addClasses,\r\n  removeClasses,\r\n  modifyClasses,\r\n} from '../../assistive functions';\r\nimport linksList from './parts/linksList';\r\nimport './NavBar.css';\r\n\r\nLink.defaultProps = {\r\n  className: 'navBar-item',\r\n};\r\n\r\n/*** Variable ***/\r\nconst classes = {\r\n  visible: 'visible',\r\n  invisible: 'invisible',\r\n  horizontalNav: 'horizontalNav',\r\n  dropdownNav: 'dropdownNav',\r\n  navBarActiveItem: 'navBar-activeItem',\r\n  navBarWrapperAnimation: 'navBar-wrapper-animation',\r\n  navBarMenuIconAnimation: 'navBar-menuIcon-animation',\r\n};\r\n\r\n/*** Component ***/\r\nclass NavBar extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loginBtn: '',\r\n      windowWidth: window.innerWidth,\r\n      currentPathName: this.props.location.pathname,\r\n      expanded: false,\r\n      dropdown: isHigherEqual(660, window.innerWidth) ? true : false,\r\n    };\r\n    this.inputRef = React.createRef();\r\n    this.iconWrapperRef = React.createRef();\r\n    this.wrapperRef = React.createRef();\r\n    this.outerWrapperRef = React.createRef();\r\n  }\r\n\r\n  /* Lifecycle Methods */\r\n  componentDidMount() {\r\n    const { horizontalNav, dropdownNav } = classes;\r\n    this.setState({ loginBtn: this.setLoginBtnText() });\r\n    if (this.state.dropdown) {\r\n      modifyClasses(this.wrapperRef.current, [horizontalNav], [dropdownNav]);\r\n    } else {\r\n      modifyClasses(this.wrapperRef.current, [dropdownNav], [horizontalNav]);\r\n    }\r\n\r\n    window.addEventListener('resize', this.handleWindowResize);\r\n    this.outerWrapperRef.current.addEventListener(\r\n      'blur',\r\n      this.hideNavLinksWrapperFunc\r\n    );\r\n\r\n    this.setActiveNavTab();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.setState(\r\n      {\r\n        loginBtn: this.setLoginBtnText(),\r\n        currentPathName: this.props.location.pathname,\r\n      },\r\n      () => {\r\n        this.setActiveNavTab();\r\n      }\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.handleWindowResize);\r\n    this.outerWrapperRef.current.removeEventListener(\r\n      'blur',\r\n      this.hideNavLinksWrapperFunc\r\n    );\r\n  }\r\n\r\n  /* Assistive Methods */\r\n  setLoginBtnText = () => {\r\n    return getUserId('userId') ? 'Wyloguj' : 'Zaloguj';\r\n  };\r\n\r\n  handleWindowResize = () => {\r\n    const { dropdownNav, invisible, horizontalNav } = classes;\r\n    if (isHigherEqual(window.innerWidth, 660)) {\r\n      this.setState({ dropdown: false }, () => {\r\n        modifyClasses(\r\n          this.wrapperRef.current,\r\n          [dropdownNav, invisible],\r\n          [horizontalNav]\r\n        );\r\n      });\r\n    } else {\r\n      this.setState({ dropdown: true, expanded: false }, () => {\r\n        modifyClasses(this.wrapperRef.current, [horizontalNav], [dropdownNav]);\r\n      });\r\n    }\r\n  };\r\n\r\n  setActiveNavTab = () => {\r\n    const { navBarActiveItem } = classes;\r\n    const navChildren = Array.from(this.wrapperRef.current.children);\r\n    const activeChild = navChildren.find((aTag) => {\r\n      return isEqual(aTag.hash, `#${this.state.currentPathName}`);\r\n    });\r\n\r\n    navChildren.forEach((aTag) => removeClasses(aTag, navBarActiveItem));\r\n    if (activeChild) addClasses(activeChild, navBarActiveItem);\r\n  };\r\n\r\n  handleIconClick = () => {\r\n    const {\r\n      visible,\r\n      invisible,\r\n      navBarWrapperAnimation,\r\n      navBarMenuIconAnimation,\r\n    } = classes;\r\n    if (this.state.expanded) {\r\n      modifyClasses(this.wrapperRef.current, [visible], [invisible]);\r\n      this.setState({ expanded: false });\r\n    } else {\r\n      addClasses(this.wrapperRef.current, [navBarWrapperAnimation]);\r\n      addClasses(this.iconWrapperRef.current, [navBarMenuIconAnimation]);\r\n      timeout(() => {\r\n        removeClasses(this.wrapperRef.current, [navBarWrapperAnimation]);\r\n        removeClasses(this.iconWrapperRef.current, [navBarMenuIconAnimation]);\r\n      }, 2000);\r\n      modifyClasses(this.wrapperRef.current, [invisible], [visible]);\r\n      this.setState({ expanded: true });\r\n    }\r\n  };\r\n\r\n  hideNavLinks = (isDropdown) => {\r\n    const { visible, invisible } = classes;\r\n    if (isDropdown) {\r\n      timeout(() => {\r\n        this.setState({ expanded: false }, () => {\r\n          modifyClasses(this.wrapperRef.current, [visible], [invisible]);\r\n        });\r\n      }, 250);\r\n    }\r\n  };\r\n\r\n  hideNavLinksWrapperFunc = () => this.hideNavLinks(this.state.dropdown);\r\n\r\n  renderLinks = () => {\r\n    return linksList.map(({ to, content, name }, index) => {\r\n      if (isEqual(name, 'Login')) content = this.state.loginBtn;\r\n      return (\r\n        <Link key={index} to={to}>\r\n          {content}\r\n        </Link>\r\n      );\r\n    });\r\n  };\r\n\r\n  renderDropdownIcon = (isExpanded) => {\r\n    if (isExpanded) {\r\n      return <FontAwesomeIcon icon={faTimes} onClick={this.handleIconClick} />;\r\n    } else {\r\n      return <FontAwesomeIcon icon={faBars} onClick={this.handleIconClick} />;\r\n    }\r\n  };\r\n\r\n  renderDropdownNav = (isExpanded) => {\r\n    return this.renderHorizontalNav(() => this.renderDropdownIcon(isExpanded));\r\n  };\r\n\r\n  renderHorizontalNav = (renderAdditionalChildren = () => {}) => {\r\n    return (\r\n      <div\r\n        className='navBar-outerWrapper'\r\n        ref={this.outerWrapperRef}\r\n        tabIndex='0'\r\n      >\r\n        <div className='iconWrapperRef' ref={this.iconWrapperRef}>\r\n          {renderAdditionalChildren()}\r\n        </div>\r\n        <div className='navBar-wrapper' ref={this.wrapperRef}>\r\n          {this.renderLinks()}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /* Render */\r\n  render() {\r\n    if (this.state.dropdown) {\r\n      return this.renderDropdownNav(this.state.expanded);\r\n    } else {\r\n      return this.renderHorizontalNav();\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(NavBar);\r\n","import React from 'react';\r\n\r\nimport './Attribution.css';\r\n\r\n/*** Component ***/\r\nconst Attribution = () => {\r\n  return (\r\n    <div className=\"item attribution\">\r\n      <a className=\"item\" href=\"http://loading.io\" target=\"blank\">\r\n        the spinner \"Ellipsis\" is provided by loading.io\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Attribution;\r\n","import React from 'react';\r\n\r\n/*** Component ***/\r\nconst CinemasList = ({ className, cinemasList }) => {\r\n  return cinemasList.map(({ content }, index) => {\r\n    return (\r\n      <div className={className} key={index}>\r\n        {content}\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\nCinemasList.defaultProps = {\r\n  className: 'item',\r\n};\r\n\r\nexport default CinemasList;\r\n","export const cinemasList = [\r\n  { content: 'Katowice' },\r\n  { content: 'Kraków' },\r\n  { content: 'Łódź' },\r\n  { content: 'Poznań' },\r\n  { content: 'Sopot' },\r\n  { content: 'Warszawa' },\r\n  { content: 'Wrocław' },\r\n  { content: 'Zgorzelec' },\r\n];\r\n","import React from 'react';\r\n\r\nimport CinemasList from '../CinemasList/CinemasList';\r\nimport { cinemasList } from '../CinemasList/data';\r\n\r\n/*** Component ***/\r\nconst OurCinemas = () => {\r\n  return (\r\n    <div className=\"item\">\r\n      <h2>NASZE KINA</h2>\r\n      <div className=\"ui list\">\r\n        <CinemasList cinemasList={cinemasList} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OurCinemas;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { appName } from '../../../App/routing/routingList';\r\n\r\n/*** Component ***/\r\nconst ContactsLink = () => {\r\n  return (\r\n    <div className=\"item\">\r\n      <h2>KONTAKT</h2>\r\n      <div className=\"ui list\">\r\n        <Link to={`${appName}/contact`} className=\"item\">\r\n          Kontakt\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactsLink;\r\n","import React from 'react';\r\n\r\n/*** Component ***/\r\nconst Applications = ({ dataList }) => {\r\n  const picsList = () => {\r\n    return dataList.map(({ className, src, alt }, index) => {\r\n      return (\r\n        <div key={index} className=\"item\">\r\n          <img className={className} src={src} alt={alt} />\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"item\">\r\n      <h2>APLIKACJA MINIKINO</h2>\r\n      <div className=\"ui list\">{picsList()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Applications;\r\n","export const picsData = [\r\n  { className: 'footer-app-and', src: 'img/app-and.jpg', alt: 'Android' },\r\n  { className: 'footer-app-ios', src: 'img/app-mob.jpg', alt: 'IOS' },\r\n];\r\n","import React from 'react';\r\n\r\nimport Attribution from './parts/Attribution/Attribution';\r\nimport OurCinemas from './parts/OurCinemas/OurCinemas';\r\nimport ContactLink from './parts/ContactLink/ContactLink';\r\nimport Applications from './parts/Applications/Applications';\r\nimport { picsData } from './parts/Applications/data';\r\nimport './Footer.css';\r\n\r\n/*** Component ***/\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer-outerWrapper\">\r\n      <div className=\"footer-wrapper\">\r\n        <OurCinemas />\r\n        <Applications dataList={picsData} />\r\n        <ContactLink />\r\n      </div>\r\n      <Attribution />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { Route, withRouter } from 'react-router-dom';\r\n\r\nimport timeout from '../../services/timeout';\r\nimport {\r\n  getItem as getExpiresIn,\r\n  clearLocalStorage,\r\n} from '../../services/localStorage';\r\nimport { setItem as setAutoLogoutTimerId } from '../../services/localStorage';\r\nimport { setItem as setAutoLogoutReminderTimerId } from '../../services/localStorage';\r\nimport AutoLogoutReminder from '../AutoLogoutReminder/AutoLogoutReminder';\r\nimport NavBar from '../NavBar/NavBar';\r\nimport Footer from '../Footer/Footer';\r\nimport routingList from '../App/routing/routingList';\r\nimport './App.css';\r\n\r\n/*** Component ***/\r\nclass App extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      reminder: false,\r\n    };\r\n    this.appWrapperRef = React.createRef();\r\n    this.mainContainerRef = React.createRef();\r\n  }\r\n\r\n  /* Lifecycle Methods */\r\n  componentDidMount() {\r\n    const expiresIn = getExpiresIn('expiresIn');\r\n    if (expiresIn) {\r\n      this.handleAutoLogout(expiresIn);\r\n      this.handleAutoLogoutReminder(expiresIn);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const expiresIn = getExpiresIn('expiresIn');\r\n    this.handleAutoLogoutReminder(expiresIn);\r\n  }\r\n\r\n  /* Assistive Methods */\r\n  handleAutoLogout = (expiresIn) => {\r\n    if (Date.now() > expiresIn) {\r\n      clearLocalStorage();\r\n    } else {\r\n      const autoLogoutRedirect = () => {\r\n        this.props.history.push('/autologout');\r\n      };\r\n      const autoLogoutTimerId = timeout(\r\n        autoLogoutRedirect,\r\n        expiresIn - Date.now()\r\n      );\r\n      setAutoLogoutTimerId('autoLogoutTimerId', autoLogoutTimerId);\r\n    }\r\n  };\r\n\r\n  handleAutoLogoutReminder = (expiresIn) => {\r\n    const timeToShowReminder = 300000;\r\n    if (expiresIn && Date.now() - timeToShowReminder < expiresIn) {\r\n      const autoLogoutReminderCb = () => {\r\n        this.setState({ reminder: true });\r\n      };\r\n      const autoLogoutReminderTimerId = timeout(\r\n        autoLogoutReminderCb,\r\n        expiresIn - Date.now() - timeToShowReminder\r\n      );\r\n      setAutoLogoutReminderTimerId(\r\n        'autoLogoutReminderTimerId',\r\n        autoLogoutReminderTimerId\r\n      );\r\n    } else if (!expiresIn) {\r\n      this.setState({ reminder: false });\r\n    }\r\n  };\r\n\r\n  renderRouting = () => {\r\n    return routingList.map(({ path, component, exact }, index) => {\r\n      return (\r\n        <Route key={index} path={path} exact={exact} component={component} />\r\n      );\r\n    });\r\n  };\r\n\r\n  renderAutoLogoutReminder = () => {\r\n    if (this.state.reminder) return <AutoLogoutReminder />;\r\n  };\r\n\r\n  /* Render */\r\n  render() {\r\n    return (\r\n      <>\r\n        <NavBar />\r\n        <div className='main-container' ref={this.mainContainerRef}>\r\n          {this.renderRouting()}\r\n          {this.renderAutoLogoutReminder()}\r\n        </div>\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\n\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}